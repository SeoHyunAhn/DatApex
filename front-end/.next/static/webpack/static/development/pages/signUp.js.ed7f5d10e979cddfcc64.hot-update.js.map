{"version":3,"file":"static/webpack/static/development/pages/signUp.js.ed7f5d10e979cddfcc64.hot-update.js","sources":["webpack:///./pages/signUp.js"],"sourcesContent":["import React, { Component } from 'react';\nimport firebase from '../common/firebase';\n\nclass SignUp extends Component {\n    \n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <br />\n                        <h1>Register</h1>\n                        <hr></hr>\n                        <SignUpForm />\n                    </div>\n                </div>\n                \n            </div>\n        );\n    }\n}\n\nclass SignUpForm extends Component {\n    state = {\n        id: '',\n        email: '',\n        password: '',\n        rePassword: '',\n        error: null,\n    };\n    \n    onSubmitForm = (e) => {\n        e.preventDefault();\n        \n        const { id, email, password, rePassword } = this.state;\n\n        if(password !== rePassword) {\n            alert(\"Password does not match!!!\");\n        }\n        else {\n            firebase.auth().createUserWithEmailAndPassword(email, password)\n                .then((user) => {\n                    alert(this.state.id);\n                    console.log(\"user+++++++++++++++++\");\n                    console.log(user);\n\n                    firebase.UserInfo.uid = this.state.id;\n                    \n                    window.location = \"/\";\n                })\n                .catch((error) => {\n                    alert(error);\n                    this.setState({ error: error });\n                });\n        }\n    };\n\n    input;\n\n    onRefInput = (c) => {\n        this.input = c;\n    };\n\n    onChangeInputId  = (e) => {\n        this.setState({\n            id : e.target.value\n        });\n    };\n\n    onChangeInputEmail  = (e) => {\n        this.setState({\n            email : e.target.value\n        });\n    };\n\n    onChangeInputPassword  = (e) => {\n        this.setState({\n            password : e.target.value\n        });\n    };\n\n    onChangeInputRePassword  = (e) => {\n        this.setState({\n            rePassword : e.target.value\n        });\n    };\n\n    render() {\n        \n        return (\n            <>\n                <form onSubmit={ this.onSubmitForm }>\n                    \n                    <div className=\"form-group\">\n                        <label>User ID: </label>\n                        <input type=\"text\" className=\"form-control\" placeholder=\"ID\" ref={ this.onRefInput } value={ this.state.id } onChange={ this.onChangeInputId } />\n                    </div>\n                    \n                    <div className=\"form-group\">\n                        <label>Email:</label>\n                        <input type=\"text\" className=\"form-control\" id=\"email\" placeholder=\"Email\" ref={ this.onRefInput } value={ this.state.email } onChange={ this.onChangeInputEmail } />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label>Password:</label>\n                        <input type=\"text\" className=\"form-control\" id=\"password\" placeholder=\"******\" ref={ this.onRefInput } value={ this.state.password } onChange={this.onChangeInputPassword} />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label>Re-enter Password:</label>\n                        <input type=\"text\" className=\"form-control\" id=\"password\" placeholder=\"******\" ref={ this.onRefInput } value={ this.state.rePassword } onChange={ this.onChangeInputRePassword } />\n                    </div>\n                    <br />\n                    <div className=\"text-center\">\n                        <button type=\"submit\" className=\"btn btn-primary btn-block\">Register</button>\n                    </div>\n                </form>\n            </>\n        );\n    }\n}\n\nexport default SignUp;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;AAhBA;AACA;AAkBA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;;;;;;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AAjGA;AACA;AAmGA;;;;A","sourceRoot":""}