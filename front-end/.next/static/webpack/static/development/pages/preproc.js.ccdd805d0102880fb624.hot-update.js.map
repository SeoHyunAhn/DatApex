{"version":3,"file":"static/webpack/static/development/pages/preproc.js.ccdd805d0102880fb624.hot-update.js","sources":["webpack:///./pages/preproc.js"],"sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Input,\n  Label\n} from \"reactstrap\";\nimport { CSVLink, CSVDownload } from \"react-csv\";\nimport UploadCSV from \"../components/Modal\";\n// import { Components } from \"@reactioncommerce/reaction-components\";\n\nconst posts = [\n  { path: \"label\", title: \"Label Encoding\" },\n  { path: \"one-hot\", title: \"One-Hot Encoding\" },\n  { path: \"delete-rc\", title: \"Delete Row/Column\" },\n  { path: \"replaceW\", title: \"Replace W\" },\n  { path: \"certain\", title: \"Select Certain\" }\n];\nimport Layout from \"../components/layout\";\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleOptionChange = this.handleOptionChange.bind(this);\n    // this.csvLink = React.createRef();\n    this.state = {\n      outputCsv: \"\",\n      selectedOption: \"\",\n      paramNum: \"\",\n      showResults: false\n    };\n    this.path = \"\";\n  }\n  handleSubmit(filename) {\n    event.preventDefault();\n    var formData = new FormData();\n    // console.log(this.fileInput.current.files[0]);\n    formData.append(\"file\", filename);\n    var div = document.getElementById(\"result-display\");\n    div.innerHTML =\n      \"<Spinner animation='border' role='status'> <span className='sr-only'>Loading...</span></Spinner>\";\n\n    var link = \"\";\n    console.log(this.state.selectedOption);\n    if (this.path == \"label\") {\n      //  selected params of each on of them\n    } else if (this.path == \"one-hot\") {\n      link = \"preProc/OneHotEncoding/\" + this.state.paramNum;\n    } else if (this.path == \"delete-rc\") {\n      console.log(this.state.selectedOption)\n      if(this.state.selectedOption==\"row\"){\n        link = \"preProc/delRow/\" + this.state.paramNum;\n      }else if(this.state.selectedOption==\"col\"){\n        link = \"preProc/delCol/\" + this.state.paramNum;\n      }\n    } else if (this.path == \"replaceW\") {\n      link = \"preProc/ReplaceW\" + this.state.paramNum;\n    } else if (this.path == \"certain\") {\n      // selected params of each on of them\n    }\n\n    axios\n      .post(\"http://localhost:8000/\" + link, formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      })\n      .then(e => {\n        console.log(e);\n        console.log(e.data);\n        this.setState({ outputCsv: e.data, showResults: true });\n        div.innerHTML = \"\";\n      })\n      .catch(err => {\n        console.log(err);\n\n        var div = document.getElementById(\"result-display\");\n        div.innerText = \"Please check your input and parameters\";\n      });\n  }\n\n  handleOptionChange(changeEvent) {\n    console.log(changeEvent.target);\n    this.setState({\n      selectedOption: changeEvent.target.value\n    });\n  }\n  onChange(event) {\n    console.log(event.target);\n    this.setState({ paramNum: event.target.value });\n  }\n\n  render() {\n    // console.log(this.props.url.asPath.substring(9));\n    this.path = this.props.url.asPath.substring(9);\n    if (this.path == \"label\") {\n      // List the params of each on of them\n    } \n    else if (this.path == \"one-hot\") {\n      // List the params of each on of them\n      return (\n        <Layout>\n          <h1>{ this.path }</h1>\n          <hr></hr>\n\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <form>\n                <div className=\"form-group row\">\n                  <label className=\"col-sm-2 col-form-label\"> Number of Column: </label>\n                  <div className=\"col-sm-10\">\n                    <input\n                      className=\"form-control\"\n                      placeholder=\"1,2,3\"\n                      type=\"text\"\n                      name=\"numCol\"\n                      onChange={this.onChange.bind(this)}\n                    />\n                  </div>\n                </div>\n                <div className=\"form-group row\">\n                  <label className=\"col-sm-2 col-form-label\"> Number of Cols: </label>\n                  <div className=\"col-sm-10\">\n                    <input\n                      className=\"form-control\"\n                      placeholder=\"1,2,3\"\n                      type=\"text\"\n                      name=\"numCol\"\n                      pattern=\"[0-9],*\"\n                      onChange={this.onChange.bind(this)}\n                    />\n                  </div>\n                </div>\n                <UploadCSV onSubmit={this.handleSubmit}></UploadCSV>\n              </form>\n            </div>\n            <div className=\"col-6\">\n              <div id=\"result-display\"></div>\n              {this.state.showResults ? (\n                <div id=\"download-csv\">\n                  <CSVLink\n                    data={this.state.outputCsv}\n                    filename=\"data.csv\"\n                    className=\"hidden\"\n                    target=\"_blank\"\n                  >\n                    <div className=\"text-center\">\n                      <button className=\"btn btn-info\">\n                        Download me\n                      </button>\n                    </div>\n                  </CSVLink>\n                </div>\n              ) : null}\n            </div>\n          </div>\n          \n\n\n\n          <main className=\"content\">\n            <div >\n              <label>\n                name of Column:\n                <input\n                  type=\"text\"\n                  name=\"numCol\"\n                  onChange={this.onChange.bind(this)}\n                />\n              </label>\n            </div>\n  \n            <UploadCSV onSubmit={this.handleSubmit}></UploadCSV>\n            <div id=\"result-display\"></div>\n            {this.state.showResults ? (\n              <div id=\"download-csv\">\n                <CSVLink\n                  data={this.state.outputCsv}\n                  filename=\"data.csv\"\n                  className=\"hidden\"\n                  target=\"_blank\"\n                >\n                  download me\n                </CSVLink>\n              </div>\n            ) : null}\n          </main>\n        </Layout>\n      );\n    } else if (this.path == \"delete-rc\" || this.path == \"replaceW\") {\n      // List the params of each on of them\n      return (\n        <Layout>\n\n          <h1>{ this.path }</h1>\n          <hr></hr>\n\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <form>\n                <div className=\"form-check\">\n                  <label class=\"form-check-label\">\n                    <input\n                      className=\"form-check-input\"\n                      type=\"radio\"\n                      value=\"row\"\n                      checked={this.state.selectedOption === \"row\"}\n                      onChange={this.handleOptionChange}\n                    />\n                    Row\n                  </label>\n                </div>\n                <div className=\"form-check\">\n                  <label>\n                    <input\n                      className=\"form-check-input\"\n                      type=\"radio\"\n                      value=\"col\"\n                      checked={this.state.selectedOption === \"col\"}\n                      onChange={this.handleOptionChange}\n                    />\n                    Col\n                  </label>\n                </div>\n                <div className=\"form-group row\">\n                  <label className=\"col-sm-2 col-form-label\"> Number of Rows: </label>\n                  <div className=\"col-sm-10\">\n                    <input\n                      className=\"form-control\"\n                      placeholder=\"1,2,3\"\n                      type=\"text\"\n                      name=\"numRow\"\n                      pattern=\"[0-9],*\"\n                      onChange={this.onChange.bind(this)}\n                    />\n                  </div>\n                </div>\n                <div className=\"form-group row\">\n                  <label className=\"col-sm-2 col-form-label\"> Number of Cols: </label>\n                  <div className=\"col-sm-10\">\n                    <input\n                      className=\"form-control\"\n                      placeholder=\"1,2,3\"\n                      type=\"text\"\n                      name=\"numCol\"\n                      pattern=\"[0-9],*\"\n                      onChange={this.onChange.bind(this)}\n                    />\n                  </div>\n                </div>\n                <UploadCSV onSubmit={this.handleSubmit}></UploadCSV>\n              </form>\n            </div>\n            <div className=\"col-6\">\n              <div id=\"result-display\"></div>\n              {this.state.showResults ? (\n                <div id=\"download-csv\">\n                  <CSVLink\n                    data={this.state.outputCsv}\n                    filename=\"data.csv\"\n                    className=\"hidden\"\n                    target=\"_blank\"\n                  >\n                    <div className=\"text-center\">\n                      <button className=\"btn btn-info\">\n                        Download me\n                      </button>\n                    </div>\n                  </CSVLink>\n                </div>\n              ) : null}\n            </div>\n          </div>\n          \n\n\n          {/* <main className=\"content\">\n            <div className=\"radio\">\n              <label class=\"form-check-label\">\n                <input\n                  className=\"form-check-input\"\n                  type=\"radio\"\n                  value=\"row\"\n                  checked={this.state.selectedOption === \"row\"}\n                  onChange={this.handleOptionChange}\n                />\n                Row\n              </label>\n              <label>\n                <input\n                  type=\"radio\"\n                  value=\"col\"\n                  checked={this.state.selectedOption === \"col\"}\n                  onChange={this.handleOptionChange}\n                />\n                Col\n              </label>\n              <br></br>\n              <label>\n                number of rows:\n                <input\n                  type=\"text\"\n                  name=\"numRow\"\n                  pattern=\"[0-9],*\"\n                  onChange={this.onChange.bind(this)}\n                />\n              </label>\n              <label>\n                number of col:\n                <input\n                  type=\"text\"\n                  name=\"numCol\"\n                  pattern=\"[0-9],*\"\n                  onChange={this.onChange.bind(this)}\n                />\n              </label>\n            </div>\n  \n            <UploadCSV onSubmit={this.handleSubmit}></UploadCSV>\n            <div id=\"result-display\"></div>\n            {this.state.showResults ? (\n              <div id=\"download-csv\">\n                <CSVLink\n                  data={this.state.outputCsv}\n                  filename=\"data.csv\"\n                  className=\"hidden\"\n                  target=\"_blank\"\n                >\n                  download me\n                </CSVLink>\n              </div>\n            ) : null}\n          </main> */}\n        </Layout>\n      );\n    // } else if (this.path == \"replaceW\") {\n      // List the params of each on of them\n      \n    } else if (this.path == \"certain\") {\n      // List the params of each on of them\n    }\n    \n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAUA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAXA;AAYA;AACA;;;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AADA;AADA;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AADA;AAGA;;;AACA;AACA;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AACA;AACA;AAAA;AAEA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAawEA;AAEA;AAEA;AAEA;;;;AAnUA;AACA;;;;;A","sourceRoot":""}