{"version":3,"file":"static/webpack/static/development/pages/_app.js.db00c4b6703ddd735475.hot-update.js","sources":["webpack:///./components/layout.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\n// import source from './constants';\n// import Link from \"next/link\";\nimport User from \"../common/user\";\nimport firebase from \"../common/firebase\";\nimport Main from \"../pages/main\";\nimport { Link, Router } from \"../routes\";\nimport { Search, Grid, Header, Segment, Label } from \"semantic-ui-react\";\n\nconst styleTextWhite = {\n  color: \"white\"\n};\n\nconst stylePaddingRight = {\n  paddingRight: \"10px\"\n};\n\nconst styleName = {\n  marginRight: \"20px\"\n};\n\nconst source = [\n  { path: \"nba\", title: \"Naive Bayes algorithm\", from: \"mlalgo\" },\n  { path: \"lra\", title: \"Logistic Regression algorithm\", from: \"mlalgo\" },\n  { path: \"svm\", title: \"Support Vector Machine algorithm\", from: \"mlalgo\" },\n  { path: \"bag\", title: \"Bagging algorithm\", from: \"mlalgo\" },\n  { path: \"clus\", title: \"Clustering algorithm\", from: \"mlalgo\" },\n  { path: \"tree\", title: \"Decision tree algorithm\", from: \"mlalgo\" },\n\n  { path: \"label\", title: \"Label Encoding\", from: \"preproc\" },\n  { path: \"one-hot\", title: \"One-Hot Encoding\", from: \"preproc\" },\n  { path: \"delete-rc\", title: \"Delete Row/Column\", from: \"preproc\" },\n  { path: \"replaceW\", title: \"Replace W\", from: \"preproc\" },\n  { path: \"certain\", title: \"Select Certain\", from: \"preproc\" }\n];\nconst resultRenderer = ({ title }) => <Label content={title} />;\n\nresultRenderer.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string\n};\n// const initialState = { isLoading: false, results: [], value: \"\" };\n\nclass Layout extends React.Component {\n  user = {};\n  namesList = {};\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      user: this.props.user,\n      isLoading: false,\n      results: [\"\"],\n      bool: [],\n      value: \"\"\n    };\n\n    this.user = this.state.user;\n    this.namesList = \"\";\n    console.log(this.user);\n    this.logout = this.logout.bind(this);\n  }\n\n  logout = () => {\n    firebase.auth().signOut();\n    window.location = \"http://localhost:3000/\";\n  };\n\n  //   state = initialState;\n\n  handleResultSelect = (e, { result }) =>\n    this.setState({ value: result.title });\n\n  handleSearchChange = (e, { value }) => {\n    this.setState({ isLoading: true, value });\n    setTimeout(() => {\n      if (this.state.value.length < 1)\n        return this.setState({\n          isLoading: false,\n          bool: [],\n          results: [\"\"],\n          value: \"\"\n        });\n      var t = source.filter(p =>\n        p.title.toLowerCase().includes(this.state.value.toLowerCase())\n      );\n      this.setState({\n        isLoading: false,\n        results: t,\n        bool: true\n      });\n\n      var s = this.state.results.map(function(name) {\n        console.log(name);\n        return (\n          <div>\n            <Link route={name.from} params={{ path: name.path }}>\n              <a>{name.title}</a>\n            </Link>\n            <br></br>\n          </div>\n        );\n      });\n      this.setState({ bool: s });\n    }, 300);\n  };\n\n  render() {\n    const { isLoading, value, results } = this.state;\n    var namesList = this.namesList;\n\n    return (\n      <>\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n          <a className=\"navbar-brand\" href=\"/\">\n            DatApex\n          </a>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#navbarSupportedContent\"\n            aria-controls=\"navbarSupportedContent\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n\n          {firebase.auth().currentUser !== null && (\n            <div\n              className=\"collapse navbar-collapse\"\n              id=\"navbarSupportedContent\"\n            >\n              <ul className=\"navbar-nav mr-auto\">\n                <li className=\"nav-item dropdown\">\n                  <a\n                    className=\"nav-link dropdown-toggle\"\n                    href=\"#\"\n                    id=\"navbarDropdown\"\n                    role=\"button\"\n                    data-toggle=\"dropdown\"\n                    aria-haspopup=\"true\"\n                    aria-expanded=\"false\"\n                  >\n                    Pre Process Data\n                  </a>\n                  <div\n                    className=\"dropdown-menu\"\n                    aria-labelledby=\"navbarDropdown\"\n                  >\n                    <Link route=\"preproc\" params={{ path: \"labsel\" }}>\n                      <a className=\"dropdown-item\">Labsel Encoding</a>\n                    </Link>\n                    <Link route=\"preproc\" params={{ path: \"one-hot\" }}>\n                      <a className=\"dropdown-item\">One-hot Encoding</a>\n                    </Link>\n                    {/* <div className=\"dropdown-divider\"></div> */}\n                    <Link route=\"preproc\" params={{ path: \"delete-rc\" }}>\n                      <a className=\"dropdown-item\">Delete Row/Column</a>\n                    </Link>\n                    <Link route=\"preproc\" params={{ path: \"replaceW\" }}>\n                      <a className=\"dropdown-item\">Replace W</a>\n                    </Link>\n                    <Link route=\"preproc\" params={{ path: \"certain\" }}>\n                      <a className=\"dropdown-item\" href=\"#\">\n                        Select Certain\n                      </a>\n                    </Link>\n                  </div>\n                </li>\n                <li className=\"nav-item dropdown\">\n                  <a\n                    className=\"nav-link dropdown-toggle\"\n                    href=\"#\"\n                    id=\"navbarDropdown\"\n                    role=\"button\"\n                    data-toggle=\"dropdown\"\n                    aria-haspopup=\"true\"\n                    aria-expanded=\"false\"\n                  >\n                    ML Algorithm\n                  </a>\n                  <div\n                    className=\"dropdown-menu\"\n                    aria-labelledby=\"navbarDropdown\"\n                  >\n                    <Link route=\"mlalgo\" params={{ path: \"nba\" }}>\n                      <a className=\"dropdown-item\">Naive Bayes algorithm</a>\n                    </Link>\n                    <Link route=\"mlalgo\" params={{ path: \"lra\" }}>\n                      <a className=\"dropdown-item\">\n                        Logistic Regression algorithm\n                      </a>\n                    </Link>\n                    {/* <div className=\"dropdown-divider\"></div> */}\n                    <Link route=\"mlalgo\" params={{ path: \"svm\" }}>\n                      <a className=\"dropdown-item\">\n                        Support Vector Machine algorithm\n                      </a>\n                    </Link>\n                    <Link route=\"mlalgo\" params={{ path: \"bag\" }}>\n                      <a className=\"dropdown-item\">Bagging algorithm</a>\n                    </Link>\n                    <Link route=\"mlalgo\" params={{ path: \"clus\" }}>\n                      <a className=\"dropdown-item\">Clustering algorithm</a>\n                    </Link>\n                  </div>\n                </li>\n                <li className=\"nav-item dropdown\">\n                  <a\n                    className=\"nav-link dropdown-toggle\"\n                    href=\"#\"\n                    id=\"navbarDropdown\"\n                    role=\"button\"\n                    data-toggle=\"dropdown\"\n                    aria-haspopup=\"true\"\n                    aria-expanded=\"false\"\n                  >\n                    Searchs\n                  </a>\n                  <div\n                    className=\"dropdown-menu\"\n                    aria-labelledby=\"navbarDropdown\"\n                  >\n                    <Search\n                      loading={isLoading}\n                      onResultSelect={this.handleResultSelect}\n                      onSearchChange={_.debounce(this.handleSearchChange, 500, {\n                        leading: true\n                      })}\n                      //   results={results}\n                      value={value}\n                      resultRenderer={resultRenderer}\n                      {...this.props}\n                    />\n                    {this.state.bool ? (\n                      <div>\n                        <li>{this.state.bool}</li>\n                        <br></br>\n                      </div>\n                    ) : null}\n                  </div>\n                </li>\n              </ul>\n\n              <div className=\"form-inline my-2 my-lg-0\" style={styleTextWhite}>\n                <div style={ stylePaddingRight }>\n                  <ul className=\"navbar-nav\">\n                    <li className=\"nav-item dropdown\">\n                      <a\n                        className=\"nav-link dropdown-toggle\"\n                        href=\"#\"\n                        id=\"navbarDropdown\"\n                        role=\"button\"\n                        data-toggle=\"dropdown\"\n                        aria-haspopup=\"true\"\n                        aria-expanded=\"false\"\n                      >\n                        <i className=\"fa fa-search\"></i>\n                      </a>\n                      <div\n                        className=\"dropdown-menu\"\n                        aria-labelledby=\"navbarDropdown\"\n                      >\n                        <Search\n                          loading={isLoading}\n                          onResultSelect={this.handleResultSelect}\n                          onSearchChange={_.debounce(this.handleSearchChange, 500, {\n                            leading: true\n                          })}\n                          //   results={results}\n                          value={value}\n                          resultRenderer={resultRenderer}\n                          {...this.props}\n                        />\n                        {this.state.bool ? (\n                          <div>\n                            <li>{this.state.bool}</li>\n                            <br></br>\n                          </div>\n                        ) : null}\n                      </div>\n                    </li>\n                  </ul>\n                </div>\n                <div className=\"btn-group\">\n                  <button type=\"button\" className=\"btn btn-secondary\" disabled>\n                    Hi {firebase.auth().currentUser.displayName}{\" \"}\n                  </button>\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-secondary dropdown-toggle dropdown-toggle-split\"\n                    data-toggle=\"dropdown\"\n                    aria-haspopup=\"true\"\n                    aria-expanded=\"false\"\n                  >\n                    <span className=\"sr-only\">Toggle Dropdown</span>\n                  </button>\n                  <div className=\"dropdown-menu\">\n                    <Link href=\"/profile\">\n                      <a className=\"dropdown-item\" href=\"#\">\n                        Profile\n                      </a>\n                    </Link>\n                    {/* <a className=\"dropdown-item\" href=\"#\">Another action</a>\n                                            <a className=\"dropdown-item\" href=\"#\">Something else here</a> */}\n                    <div className=\"dropdown-divider\"></div>\n                    <button className=\"dropdown-item\" onClick={this.logout}>\n                      Logout\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n        </nav>\n        <div className=\"container mt-4\">\n          <div className=\"row\">\n            <div className=\"col-12\">{this.props.children}</div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Layout;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AADA;AAIA;AACA;AADA;AAIA;AACA;AADA;AAIA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AACA;AAKA;;;;;AAGA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AACA;AADA;AACA;AADA;AAkBA;AACA;AACA;AACA;AArBA;AAwBA;AAAA;AACA;AAAA;AADA;AACA;AAzBA;AA2BA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAzDA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AAdA;AAezRA;AACA;AA2RA;;;;A","sourceRoot":""}