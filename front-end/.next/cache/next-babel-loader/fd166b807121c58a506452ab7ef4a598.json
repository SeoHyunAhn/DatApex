{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/seohyun/dataPex/front-end/pages/mlalgo.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport axios from \"axios\";\nimport { Button, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Input, Label } from \"reactstrap\";\nimport UploadCSV from \"../components/Modal\";\nvar posts = [{\n  path: \"nba\",\n  title: \"Naive Bayes algorithm\"\n}, {\n  path: \"lra\",\n  title: \"Logistic Regression algorithm\"\n}, {\n  path: \"svm\",\n  title: \"Support Vector Machine algorithm\"\n}, {\n  path: \"bag\",\n  title: \"Bagging algorithm\"\n}, {\n  path: \"clus\",\n  title: \"Clustering algorithm\"\n}, {\n  path: \"tree\",\n  title: \"Decision tree algorithm\"\n}];\nimport Layout from \"../components/layout\";\nvar backend_url = \"\";\n\nvar _default =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(_default, _React$Component);\n\n  function _default(props) {\n    var _this;\n\n    _classCallCheck(this, _default);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(_default).call(this, props));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    _this.state = {\n      imgSrc: \"\",\n      sos: \"\",\n      lambda: \"\",\n      maxit: \"\",\n      depthlimit: \"\",\n      exlimit: \"\",\n      k: \"\"\n    };\n    _this.path = \"\";\n    return _this;\n  }\n\n  _createClass(_default, [{\n    key: \"onChange\",\n    value: function onChange(event) {\n      console.log(event.target.name);\n      var param = event.target.name;\n      this.setState(_defineProperty({}, event.target.name, event.target.value));\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(filename) {\n      var _this2 = this;\n\n      console.log(\"handling submit\");\n      var formData = new FormData(); // console.log(this.fileInput.current.files[0]);\n\n      formData.append(\"file\", filename);\n      var div = document.getElementById(\"image-display\");\n      div.innerHTML = \"<Spinner animation='border' role='status'> <span className='sr-only'>Loading...</span></Spinner>\";\n\n      if (this.path == \"nba\") {\n        backend_url = \"http://localhost:8000/dataMining/NaiveBayes/\";\n      } else if (this.path == \"lra\") {\n        backend_url = \"http://localhost:8000/dataMining/LogisticRegression/\";\n        backend_url = backend_url + this.state.sos + \"/\" + this.state.lambda + \"/\" + this.state.maxit;\n        console.log(backend_url);\n      } else if (this.path == \"svm\") {\n        backend_url = \"http://localhost:8000/dataMining/SVM/\";\n        backend_url = backend_url + this.state.sos + \"/\" + this.state.lambda + \"/\" + this.state.maxit;\n        console.log(backend_url);\n      } else if (this.path == \"bag\") {\n        backend_url = \"http://localhost:8000/dataMining/Bagging/\"; // List the params of each on of them\n\n        backend_url = \"http://localhost:8000/dataMining/SVM/\";\n        backend_url = backend_url + this.state.depthlimit + \"/\" + this.state.exlimit;\n        console.log(backend_url);\n      } else if (this.path == \"clus\") {\n        backend_url = \"http://localhost:8000/dataMining/Clustering/\"; // List the params of each on of them\n\n        backend_url = backend_url + this.state.k;\n        console.log(backend_url);\n      } else if (this.path == \"tree\") {\n        backend_url = \"http://localhost:8000/dataMining/decisionTree/\"; // List the params of each on of them\n      }\n\n      axios.post(backend_url, formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }).then(function (e) {\n        // console.log(e);\n        var div = document.getElementById(\"image-display\");\n        div.innerText = \"\";\n        var imageOupput = \"data:image/png;base64,\" + e.data;\n\n        _this2.setState({\n          imgSrc: imageOupput\n        });\n      })[\"catch\"](function (err) {\n        console.log(err);\n        var div = document.getElementById(\"image-display\");\n        div.innerText = \"Please check your input and parameters\";\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      // console.log(this.props.url.asPath.substring(8));\n      this.path = this.props.url.asPath.substring(8);\n      var post = posts.find(function (p) {\n        return p.path == _this3.path;\n      });\n\n      if (this.path == \"nba\") {\n        return __jsx(Layout, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }, __jsx(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, post.title), __jsx(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }), __jsx(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: \"col-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, __jsx(UploadCSV, {\n          onSubmit: this.handleSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        })), __jsx(\"div\", {\n          className: \"col-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          id: \"image-display\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }), __jsx(\"img\", {\n          id: \"image-output\",\n          src: this.state.imgSrc,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }))));\n      } else if (this.path == \"lra\") {\n        return __jsx(Layout, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }, __jsx(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }, post.title), __jsx(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }), __jsx(\"form\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: \"form-group row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }, __jsx(\"label\", {\n          className: \"col-sm-2 col-form-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }, \" Size of Step: \"), __jsx(\"div\", {\n          className: \"col-sm-10\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }, __jsx(\"input\", {\n          className: \"form-control\",\n          placeholder: \"1,2,3\",\n          type: \"text\",\n          name: \"sos\",\n          onChange: this.onChange.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        })), __jsx(\"label\", {\n          className: \"col-sm-2 col-form-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        }, \" Lambda: \"), __jsx(\"div\", {\n          className: \"col-sm-10\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        }, __jsx(\"input\", {\n          className: \"form-control\",\n          placeholder: \"1,2,3\",\n          type: \"text\",\n          name: \"lambda\",\n          onChange: this.onChange.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        })), __jsx(\"label\", {\n          className: \"col-sm-2 col-form-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        }, \" \", \"Number of Max iteration:\", \" \"), __jsx(\"div\", {\n          className: \"col-sm-10\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164\n          },\n          __self: this\n        }, __jsx(\"input\", {\n          className: \"form-control\",\n          placeholder: \"1,2,3\",\n          type: \"text\",\n          name: \"maxit\",\n          onChange: this.onChange.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165\n          },\n          __self: this\n        }))), __jsx(UploadCSV, {\n          onSubmit: this.handleSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          },\n          __self: this\n        })), __jsx(\"div\", {\n          className: \"col-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          id: \"image-display\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177\n          },\n          __self: this\n        }), __jsx(\"img\", {\n          id: \"image-output\",\n          src: this.state.imgSrc,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178\n          },\n          __self: this\n        })));\n      } else if (this.path == \"svm\") {\n        return __jsx(Layout, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184\n          },\n          __self: this\n        }, __jsx(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185\n          },\n          __self: this\n        }, post.title), __jsx(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186\n          },\n          __self: this\n        }), __jsx(\"form\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: \"form-group row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188\n          },\n          __self: this\n        }, __jsx(\"label\", {\n          className: \"col-sm-2 col-form-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189\n          },\n          __self: this\n        }, \" Size of Step: \"), __jsx(\"div\", {\n          className: \"col-sm-10\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          },\n          __self: this\n        }, __jsx(\"input\", {\n          className: \"form-control\",\n          placeholder: \"1,2,3\",\n          type: \"text\",\n          name: \"sos\",\n          onChange: this.onChange.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191\n          },\n          __self: this\n        })), __jsx(\"label\", {\n          className: \"col-sm-2 col-form-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199\n          },\n          __self: this\n        }, \" Lambda: \"), __jsx(\"div\", {\n          className: \"col-sm-10\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200\n          },\n          __self: this\n        }, __jsx(\"input\", {\n          className: \"form-control\",\n          placeholder: \"1,2,3\",\n          type: \"text\",\n          name: \"lambda\",\n          onChange: this.onChange.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201\n          },\n          __self: this\n        })), __jsx(\"label\", {\n          className: \"col-sm-2 col-form-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209\n          },\n          __self: this\n        }, \" \", \"Number of Max iteration:\", \" \"), __jsx(\"div\", {\n          className: \"col-sm-10\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213\n          },\n          __self: this\n        }, __jsx(\"input\", {\n          className: \"form-control\",\n          placeholder: \"1,2,3\",\n          type: \"text\",\n          name: \"maxit\",\n          onChange: this.onChange.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214\n          },\n          __self: this\n        }))), __jsx(UploadCSV, {\n          onSubmit: this.handleSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223\n          },\n          __self: this\n        })), __jsx(\"div\", {\n          className: \"col-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          id: \"image-display\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226\n          },\n          __self: this\n        }), __jsx(\"img\", {\n          id: \"image-output\",\n          src: this.state.imgSrc,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227\n          },\n          __self: this\n        }))); // List the params of each on of them\n      } else if (this.path == \"bag\") {\n        return __jsx(Layout, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234\n          },\n          __self: this\n        }, __jsx(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235\n          },\n          __self: this\n        }, post.title), __jsx(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236\n          },\n          __self: this\n        }), __jsx(\"form\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 237\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: \"form-group row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 238\n          },\n          __self: this\n        }, __jsx(\"label\", {\n          className: \"col-sm-2 col-form-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 239\n          },\n          __self: this\n        }, \" Depth limit: \"), __jsx(\"div\", {\n          className: \"col-sm-10\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240\n          },\n          __self: this\n        }, __jsx(\"input\", {\n          className: \"form-control\",\n          placeholder: \"1,2,3\",\n          type: \"text\",\n          name: \"depthlimit\",\n          onChange: this.onChange.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 241\n          },\n          __self: this\n        })), __jsx(\"label\", {\n          className: \"col-sm-2 col-form-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 249\n          },\n          __self: this\n        }, \" Example Limit: \"), __jsx(\"div\", {\n          className: \"col-sm-10\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 250\n          },\n          __self: this\n        }, __jsx(\"input\", {\n          className: \"form-control\",\n          placeholder: \"1,2,3\",\n          type: \"text\",\n          name: \"exlimit\",\n          onChange: this.onChange.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 251\n          },\n          __self: this\n        }))), __jsx(UploadCSV, {\n          onSubmit: this.handleSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 260\n          },\n          __self: this\n        })), __jsx(\"div\", {\n          className: \"col-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          id: \"image-display\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 263\n          },\n          __self: this\n        }), __jsx(\"img\", {\n          id: \"image-output\",\n          src: this.state.imgSrc,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 264\n          },\n          __self: this\n        })));\n      } else if (this.path == \"clus\") {\n        return __jsx(Layout, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 270\n          },\n          __self: this\n        }, __jsx(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 271\n          },\n          __self: this\n        }, post.title), __jsx(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 272\n          },\n          __self: this\n        }), __jsx(\"form\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 273\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: \"form-group row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 274\n          },\n          __self: this\n        }, __jsx(\"label\", {\n          className: \"col-sm-2 col-form-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 275\n          },\n          __self: this\n        }, \" Number of Cluster: \"), __jsx(\"div\", {\n          className: \"col-sm-10\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 276\n          },\n          __self: this\n        }, __jsx(\"input\", {\n          className: \"form-control\",\n          placeholder: \"3\",\n          type: \"text\",\n          name: \"k\",\n          onChange: this.onChange.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 277\n          },\n          __self: this\n        }))), __jsx(UploadCSV, {\n          onSubmit: this.handleSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 286\n          },\n          __self: this\n        })), __jsx(\"div\", {\n          className: \"col-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 288\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          id: \"image-display\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 289\n          },\n          __self: this\n        }), __jsx(\"img\", {\n          id: \"image-output\",\n          src: this.state.imgSrc,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 290\n          },\n          __self: this\n        })));\n      } else if (this.path == \"tree\") {\n        backend_url = \"http://localhost:8000/dataMining/decisionTree/\"; // List the params of each on of them\n      }\n\n      return __jsx(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, __jsx(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, post.title), __jsx(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }), __jsx(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"col-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, __jsx(UploadCSV, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      })), __jsx(\"div\", {\n        className: \"col-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        id: \"image-display\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }), __jsx(\"img\", {\n        id: \"image-output\",\n        src: this.state.imgSrc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return _default;\n}(React.Component);\n\nexport { _default as default };","map":{"version":3,"sources":["/Users/seohyun/dataPex/front-end/pages/mlalgo.js"],"names":["React","axios","Button","ModalHeader","ModalBody","ModalFooter","Form","FormGroup","Input","Label","UploadCSV","posts","path","title","Layout","backend_url","props","handleSubmit","bind","state","imgSrc","sos","lambda","maxit","depthlimit","exlimit","k","event","console","log","target","name","param","setState","value","filename","formData","FormData","append","div","document","getElementById","innerHTML","post","headers","then","e","innerText","imageOupput","data","err","url","asPath","substring","find","p","onChange","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Input,\n  Label\n} from \"reactstrap\";\nimport UploadCSV from \"../components/Modal\";\nconst posts = [\n  { path: \"nba\", title: \"Naive Bayes algorithm\" },\n  { path: \"lra\", title: \"Logistic Regression algorithm\" },\n  { path: \"svm\", title: \"Support Vector Machine algorithm\" },\n  { path: \"bag\", title: \"Bagging algorithm\" },\n  { path: \"clus\", title: \"Clustering algorithm\" },\n  { path: \"tree\", title: \"Decision tree algorithm\" }\n];\nimport Layout from \"../components/layout\";\n\nvar backend_url = \"\";\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.state = { imgSrc: \"\", sos: \"\", lambda: \"\", maxit: \"\" , depthlimit: \"\", exlimit:\"\", k:\"\"};\n    this.path = \"\";\n  }\n\n  onChange(event) {\n    console.log(event.target.name);\n    var param = event.target.name;\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  handleSubmit(filename) {\n    console.log(\"handling submit\");\n    var formData = new FormData();\n    // console.log(this.fileInput.current.files[0]);\n    formData.append(\"file\", filename);\n    var div = document.getElementById(\"image-display\");\n    div.innerHTML =\n      \"<Spinner animation='border' role='status'> <span className='sr-only'>Loading...</span></Spinner>\";\n    if (this.path == \"nba\") {\n      backend_url = \"http://localhost:8000/dataMining/NaiveBayes/\";\n    } else if (this.path == \"lra\") {\n      backend_url = \"http://localhost:8000/dataMining/LogisticRegression/\";\n      backend_url =\n        backend_url +\n        this.state.sos +\n        \"/\" +\n        this.state.lambda +\n        \"/\" +\n        this.state.maxit;\n      console.log(backend_url);\n    } else if (this.path == \"svm\") {\n      backend_url = \"http://localhost:8000/dataMining/SVM/\";\n      backend_url =\n        backend_url +\n        this.state.sos +\n        \"/\" +\n        this.state.lambda +\n        \"/\" +\n        this.state.maxit;\n      console.log(backend_url);\n    } else if (this.path == \"bag\") {\n      backend_url = \"http://localhost:8000/dataMining/Bagging/\";\n      // List the params of each on of them\n      backend_url = \"http://localhost:8000/dataMining/SVM/\";\n      backend_url =\n        backend_url +\n        this.state.depthlimit +\n        \"/\" +\n        this.state.exlimit;\n      console.log(backend_url);\n      \n    } else if (this.path == \"clus\") {\n      backend_url = \"http://localhost:8000/dataMining/Clustering/\";\n      // List the params of each on of them\n      backend_url =\n        backend_url +\n        this.state.k;\n      console.log(backend_url);\n    } else if (this.path == \"tree\") {\n      backend_url = \"http://localhost:8000/dataMining/decisionTree/\";\n      // List the params of each on of them\n    }\n    axios\n      .post(backend_url, formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      })\n      .then(e => {\n        // console.log(e);\n\n        var div = document.getElementById(\"image-display\");\n        div.innerText = \"\";\n        var imageOupput = \"data:image/png;base64,\" + e.data;\n        this.setState({ imgSrc: imageOupput });\n      })\n      .catch(err => {\n        console.log(err);\n\n        var div = document.getElementById(\"image-display\");\n        div.innerText = \"Please check your input and parameters\";\n      });\n  }\n  render() {\n    // console.log(this.props.url.asPath.substring(8));\n    this.path = this.props.url.asPath.substring(8);\n    const post = posts.find(p => p.path == this.path);\n    if (this.path == \"nba\") {\n      return (\n        <Layout>\n          <h1>{post.title}</h1>\n          <hr></hr>\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <UploadCSV onSubmit={this.handleSubmit}></UploadCSV>\n            </div>\n            <div className=\"col-6\">\n              <div id=\"image-display\"></div>\n              <img id=\"image-output\" src={this.state.imgSrc}></img>\n            </div>\n          </div>\n        </Layout>\n      );\n    } else if (this.path == \"lra\") {\n      return (\n        <Layout>\n          <h1>{post.title}</h1>\n          <hr></hr>\n          <form>\n            <div className=\"form-group row\">\n              <label className=\"col-sm-2 col-form-label\"> Size of Step: </label>\n              <div className=\"col-sm-10\">\n                <input\n                  className=\"form-control\"\n                  placeholder=\"1,2,3\"\n                  type=\"text\"\n                  name=\"sos\"\n                  onChange={this.onChange.bind(this)}\n                />\n              </div>\n              <label className=\"col-sm-2 col-form-label\"> Lambda: </label>\n              <div className=\"col-sm-10\">\n                <input\n                  className=\"form-control\"\n                  placeholder=\"1,2,3\"\n                  type=\"text\"\n                  name=\"lambda\"\n                  onChange={this.onChange.bind(this)}\n                />\n              </div>\n              <label className=\"col-sm-2 col-form-label\">\n                {\" \"}\n                Number of Max iteration:{\" \"}\n              </label>\n              <div className=\"col-sm-10\">\n                <input\n                  className=\"form-control\"\n                  placeholder=\"1,2,3\"\n                  type=\"text\"\n                  name=\"maxit\"\n                  onChange={this.onChange.bind(this)}\n                />\n              </div>\n            </div>\n            <UploadCSV onSubmit={this.handleSubmit}></UploadCSV>\n          </form>\n          <div className=\"col-6\">\n            <div id=\"image-display\"></div>\n            <img id=\"image-output\" src={this.state.imgSrc}></img>\n          </div>\n        </Layout>\n      );\n    } else if (this.path == \"svm\") {\n      return (\n        <Layout>\n          <h1>{post.title}</h1>\n          <hr></hr>\n          <form>\n            <div className=\"form-group row\">\n              <label className=\"col-sm-2 col-form-label\"> Size of Step: </label>\n              <div className=\"col-sm-10\">\n                <input\n                  className=\"form-control\"\n                  placeholder=\"1,2,3\"\n                  type=\"text\"\n                  name=\"sos\"\n                  onChange={this.onChange.bind(this)}\n                />\n              </div>\n              <label className=\"col-sm-2 col-form-label\"> Lambda: </label>\n              <div className=\"col-sm-10\">\n                <input\n                  className=\"form-control\"\n                  placeholder=\"1,2,3\"\n                  type=\"text\"\n                  name=\"lambda\"\n                  onChange={this.onChange.bind(this)}\n                />\n              </div>\n              <label className=\"col-sm-2 col-form-label\">\n                {\" \"}\n                Number of Max iteration:{\" \"}\n              </label>\n              <div className=\"col-sm-10\">\n                <input\n                  className=\"form-control\"\n                  placeholder=\"1,2,3\"\n                  type=\"text\"\n                  name=\"maxit\"\n                  onChange={this.onChange.bind(this)}\n                />\n              </div>\n            </div>\n            <UploadCSV onSubmit={this.handleSubmit}></UploadCSV>\n          </form>\n          <div className=\"col-6\">\n            <div id=\"image-display\"></div>\n            <img id=\"image-output\" src={this.state.imgSrc}></img>\n          </div>\n        </Layout>\n      );\n      // List the params of each on of them\n    } else if (this.path == \"bag\") {\n      return (\n        <Layout>\n          <h1>{post.title}</h1>\n          <hr></hr>\n          <form>\n            <div className=\"form-group row\">\n              <label className=\"col-sm-2 col-form-label\"> Depth limit: </label>\n              <div className=\"col-sm-10\">\n                <input\n                  className=\"form-control\"\n                  placeholder=\"1,2,3\"\n                  type=\"text\"\n                  name=\"depthlimit\"\n                  onChange={this.onChange.bind(this)}\n                />\n              </div>\n              <label className=\"col-sm-2 col-form-label\"> Example Limit: </label>\n              <div className=\"col-sm-10\">\n                <input\n                  className=\"form-control\"\n                  placeholder=\"1,2,3\"\n                  type=\"text\"\n                  name=\"exlimit\"\n                  onChange={this.onChange.bind(this)}\n                />\n              </div>\n            </div>\n            <UploadCSV onSubmit={this.handleSubmit}></UploadCSV>\n          </form>\n          <div className=\"col-6\">\n            <div id=\"image-display\"></div>\n            <img id=\"image-output\" src={this.state.imgSrc}></img>\n          </div>\n        </Layout>\n      );\n    } else if (this.path == \"clus\") {\n      return (\n        <Layout>\n          <h1>{post.title}</h1>\n          <hr></hr>\n          <form>\n            <div className=\"form-group row\">\n              <label className=\"col-sm-2 col-form-label\"> Number of Cluster: </label>\n              <div className=\"col-sm-10\">\n                <input\n                  className=\"form-control\"\n                  placeholder=\"3\"\n                  type=\"text\"\n                  name=\"k\"\n                  onChange={this.onChange.bind(this)}\n                />\n              </div>\n            </div>\n            <UploadCSV onSubmit={this.handleSubmit}></UploadCSV>\n          </form>\n          <div className=\"col-6\">\n            <div id=\"image-display\"></div>\n            <img id=\"image-output\" src={this.state.imgSrc}></img>\n          </div>\n        </Layout>\n      );\n    } else if (this.path == \"tree\") {\n      backend_url = \"http://localhost:8000/dataMining/decisionTree/\";\n      // List the params of each on of them\n    }\n    return (\n      <Layout>\n        <h1>{post.title}</h1>\n        <hr></hr>\n        <div className=\"row\">\n          <div className=\"col-6\">\n            <UploadCSV onSubmit={this.handleSubmit}></UploadCSV>\n          </div>\n          <div className=\"col-6\">\n            <div id=\"image-display\"></div>\n            <img id=\"image-output\" src={this.state.imgSrc}></img>\n          </div>\n        </div>\n      </Layout>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}