{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/seohyun/temp2/front-end/components/Modal.js\";\nvar __jsx = React.createElement;\n// frontend/src/components/Modal.js\nimport React, { Component } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Input, Label } from \"reactstrap\";\n\nvar CustomModal =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CustomModal, _Component);\n\n  function CustomModal(props) {\n    var _this;\n\n    _classCallCheck(this, CustomModal);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CustomModal).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (e) {\n      var _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n\n      if (e.target.type === \"checkbox\") {\n        value = e.target.checked;\n      }\n\n      var activeItem = _objectSpread({}, _this.state.activeItem, _defineProperty({}, name, value));\n\n      _this.setState({\n        activeItem: activeItem\n      });\n    });\n\n    _this.state = {\n      activeItem: _this.props.activeItem\n    };\n    return _this;\n  }\n\n  _createClass(CustomModal, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          toggle = _this$props.toggle,\n          onSave = _this$props.onSave;\n      return __jsx(Modal, {\n        isOpen: true,\n        toggle: toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, __jsx(ModalHeader, {\n        toggle: toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \" Todo Item \"), __jsx(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, __jsx(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, __jsx(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, __jsx(Label, {\n        \"for\": \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Title\"), __jsx(Input, {\n        type: \"text\",\n        name: \"title\",\n        value: this.state.activeItem.title,\n        onChange: this.handleChange,\n        placeholder: \"Enter Todo Title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      })), __jsx(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, __jsx(Label, {\n        \"for\": \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Description\"), __jsx(Input, {\n        type: \"text\",\n        name: \"description\",\n        value: this.state.activeItem.description,\n        onChange: this.handleChange,\n        placeholder: \"Enter Todo description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      })), __jsx(FormGroup, {\n        check: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, __jsx(Label, {\n        \"for\": \"completed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, __jsx(Input, {\n        type: \"checkbox\",\n        name: \"completed\",\n        checked: this.state.activeItem.completed,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), \"Completed\")))), __jsx(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, __jsx(Button, {\n        color: \"success\",\n        onClick: function onClick() {\n          return onSave(_this2.state.activeItem);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Save\")));\n    }\n  }]);\n\n  return CustomModal;\n}(Component);\n\nexport { CustomModal as default };","map":{"version":3,"sources":["/Users/seohyun/temp2/front-end/components/Modal.js"],"names":["React","Component","Button","Modal","ModalHeader","ModalBody","ModalFooter","Form","FormGroup","Input","Label","CustomModal","props","e","target","name","value","type","checked","activeItem","state","setState","toggle","onSave","title","handleChange","description","completed"],"mappings":"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","sourcesContent":["// frontend/src/components/Modal.js\n\nimport React, { Component } from \"react\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Input,\n  Label\n} from \"reactstrap\";\n\nexport default class CustomModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeItem: this.props.activeItem\n    };\n  }\n\n  handleChange = e => {\n    let { name, value } = e.target;\n    if (e.target.type === \"checkbox\") {\n      value = e.target.checked;\n    }\n    const activeItem = { ...this.state.activeItem, [name]: value };\n    this.setState({ activeItem });\n  };\n\n  render() {\n    const { toggle, onSave } = this.props;\n    return (\n      <Modal isOpen={true} toggle={toggle}>\n        <ModalHeader toggle={toggle}> Todo Item </ModalHeader>\n        <ModalBody>\n          <Form>\n            <FormGroup>\n              <Label for=\"title\">Title</Label>\n              <Input\n                type=\"text\"\n                name=\"title\"\n                value={this.state.activeItem.title}\n                onChange={this.handleChange}\n                placeholder=\"Enter Todo Title\"\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"description\">Description</Label>\n              <Input\n                type=\"text\"\n                name=\"description\"\n                value={this.state.activeItem.description}\n                onChange={this.handleChange}\n                placeholder=\"Enter Todo description\"\n              />\n            </FormGroup>\n            <FormGroup check>\n              <Label for=\"completed\">\n                <Input\n                  type=\"checkbox\"\n                  name=\"completed\"\n                  checked={this.state.activeItem.completed}\n                  onChange={this.handleChange}\n                />\n                Completed\n              </Label>\n            </FormGroup>\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"success\" onClick={() => onSave(this.state.activeItem)}>\n            Save\n          </Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}