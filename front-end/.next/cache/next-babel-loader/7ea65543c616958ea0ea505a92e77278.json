{"ast":null,"code":"var _jsxFileName = \"/Users/seohyun/dataPex/front-end/pages/preproc.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport axios from \"axios\";\nimport { Button, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Input, Label } from \"reactstrap\";\nimport { CSVLink, CSVDownload } from \"react-csv\";\nimport UploadCSV from \"../components/Modal\";\nconst posts = [{\n  path: \"label\",\n  title: \"Label Encoding\"\n}, {\n  path: \"one-hot\",\n  title: \"One-Hot Encoding\"\n}, {\n  path: \"delete-rc\",\n  title: \"Delete Row/Column\"\n}, {\n  path: \"replaceW\",\n  title: \"Replace W\"\n}, {\n  path: \"certain\",\n  title: \"Select Certain\"\n}];\nimport Layout from \"../components/layout\";\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleOptionChange = this.handleOptionChange.bind(this); // this.csvLink = React.createRef();\n\n    this.state = {\n      outputCsv: \"\",\n      selectedOption: \"\",\n      paramNum: \"\"\n    };\n    this.path = \"\";\n  }\n\n  handleSubmit(filename) {\n    event.preventDefault();\n    var formData = new FormData(); // console.log(this.fileInput.current.files[0]);\n\n    formData.append(\"file\", filename);\n    var div = document.getElementById(\"result-display\");\n    div.innerHTML = \"<Spinner animation='border' role='status'> <span className='sr-only'>Loading...</span></Spinner>\";\n    var link = \"\";\n    console.log(this.state.selectedOption);\n\n    if (this.path == \"label\") {//  selected params of each on of them\n    } else if (this.path == \"one-hot\") {// selected  params of each on of them\n    } else if (this.path == \"delete-rc\") {\n      // selected  params of each on of them\n      link = \"preProc/delRow/\" + this.state.paramNum;\n    } else if (this.path == \"replaceW\") {// selected params of each on of them\n    } else if (this.path == \"certain\") {// selected params of each on of them\n    }\n\n    axios.post(\"http://localhost:8000/\" + link, formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    }) // .then(data => {\n    //   console.log(data.file)\n    //   // this.setState({ data }, () => {\n    //   //   // click the CSVLink component to trigger the CSV download\n    //   //   this.csvLink.current.link.click();\n    //   // });\n    //   // div.style = \"visibility: visible;\";\n    // })\n    .then(response => response.blob()).then(blob => {\n      // 2. Create blob link to download\n      const url = window.URL.createObjectURL(new Blob([blob]));\n      console.log(blob);\n      console.log(url);\n    }).catch(err => {\n      console.log(err);\n      var div = document.getElementById(\"result-display\");\n      div.innerText = \"Please provide a valid csv file\";\n    });\n  }\n\n  handleOptionChange(changeEvent) {\n    console.log(changeEvent.target);\n    this.setState({\n      selectedOption: changeEvent.target.value\n    });\n  }\n\n  onChange(event) {\n    console.log(event.target);\n    this.setState({\n      paramNum: event.target.value\n    });\n  }\n\n  render() {\n    // console.log(this.props.url.asPath.substring(9));\n    this.path = this.props.url.asPath.substring(9);\n    const params = [];\n\n    if (this.path == \"label\") {// List the params of each on of them\n    } else if (this.path == \"one-hot\") {// List the params of each on of them\n    } else if (this.path == \"delete-rc\") {// List the params of each on of them\n    } else if (this.path == \"replaceW\") {// List the params of each on of them\n    } else if (this.path == \"certain\") {// List the params of each on of them\n    }\n\n    return __jsx(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, __jsx(\"main\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"radio\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      type: \"radio\",\n      value: \"row\",\n      checked: this.state.selectedOption === \"row\",\n      onChange: this.handleOptionChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), \"row\"), __jsx(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"number of rows:\", __jsx(\"input\", {\n      type: \"text\",\n      name: \"numRow\",\n      pattern: \"[0-9]*\",\n      onChange: this.onChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }))), __jsx(UploadCSV, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      id: \"result-display\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/seohyun/dataPex/front-end/pages/preproc.js"],"names":["React","axios","Button","ModalHeader","ModalBody","ModalFooter","Form","FormGroup","Input","Label","CSVLink","CSVDownload","UploadCSV","posts","path","title","Layout","Component","constructor","props","handleSubmit","bind","handleOptionChange","state","outputCsv","selectedOption","paramNum","filename","event","preventDefault","formData","FormData","append","div","document","getElementById","innerHTML","link","console","log","post","headers","then","response","blob","url","window","URL","createObjectURL","Blob","catch","err","innerText","changeEvent","target","setState","value","onChange","render","asPath","substring","params"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Input,\n  Label\n} from \"reactstrap\";\nimport { CSVLink, CSVDownload } from \"react-csv\";\nimport UploadCSV from \"../components/Modal\";\n\nconst posts = [\n  { path: \"label\", title: \"Label Encoding\" },\n  { path: \"one-hot\", title: \"One-Hot Encoding\" },\n  { path: \"delete-rc\", title: \"Delete Row/Column\" },\n  { path: \"replaceW\", title: \"Replace W\" },\n  { path: \"certain\", title: \"Select Certain\" }\n];\nimport Layout from \"../components/layout\";\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleOptionChange = this.handleOptionChange.bind(this);\n    // this.csvLink = React.createRef();\n    this.state = { outputCsv: \"\", selectedOption: \"\", paramNum: \"\" };\n    this.path = \"\";\n  }\n  handleSubmit(filename) {\n    event.preventDefault();\n    var formData = new FormData();\n    // console.log(this.fileInput.current.files[0]);\n    formData.append(\"file\", filename);\n    var div = document.getElementById(\"result-display\");\n    div.innerHTML =\n      \"<Spinner animation='border' role='status'> <span className='sr-only'>Loading...</span></Spinner>\";\n\n    var link = \"\";\n    console.log(this.state.selectedOption);\n    if (this.path == \"label\") {\n      //  selected params of each on of them\n    } else if (this.path == \"one-hot\") {\n      // selected  params of each on of them\n    } else if (this.path == \"delete-rc\") {\n      // selected  params of each on of them\n      link = \"preProc/delRow/\"+this.state.paramNum;\n    } else if (this.path == \"replaceW\") {\n      // selected params of each on of them\n    } else if (this.path == \"certain\") {\n      // selected params of each on of them\n    }\n\n    axios\n      .post(\"http://localhost:8000/\" + link, formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      })\n      // .then(data => {\n      //   console.log(data.file)\n      //   // this.setState({ data }, () => {\n      //   //   // click the CSVLink component to trigger the CSV download\n      //   //   this.csvLink.current.link.click();\n      //   // });\n      //   // div.style = \"visibility: visible;\";\n      // })\n      .then((response) => response.blob())\n.then((blob) => {\n \n  // 2. Create blob link to download\n  const url = window.URL.createObjectURL(new Blob([blob]));\n  console.log(blob)\n  console.log(url)\n})\n      .catch(err => {\n        console.log(err);\n\n        var div = document.getElementById(\"result-display\");\n        div.innerText = \"Please provide a valid csv file\";\n      });\n  }\n\n  handleOptionChange(changeEvent) {\n    console.log(changeEvent.target);\n    this.setState({\n      selectedOption: changeEvent.target.value\n    });\n  }\n  onChange(event){\n    console.log(event.target)\n    this.setState({paramNum: event.target.value});\n  }\n\n  render() {\n    // console.log(this.props.url.asPath.substring(9));\n    this.path = this.props.url.asPath.substring(9);\n    const params = [];\n    if (this.path == \"label\") {\n      // List the params of each on of them\n    } else if (this.path == \"one-hot\") {\n      // List the params of each on of them\n    } else if (this.path == \"delete-rc\") {\n      // List the params of each on of them\n    } else if (this.path == \"replaceW\") {\n      // List the params of each on of them\n    } else if (this.path == \"certain\") {\n      // List the params of each on of them\n    }\n    return (\n      <Layout>\n        <main className=\"content\">\n          <div className=\"radio\">\n            <label>\n              <input\n                type=\"radio\"\n                value=\"row\"\n                checked={this.state.selectedOption === \"row\"}\n                onChange={this.handleOptionChange}\n              />\n              row\n            </label>\n\n            <label>\n              number of rows:\n              <input type=\"text\" name=\"numRow\" pattern=\"[0-9]*\" onChange={this.onChange.bind(this)}/>\n            </label>\n          </div>\n          <UploadCSV onSubmit={this.handleSubmit}></UploadCSV>\n          <div id=\"result-display\"></div>\n          {/* <div id=\"download-csv\" >\n            <button onClick={this.fetchData}>Download CSV</button>\n\n            <CSVLink\n              data={this.state.data}\n              filename=\"data.csv\"\n              className=\"hidden\"\n              ref={this.csvLink}\n              target=\"_blank\"\n            />\n          </div> */}\n        </main>\n      </Layout>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}