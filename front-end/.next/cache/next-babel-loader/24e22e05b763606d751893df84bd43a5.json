{"ast":null,"code":"var _jsxFileName = \"/Users/youngjoon/Desktop/CS407/DatApex/front-end/pages/preproc.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport axios from \"axios\";\nimport { Button, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Input, Label } from \"reactstrap\";\nimport { CSVLink, CSVDownload } from \"react-csv\";\nimport UploadCSV from \"../components/Modal\"; // import { Components } from \"@reactioncommerce/reaction-components\";\n\nconst posts = [{\n  path: \"label\",\n  title: \"Label Encoding\"\n}, {\n  path: \"one-hot\",\n  title: \"One-Hot Encoding\"\n}, {\n  path: \"delete-rc\",\n  title: \"Delete Row/Column\"\n}, {\n  path: \"replaceW\",\n  title: \"Replace W\"\n}, {\n  path: \"certain\",\n  title: \"Select Certain\"\n}];\nimport Layout from \"../components/layout\";\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleOptionChange = this.handleOptionChange.bind(this); // this.csvLink = React.createRef();\n\n    this.state = {\n      outputCsv: \"\",\n      selectedOption: \"\",\n      paramNum: \"\",\n      showResults: false\n    };\n    this.path = \"\";\n  }\n\n  handleSubmit(filename) {\n    event.preventDefault();\n    var formData = new FormData(); // console.log(this.fileInput.current.files[0]);\n\n    formData.append(\"file\", filename);\n    var div = document.getElementById(\"result-display\");\n    div.innerHTML = \"<Spinner animation='border' role='status'> <span className='sr-only'>Loading...</span></Spinner>\";\n    var link = \"\";\n    console.log(this.state.selectedOption);\n\n    if (this.path == \"label\") {//  selected params of each on of them\n    } else if (this.path == \"one-hot\") {// selected  params of each on of them\n    } else if (this.path == \"delete-rc\") {\n      // selected  params of each on of them\n      link = \"preProc/delRow/\" + this.state.paramNum;\n    } else if (this.path == \"replaceW\") {// selected params of each on of them\n    } else if (this.path == \"certain\") {// selected params of each on of them\n    }\n\n    axios.post(\"http://localhost:8000/\" + link, formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    }).then(e => {\n      console.log(e);\n      console.log(e.data);\n      this.setState({\n        outputCsv: e.data,\n        showResults: true\n      });\n      div.innerHTML = \"\";\n    }).catch(err => {\n      console.log(err);\n      var div = document.getElementById(\"result-display\");\n      div.innerText = \"Please provide a valid csv file\";\n    });\n  }\n\n  handleOptionChange(changeEvent) {\n    console.log(changeEvent.target);\n    this.setState({\n      selectedOption: changeEvent.target.value\n    });\n  }\n\n  onChange(event) {\n    console.log(event.target);\n    this.setState({\n      paramNum: event.target.value\n    });\n  }\n\n  render() {\n    // console.log(this.props.url.asPath.substring(9));\n    this.path = this.props.url.asPath.substring(9);\n    const params = [];\n\n    if (this.path == \"label\") {// List the params of each on of them\n    } else if (this.path == \"one-hot\") {// List the params of each on of them\n    } else if (this.path == \"delete-rc\") {// List the params of each on of them\n    } else if (this.path == \"replaceW\") {// List the params of each on of them\n    } else if (this.path == \"certain\") {// List the params of each on of them\n    }\n\n    return __jsx(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, __jsx(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Delete Row and Col\"), __jsx(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"col-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, __jsx(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"form-check\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      className: \"form-check-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      className: \"form-check-input\",\n      type: \"radio\",\n      value: \"row\",\n      checked: this.state.selectedOption === \"row\",\n      onChange: this.handleOptionChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), \"Row\")), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Number of Rows:\", __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), __jsx(\"input\", {\n      className: \"form-control\",\n      placeholder: \"1,2,3\",\n      type: \"text\",\n      name: \"numRow\",\n      pattern: \"[0-9]*\",\n      onChange: this.onChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }))), __jsx(UploadCSV, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }))), __jsx(\"div\", {\n      className: \"col-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      id: \"result-display\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), this.state.showResults ? __jsx(\"div\", {\n      id: \"download-csv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, __jsx(CSVLink, {\n      data: this.state.outputCsv,\n      filename: \"data.csv\",\n      className: \"hidden\",\n      target: \"_blank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, __jsx(\"button\", {\n      className: \"btn btn-info btn-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"Download me\")))) : null)));\n  }\n\n}","map":{"version":3,"sources":["/Users/youngjoon/Desktop/CS407/DatApex/front-end/pages/preproc.js"],"names":["React","axios","Button","ModalHeader","ModalBody","ModalFooter","Form","FormGroup","Input","Label","CSVLink","CSVDownload","UploadCSV","posts","path","title","Layout","Component","constructor","props","handleSubmit","bind","handleOptionChange","state","outputCsv","selectedOption","paramNum","showResults","filename","event","preventDefault","formData","FormData","append","div","document","getElementById","innerHTML","link","console","log","post","headers","then","e","data","setState","catch","err","innerText","changeEvent","target","value","onChange","render","url","asPath","substring","params"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Input,\n  Label\n} from \"reactstrap\";\nimport { CSVLink, CSVDownload } from \"react-csv\";\nimport UploadCSV from \"../components/Modal\";\n// import { Components } from \"@reactioncommerce/reaction-components\";\n\nconst posts = [\n  { path: \"label\", title: \"Label Encoding\" },\n  { path: \"one-hot\", title: \"One-Hot Encoding\" },\n  { path: \"delete-rc\", title: \"Delete Row/Column\" },\n  { path: \"replaceW\", title: \"Replace W\" },\n  { path: \"certain\", title: \"Select Certain\" }\n];\nimport Layout from \"../components/layout\";\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleOptionChange = this.handleOptionChange.bind(this);\n    // this.csvLink = React.createRef();\n    this.state = {\n      outputCsv: \"\",\n      selectedOption: \"\",\n      paramNum: \"\",\n      showResults: false\n    };\n    this.path = \"\";\n  }\n  handleSubmit(filename) {\n    event.preventDefault();\n    var formData = new FormData();\n    // console.log(this.fileInput.current.files[0]);\n    formData.append(\"file\", filename);\n    var div = document.getElementById(\"result-display\");\n    div.innerHTML =\n      \"<Spinner animation='border' role='status'> <span className='sr-only'>Loading...</span></Spinner>\";\n\n    var link = \"\";\n    console.log(this.state.selectedOption);\n    if (this.path == \"label\") {\n      //  selected params of each on of them\n    } else if (this.path == \"one-hot\") {\n      // selected  params of each on of them\n    } else if (this.path == \"delete-rc\") {\n      // selected  params of each on of them\n      link = \"preProc/delRow/\" + this.state.paramNum;\n    } else if (this.path == \"replaceW\") {\n      // selected params of each on of them\n    } else if (this.path == \"certain\") {\n      // selected params of each on of them\n    }\n\n    axios\n      .post(\"http://localhost:8000/\" + link, formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      })\n      .then(e => {\n        console.log(e);\n        console.log(e.data);\n        this.setState({ outputCsv: e.data, showResults: true });\n        div.innerHTML = \"\";\n      })\n      .catch(err => {\n        console.log(err);\n\n        var div = document.getElementById(\"result-display\");\n        div.innerText = \"Please provide a valid csv file\";\n      });\n  }\n\n  handleOptionChange(changeEvent) {\n    console.log(changeEvent.target);\n    this.setState({\n      selectedOption: changeEvent.target.value\n    });\n  }\n  onChange(event) {\n    console.log(event.target);\n    this.setState({ paramNum: event.target.value });\n  }\n\n  render() {\n    // console.log(this.props.url.asPath.substring(9));\n    this.path = this.props.url.asPath.substring(9);\n    const params = [];\n    if (this.path == \"label\") {\n      // List the params of each on of them\n    } else if (this.path == \"one-hot\") {\n      // List the params of each on of them\n    } else if (this.path == \"delete-rc\") {\n      // List the params of each on of them\n    } else if (this.path == \"replaceW\") {\n      // List the params of each on of them\n    } else if (this.path == \"certain\") {\n      // List the params of each on of them\n    }\n    return (\n      <Layout>\n        <h1>Delete Row and Col</h1>\n        <hr></hr>\n\n        <div className=\"row\">\n          <div className=\"col-6\">\n            <form>\n              <div className=\"form-check\">\n                <label className=\"form-check-label\">\n                  <input\n                    className=\"form-check-input\"\n                    type=\"radio\"\n                    value=\"row\"\n                    checked={this.state.selectedOption === \"row\"}\n                    onChange={this.handleOptionChange}\n                  />\n                  Row\n                </label>\n              </div>\n              <br />\n              <div className=\"form-group\">\n                <label>\n                  Number of Rows:\n                  <br />\n                  <input\n                    className=\"form-control\"\n                    placeholder=\"1,2,3\"\n                    type=\"text\"\n                    name=\"numRow\"\n                    pattern=\"[0-9]*\"\n                    onChange={this.onChange.bind(this)}\n                  />\n                </label>\n              </div>\n\n              <UploadCSV onSubmit={ this.handleSubmit }></UploadCSV>\n            </form>\n          </div>\n          <div className=\"col-6\">\n            <div id=\"result-display\"></div>\n              { this.state.showResults ? (\n                  <div id=\"download-csv\">\n                    <CSVLink\n                      data={this.state.outputCsv}\n                      filename=\"data.csv\"\n                      className=\"hidden\"\n                      target=\"_blank\"\n                    >\n                    \n                    <div className=\"text-center\">\n                      <button className=\"btn btn-info btn-lg\">\n                        Download me\n                      </button>\n                    </div>\n                    </CSVLink>\n                  </div>\n                ) : null\n              }\n          </div>\n        </div>\n\n{/* \n        <main className=\"content\">\n          <div className=\"radio\">\n            <label>\n              <input\n                type=\"radio\"\n                value=\"row\"\n                checked={this.state.selectedOption === \"row\"}\n                onChange={this.handleOptionChange}\n              />\n              row\n            </label>\n            <br></br>\n            <label>\n              number of rows:\n              <input\n                type=\"text\"\n                name=\"numRow\"\n                pattern=\"[0-9]*\"\n                onChange={this.onChange.bind(this)}\n              />\n            </label>\n          </div>\n\n          <UploadCSV onSubmit={this.handleSubmit}></UploadCSV>\n          <div id=\"result-display\"></div>\n          {this.state.showResults ? (\n            <div id=\"download-csv\">\n              <CSVLink\n                data={this.state.outputCsv}\n                filename=\"data.csv\"\n                className=\"hidden\"\n                target=\"_blank\"\n              >\n                download me\n              </CSVLink>\n            </div>\n          ) : null}\n        </main> */}\n      </Layout>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}