{"ast":null,"code":"var _jsxFileName = \"/Users/youngjoon/Desktop/CS407/DatApex/front-end/pages/mlalgo.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport axios from \"axios\";\nimport UploadCSV from \"../components/Modal\";\nconst posts = [{\n  path: \"nba\",\n  title: \"Naive Bayes algorithm\"\n}, {\n  path: \"lra\",\n  title: \"Logistic Regression algorithm\"\n}, {\n  path: \"svm\",\n  title: \"Support Vector Machine algorithm\"\n}, {\n  path: \"bag\",\n  title: \"Bagging algorithm\"\n}, {\n  path: \"clus\",\n  title: \"Clustering algorithm\"\n}, {\n  path: \"tree\",\n  title: \"Decision tree algorithm\"\n}];\nimport Layout from \"../components/layout\";\nvar backend_url = \"\";\nexport default class extends React.Component {\n  static async getInitialProps({\n    query,\n    res\n  }) {\n    const post = posts.find(post => post.path == query.path);\n    console.log(post);\n    return {\n      post\n    };\n  }\n\n  constructor(props) {\n    super(props); // alert(\"ctor : \" + this.props.location);\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.state = {\n      imgSrc: \"\",\n      sos: \"\",\n      lambda: \"\",\n      maxit: \"\"\n    };\n    this.path = \"\";\n  }\n\n  onChange(event) {\n    console.log(event.target.name);\n    var param = event.target.name;\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleSubmit(filename) {\n    console.log(\"handling submit\");\n    var formData = new FormData(); // console.log(this.fileInput.current.files[0]);\n\n    formData.append(\"file\", filename);\n    var div = document.getElementById(\"image-display\");\n    div.innerHTML = \"<Spinner animation='border' role='status'> <span className='sr-only'>Loading...</span></Spinner>\";\n\n    if (this.path == \"nba\") {\n      backend_url = \"http://localhost:8000/dataMining/NaiveBayes/\";\n    } else if (this.path == \"lra\") {\n      backend_url = \"http://localhost:8000/dataMining/LogisticRegression/\";\n      backend_url = backend_url + this.state.sos + \"/\" + this.state.lambda + \"/\" + this.state.maxit;\n      console.log(backend_url);\n    } else if (this.path == \"svm\") {\n      backend_url = \"http://localhost:8000/dataMining/SVM/\";\n      backend_url = backend_url + this.state.sos + \"/\" + this.state.lambda + \"/\" + this.state.maxit;\n      console.log(backend_url);\n    } else if (this.path == \"bag\") {\n      backend_url = \"http://localhost:8000/dataMining/Bagging/\"; // List the params of each on of them\n    } else if (this.path == \"clus\") {\n      backend_url = \"http://localhost:8000/dataMining/Clustering/\"; // List the params of each on of them\n    } else if (this.path == \"tree\") {\n      backend_url = \"http://localhost:8000/dataMining/decisionTree/\"; // List the params of each on of them\n    }\n\n    axios.post(backend_url, formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    }).then(e => {\n      // console.log(e);\n      var div = document.getElementById(\"image-display\");\n      div.innerText = \"\";\n      var imageOupput = \"data:image/png;base64,\" + e.data;\n      this.setState({\n        imgSrc: imageOupput\n      });\n    }).catch(err => {\n      console.log(err);\n      var div = document.getElementById(\"image-display\");\n      div.innerText = \"Please check your input and parameters\";\n    });\n  }\n\n  render() {\n    // console.log(this.props.path);\n    // this.path = this.props.url.asPath.substring(8);\n    // const post = posts.find(p => p.path == this.path);\n    const {\n      post\n    } = this.props;\n\n    if (this.path == \"nba\") {\n      return __jsx(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, __jsx(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, post.title), __jsx(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }), __jsx(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"col-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, __jsx(UploadCSV, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      })), __jsx(\"div\", {\n        className: \"col-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        id: \"image-display\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }), __jsx(\"img\", {\n        id: \"image-output\",\n        src: this.state.imgSrc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }))));\n    } else if (this.path == \"lra\") {\n      return __jsx(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, __jsx(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, post.title), __jsx(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }), __jsx(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"form-group row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        className: \"col-sm-2 col-form-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \" Size of Step: \"), __jsx(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, __jsx(\"input\", {\n        className: \"form-control\",\n        placeholder: \"1,2,3\",\n        type: \"text\",\n        name: \"sos\",\n        onChange: this.onChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      })), __jsx(\"label\", {\n        className: \"col-sm-2 col-form-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \" Lambda: \"), __jsx(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, __jsx(\"input\", {\n        className: \"form-control\",\n        placeholder: \"1,2,3\",\n        type: \"text\",\n        name: \"lambda\",\n        onChange: this.onChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      })), __jsx(\"label\", {\n        className: \"col-sm-2 col-form-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \" \", \"Number of Max iteration:\", \" \"), __jsx(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, __jsx(\"input\", {\n        className: \"form-control\",\n        placeholder: \"1,2,3\",\n        type: \"text\",\n        name: \"maxit\",\n        onChange: this.onChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }))), __jsx(UploadCSV, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      })), __jsx(\"div\", {\n        className: \"col-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        id: \"image-display\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }), __jsx(\"img\", {\n        id: \"image-output\",\n        src: this.state.imgSrc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      })));\n    } else if (this.path == \"svm\") {\n      return __jsx(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, __jsx(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, post.title), __jsx(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }), __jsx(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"form-group row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        className: \"col-sm-2 col-form-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, \" Size of Step: \"), __jsx(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, __jsx(\"input\", {\n        className: \"form-control\",\n        placeholder: \"1,2,3\",\n        type: \"text\",\n        name: \"sos\",\n        onChange: this.onChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      })), __jsx(\"label\", {\n        className: \"col-sm-2 col-form-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, \" Lambda: \"), __jsx(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, __jsx(\"input\", {\n        className: \"form-control\",\n        placeholder: \"1,2,3\",\n        type: \"text\",\n        name: \"lambda\",\n        onChange: this.onChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      })), __jsx(\"label\", {\n        className: \"col-sm-2 col-form-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, \" \", \"Number of Max iteration:\", \" \"), __jsx(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, __jsx(\"input\", {\n        className: \"form-control\",\n        placeholder: \"1,2,3\",\n        type: \"text\",\n        name: \"maxit\",\n        onChange: this.onChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }))), __jsx(UploadCSV, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      })), __jsx(\"div\", {\n        className: \"col-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        id: \"image-display\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }), __jsx(\"img\", {\n        id: \"image-output\",\n        src: this.state.imgSrc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }))); // List the params of each on of them\n    } else if (this.path == \"bag\") {\n      backend_url = \"http://localhost:8000/dataMining/Bagging/\"; // List the params of each on of them\n    } else if (this.path == \"clus\") {\n      backend_url = \"http://localhost:8000/dataMining/Clustering/\"; // List the params of each on of them\n    } else if (this.path == \"tree\") {\n      backend_url = \"http://localhost:8000/dataMining/decisionTree/\"; // List the params of each on of them\n    }\n\n    return __jsx(React.Fragment, null, __jsx(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, post.title), __jsx(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"col-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, __jsx(UploadCSV, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"col-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      id: \"image-display\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }), __jsx(\"img\", {\n      id: \"image-output\",\n      src: this.state.imgSrc,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/youngjoon/Desktop/CS407/DatApex/front-end/pages/mlalgo.js"],"names":["React","axios","UploadCSV","posts","path","title","Layout","backend_url","Component","getInitialProps","query","res","post","find","console","log","constructor","props","handleSubmit","bind","state","imgSrc","sos","lambda","maxit","onChange","event","target","name","param","setState","value","filename","formData","FormData","append","div","document","getElementById","innerHTML","headers","then","e","innerText","imageOupput","data","catch","err","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport UploadCSV from \"../components/Modal\";\n\nconst posts = [\n  { path: \"nba\", title: \"Naive Bayes algorithm\" },\n  { path: \"lra\", title: \"Logistic Regression algorithm\" },\n  { path: \"svm\", title: \"Support Vector Machine algorithm\" },\n  { path: \"bag\", title: \"Bagging algorithm\" },\n  { path: \"clus\", title: \"Clustering algorithm\" },\n  { path: \"tree\", title: \"Decision tree algorithm\" }\n];\nimport Layout from \"../components/layout\";\n\nvar backend_url = \"\";\n\nexport default class extends React.Component {\n\n  static async getInitialProps({query, res}) {\n    const post = posts.find(post=> post.path == query.path);\n    console.log(post)\n    return {post}\n  }\n\n  constructor(props) {\n    super(props);\n\n    // alert(\"ctor : \" + this.props.location);\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.state = { imgSrc: \"\", sos: \"\", lambda: \"\", maxit: \"\" };\n    this.path = \"\";\n  }\n\n  onChange(event) {\n    console.log(event.target.name);\n    var param = event.target.name;\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  handleSubmit(filename) {\n    console.log(\"handling submit\");\n    var formData = new FormData();\n    // console.log(this.fileInput.current.files[0]);\n    formData.append(\"file\", filename);\n    var div = document.getElementById(\"image-display\");\n    div.innerHTML =\n      \"<Spinner animation='border' role='status'> <span className='sr-only'>Loading...</span></Spinner>\";\n    if (this.path == \"nba\") {\n      backend_url = \"http://localhost:8000/dataMining/NaiveBayes/\";\n    } else if (this.path == \"lra\") {\n      backend_url = \"http://localhost:8000/dataMining/LogisticRegression/\";\n      backend_url =\n        backend_url +\n        this.state.sos +\n        \"/\" +\n        this.state.lambda +\n        \"/\" +\n        this.state.maxit;\n      console.log(backend_url);\n    } else if (this.path == \"svm\") {\n      backend_url = \"http://localhost:8000/dataMining/SVM/\";\n      backend_url =\n        backend_url +\n        this.state.sos +\n        \"/\" +\n        this.state.lambda +\n        \"/\" +\n        this.state.maxit;\n      console.log(backend_url);\n    } else if (this.path == \"bag\") {\n      backend_url = \"http://localhost:8000/dataMining/Bagging/\";\n      // List the params of each on of them\n    } else if (this.path == \"clus\") {\n      backend_url = \"http://localhost:8000/dataMining/Clustering/\";\n      // List the params of each on of them\n    } else if (this.path == \"tree\") {\n      backend_url = \"http://localhost:8000/dataMining/decisionTree/\";\n      // List the params of each on of them\n    }\n    axios\n      .post(backend_url, formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      })\n      .then(e => {\n        // console.log(e);\n\n        var div = document.getElementById(\"image-display\");\n        div.innerText = \"\";\n        var imageOupput = \"data:image/png;base64,\" + e.data;\n        this.setState({ imgSrc: imageOupput });\n      })\n      .catch(err => {\n        console.log(err);\n\n        var div = document.getElementById(\"image-display\");\n        div.innerText = \"Please check your input and parameters\";\n      });\n  }\n  render() {\n    // console.log(this.props.path);\n    // this.path = this.props.url.asPath.substring(8);\n    // const post = posts.find(p => p.path == this.path);\n    const {post} =this.props\n    if (this.path == \"nba\") {\n      return (\n        <Layout>\n          <h1>{post.title}</h1>\n          <hr></hr>\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <UploadCSV onSubmit={this.handleSubmit}></UploadCSV>\n            </div>\n            <div className=\"col-6\">\n              <div id=\"image-display\"></div>\n              <img id=\"image-output\" src={this.state.imgSrc}></img>\n            </div>\n          </div>\n        </Layout>\n      );\n    } else if (this.path == \"lra\") {\n      return (\n        <Layout>\n          <h1>{post.title}</h1>\n          <hr></hr>\n          <form>\n            <div className=\"form-group row\">\n              <label className=\"col-sm-2 col-form-label\"> Size of Step: </label>\n              <div className=\"col-sm-10\">\n                <input\n                  className=\"form-control\"\n                  placeholder=\"1,2,3\"\n                  type=\"text\"\n                  name=\"sos\"\n                  onChange={this.onChange.bind(this)}\n                />\n              </div>\n              <label className=\"col-sm-2 col-form-label\"> Lambda: </label>\n              <div className=\"col-sm-10\">\n                <input\n                  className=\"form-control\"\n                  placeholder=\"1,2,3\"\n                  type=\"text\"\n                  name=\"lambda\"\n                  onChange={this.onChange.bind(this)}\n                />\n              </div>\n              <label className=\"col-sm-2 col-form-label\">\n                {\" \"}\n                Number of Max iteration:{\" \"}\n              </label>\n              <div className=\"col-sm-10\">\n                <input\n                  className=\"form-control\"\n                  placeholder=\"1,2,3\"\n                  type=\"text\"\n                  name=\"maxit\"\n                  onChange={this.onChange.bind(this)}\n                />\n              </div>\n            </div>\n            <UploadCSV onSubmit={this.handleSubmit}></UploadCSV>\n          </form>\n          <div className=\"col-6\">\n            <div id=\"image-display\"></div>\n            <img id=\"image-output\" src={this.state.imgSrc}></img>\n          </div>\n        </Layout>\n      );\n    } else if (this.path == \"svm\") {\n      return (\n        <Layout>\n          <h1>{post.title}</h1>\n          <hr></hr>\n          <form>\n            <div className=\"form-group row\">\n              <label className=\"col-sm-2 col-form-label\"> Size of Step: </label>\n              <div className=\"col-sm-10\">\n                <input\n                  className=\"form-control\"\n                  placeholder=\"1,2,3\"\n                  type=\"text\"\n                  name=\"sos\"\n                  onChange={this.onChange.bind(this)}\n                />\n              </div>\n              <label className=\"col-sm-2 col-form-label\"> Lambda: </label>\n              <div className=\"col-sm-10\">\n                <input\n                  className=\"form-control\"\n                  placeholder=\"1,2,3\"\n                  type=\"text\"\n                  name=\"lambda\"\n                  onChange={this.onChange.bind(this)}\n                />\n              </div>\n              <label className=\"col-sm-2 col-form-label\">\n                {\" \"}\n                Number of Max iteration:{\" \"}\n              </label>\n              <div className=\"col-sm-10\">\n                <input\n                  className=\"form-control\"\n                  placeholder=\"1,2,3\"\n                  type=\"text\"\n                  name=\"maxit\"\n                  onChange={this.onChange.bind(this)}\n                />\n              </div>\n            </div>\n            <UploadCSV onSubmit={this.handleSubmit}></UploadCSV>\n          </form>\n          <div className=\"col-6\">\n            <div id=\"image-display\"></div>\n            <img id=\"image-output\" src={this.state.imgSrc}></img>\n          </div>\n        </Layout>\n      );\n      // List the params of each on of them\n    } else if (this.path == \"bag\") {\n      backend_url = \"http://localhost:8000/dataMining/Bagging/\";\n      // List the params of each on of them\n    } else if (this.path == \"clus\") {\n      backend_url = \"http://localhost:8000/dataMining/Clustering/\";\n      // List the params of each on of them\n    } else if (this.path == \"tree\") {\n      backend_url = \"http://localhost:8000/dataMining/decisionTree/\";\n      // List the params of each on of them\n    }\n    return (\n      <>\n        <h1>{post.title}</h1>\n        <hr></hr>\n        <div className=\"row\">\n          <div className=\"col-6\">\n            <UploadCSV onSubmit={this.handleSubmit}></UploadCSV>\n          </div>\n          <div className=\"col-6\">\n            <div id=\"image-display\"></div>\n            <img id=\"image-output\" src={this.state.imgSrc}></img>\n          </div>\n        </div>\n      </>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}