{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/seohyun/dataPex/front-end/pages/mlalgo.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport axios from \"axios\";\nimport Modal from \"../components/Modal\";\nimport { Button, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Input, Label } from \"reactstrap\";\nconst posts = [{\n  path: \"nba\",\n  title: \"Naive Bayes algorithm\"\n}, {\n  path: \"lra\",\n  title: \"Logistic Regression algorithm\"\n}, {\n  path: \"svm\",\n  title: \"Support Vector Machine algorithm\"\n}, {\n  path: \"bag\",\n  title: \"Bagging algorithm\"\n}, {\n  path: \"clus\",\n  title: \"Clustering algorithm\"\n}];\nimport Layout from \"../components/layout\";\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"refreshList\", () => {\n      axios.get(\"http://localhost:8000/api/todos/\").then(res => this.setState({\n        todoList: res.data\n      })).catch(err => console.log(err));\n    });\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.fileInput = React.createRef();\n    this.state = {\n      imgSrc: \"\"\n    };\n  } // hexToBase64(str) {\n  //   return \n  // }\n\n\n  handleSubmit(event) {\n    // this.toggle();\n    event.preventDefault();\n    console.log(\"handling submit\");\n    console.log(this.fileInput.current.files);\n    var formData = new FormData(); // var imagefile = this.fileInput.current.files;\n\n    console.log(this.fileInput.current.files[0]);\n    formData.append(\"file\", this.fileInput.current.files[0]);\n    var display = document.querySelector(\".image-display\");\n    var output = document.getElementById(\"image-output\"); // var imageOupput;\n\n    axios.post(\"http://localhost:8000/upload/csv/\", formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    }) // .then(res => this.setState({imgSrc: this.state.imgSrc+res.data}))\n    .then(e => {\n      console.log(e); //   // var data = [];\n      //   // data.push(e.data)\n      //   // display.innerHTML = e.data.forms[0].name;\n      //   // output.src = \"{require('\"+e.data+\"')}\";\n      //   // console.log(e.data);\n      //   // var img = new Image();\n      //   // img.onload = function() {\n      //   //   myCanvasContext.drawImage(img, 0, 0);\n      //   // };\n      //   // img.src = e.data;\n\n      var t = btoa(String.fromCharCode.apply(null, e.data.replace(/\\r|\\n/g, \"\").replace(/([\\da-fA-F]{2}) ?/g, \"0x$1 \").replace(/ +$/, \"\").split(\" \")));\n      var imageOupput = \"data:image/png;base64,\" + e.data; //   // console.log(img);\n      //   // var node = document.createElement(\"img\");\n      //   // // var t = btoa(String.fromCharCode.apply(null, e.data.replace(/\\r|\\n/g, \"\").replace(/([\\da-fA-F]{2}) ?/g, \"0x$1 \").replace(/ +$/, \"\").split(\" \")));\n      //   // // node.src = 'data:image/jpeg;base64,' + t;\n      //   // node.src = Buffer.from(e.data, 'binary').toString('base64');\n      //   // document.getElementById(\"image\").appendChild(node);\n\n      this.setState({\n        imgSrc: imageOupput\n      });\n    }).then(e => console.log(this.state.imgSrc)).catch(err => console.log(err));\n  }\n\n  render() {\n    return __jsx(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, __jsx(\"main\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, __jsx(\"h1\", {\n      className: \"text-white text-uppercase text-center my-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Todo app\"), __jsx(Form, {\n      enctype: \"multipart/form-data\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, __jsx(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      for: \"name\" // class=\"col-md-3 col-sm-3 col-xs-12 control-label\"\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"File:\", \" \"), __jsx(\"div\", {\n      class: \"col-md-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      type: \"file\",\n      name: \"csv_file\",\n      id: \"csv_file\",\n      required: \"True\",\n      class: \"form-control\",\n      ref: this.fileInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }))), __jsx(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }))), __jsx(\"div\", {\n      id: \"image-display\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      id: \"image-output\",\n      src: this.state.imgSrc,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/seohyun/dataPex/front-end/pages/mlalgo.js"],"names":["React","axios","Modal","Button","ModalHeader","ModalBody","ModalFooter","Form","FormGroup","Input","Label","posts","path","title","Layout","Component","constructor","props","get","then","res","setState","todoList","data","catch","err","console","log","handleSubmit","bind","fileInput","createRef","state","imgSrc","event","preventDefault","current","files","formData","FormData","append","display","document","querySelector","output","getElementById","post","headers","e","t","btoa","String","fromCharCode","apply","replace","split","imageOupput","render"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,SACEC,MADF,EAEEC,WAFF,EAGEC,SAHF,EAIEC,WAJF,EAKEC,IALF,EAMEC,SANF,EAOEC,KAPF,EAQEC,KARF,QASO,YATP;AAWA,MAAMC,KAAK,GAAG,CACZ;AAAEC,EAAAA,IAAI,EAAE,KAAR;AAAeC,EAAAA,KAAK,EAAE;AAAtB,CADY,EAEZ;AAAED,EAAAA,IAAI,EAAE,KAAR;AAAeC,EAAAA,KAAK,EAAE;AAAtB,CAFY,EAGZ;AAAED,EAAAA,IAAI,EAAE,KAAR;AAAeC,EAAAA,KAAK,EAAE;AAAtB,CAHY,EAIZ;AAAED,EAAAA,IAAI,EAAE,KAAR;AAAeC,EAAAA,KAAK,EAAE;AAAtB,CAJY,EAKZ;AAAED,EAAAA,IAAI,EAAE,MAAR;AAAgBC,EAAAA,KAAK,EAAE;AAAvB,CALY,CAAd;AAOA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,eAAe,cAAcd,KAAK,CAACe,SAApB,CAA8B;AAC3CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,yCAUL,MAAM;AAClBhB,MAAAA,KAAK,CACFiB,GADH,CACO,kCADP,EAEGC,IAFH,CAEQC,GAAG,IAAI,KAAKC,QAAL,CAAc;AAAEC,QAAAA,QAAQ,EAAEF,GAAG,CAACG;AAAhB,OAAd,CAFf,EAGGC,KAHH,CAGSC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAHhB;AAID,KAfkB;;AAEjB,SAAKG,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,SAAL,GAAiB9B,KAAK,CAAC+B,SAAN,EAAjB;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,MAAM,EAAE;AAAT,KAAb;AACD,GAN0C,CAQ3C;AACA;AACA;;;AAOAL,EAAAA,YAAY,CAACM,KAAD,EAAQ;AAClB;AACAA,IAAAA,KAAK,CAACC,cAAN;AACAT,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKG,SAAL,CAAeM,OAAf,CAAuBC,KAAnC;AACA,QAAIC,QAAQ,GAAG,IAAIC,QAAJ,EAAf,CALkB,CAMlB;;AACAb,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKG,SAAL,CAAeM,OAAf,CAAuBC,KAAvB,CAA6B,CAA7B,CAAZ;AACAC,IAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwB,KAAKV,SAAL,CAAeM,OAAf,CAAuBC,KAAvB,CAA6B,CAA7B,CAAxB;AAEA,QAAII,OAAO,GAAGC,QAAQ,CAACC,aAAT,CAAuB,gBAAvB,CAAd;AACA,QAAIC,MAAM,GAAGF,QAAQ,CAACG,cAAT,CAAwB,cAAxB,CAAb,CAXkB,CAYlB;;AACA5C,IAAAA,KAAK,CACF6C,IADH,CACQ,mCADR,EAC6CR,QAD7C,EACuD;AACnDS,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAD0C,KADvD,EAME;AANF,KAQG5B,IARH,CAQS6B,CAAD,IAAO;AACXtB,MAAAA,OAAO,CAACC,GAAR,CAAYqB,CAAZ,EADW,CAEb;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,UAAIC,CAAC,GAAGC,IAAI,CAACC,MAAM,CAACC,YAAP,CAAoBC,KAApB,CAA0B,IAA1B,EAAgCL,CAAC,CAACzB,IAAF,CAAO+B,OAAP,CAAe,QAAf,EAAyB,EAAzB,EAA6BA,OAA7B,CAAqC,oBAArC,EAA2D,OAA3D,EAAoEA,OAApE,CAA4E,KAA5E,EAAmF,EAAnF,EAAuFC,KAAvF,CAA6F,GAA7F,CAAhC,CAAD,CAAZ;AAEC,UAAIC,WAAW,GAAG,2BAA2BR,CAAC,CAACzB,IAA/C,CAfY,CAgBb;AAEA;AACA;AACA;AACA;AACA;;AACE,WAAKF,QAAL,CAAc;AAACY,QAAAA,MAAM,EAAEuB;AAAT,OAAd;AAED,KAjCH,EAkCGrC,IAlCH,CAkCQ6B,CAAC,IAELtB,OAAO,CAACC,GAAR,CAAY,KAAKK,KAAL,CAAWC,MAAvB,CApCJ,EAsCGT,KAtCH,CAsCSC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAtChB;AAuCD;;AACDgC,EAAAA,MAAM,GAAG;AACP,WACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,4CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAIE,MAAC,IAAD;AAAM,MAAA,OAAO,EAAC,qBAAd;AAAoC,MAAA,QAAQ,EAAE,KAAK7B,YAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,KAAK,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,GAAG,EAAC,MADN,CAEE;AAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAIQ,GAJR,CADF,EAOE;AAAK,MAAA,KAAK,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,EAAE,EAAC,UAHL;AAIE,MAAA,QAAQ,EAAC,MAJX;AAKE,MAAA,KAAK,EAAC,cALR;AAME,MAAA,GAAG,EAAE,KAAKE,SANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAPF,CADF,EAmBE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBF,CADF,CAJF,EA2BE;AAAK,MAAA,EAAE,EAAC,eAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,EAAE,EAAE,cAAT;AACC,MAAA,GAAG,EAAE,KAAKE,KAAL,CAAWC,MADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CA3BF,CADF,CADF;AAoCD;;AA3G0C","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport Modal from \"../components/Modal\";\nimport {\n  Button,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Input,\n  Label\n} from \"reactstrap\";\n\nconst posts = [\n  { path: \"nba\", title: \"Naive Bayes algorithm\" },\n  { path: \"lra\", title: \"Logistic Regression algorithm\" },\n  { path: \"svm\", title: \"Support Vector Machine algorithm\" },\n  { path: \"bag\", title: \"Bagging algorithm\" },\n  { path: \"clus\", title: \"Clustering algorithm\" }\n];\nimport Layout from \"../components/layout\";\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.fileInput = React.createRef();\n    this.state = {imgSrc: \"\"}\n  }\n\n  // hexToBase64(str) {\n  //   return \n  // }\n  refreshList = () => {\n    axios\n      .get(\"http://localhost:8000/api/todos/\")\n      .then(res => this.setState({ todoList: res.data }))\n      .catch(err => console.log(err));\n  };\n  handleSubmit(event) {\n    // this.toggle();\n    event.preventDefault();\n    console.log(\"handling submit\");\n    console.log(this.fileInput.current.files);\n    var formData = new FormData();\n    // var imagefile = this.fileInput.current.files;\n    console.log(this.fileInput.current.files[0]);\n    formData.append(\"file\", this.fileInput.current.files[0]);\n\n    var display = document.querySelector(\".image-display\");\n    var output = document.getElementById(\"image-output\");\n    // var imageOupput;\n    axios\n      .post(\"http://localhost:8000/upload/csv/\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      })\n      // .then(res => this.setState({imgSrc: this.state.imgSrc+res.data}))\n\n      .then((e) => {\n        console.log(e);\n      //   // var data = [];\n      //   // data.push(e.data)\n      //   // display.innerHTML = e.data.forms[0].name;\n      //   // output.src = \"{require('\"+e.data+\"')}\";\n\n      //   // console.log(e.data);\n      //   // var img = new Image();\n      //   // img.onload = function() {\n      //   //   myCanvasContext.drawImage(img, 0, 0);\n      //   // };\n      //   // img.src = e.data;\n      var t = btoa(String.fromCharCode.apply(null, e.data.replace(/\\r|\\n/g, \"\").replace(/([\\da-fA-F]{2}) ?/g, \"0x$1 \").replace(/ +$/, \"\").split(\" \")));\n\n       var imageOupput = \"data:image/png;base64,\" + e.data ;\n      //   // console.log(img);\n\n      //   // var node = document.createElement(\"img\");\n      //   // // var t = btoa(String.fromCharCode.apply(null, e.data.replace(/\\r|\\n/g, \"\").replace(/([\\da-fA-F]{2}) ?/g, \"0x$1 \").replace(/ +$/, \"\").split(\" \")));\n      //   // // node.src = 'data:image/jpeg;base64,' + t;\n      //   // node.src = Buffer.from(e.data, 'binary').toString('base64');\n      //   // document.getElementById(\"image\").appendChild(node);\n        this.setState({imgSrc: imageOupput});\n        \n      })\n      .then(e =>\n\n        console.log(this.state.imgSrc)\n      )\n      .catch(err => console.log(err));\n  }\n  render() {\n    return (\n      <Layout>\n        <main className=\"content\">\n          <h1 className=\"text-white text-uppercase text-center my-4\">\n            Todo app\n          </h1>\n          <Form enctype=\"multipart/form-data\" onSubmit={this.handleSubmit}>\n            <FormGroup>\n              <div class=\"form-group\">\n                <label\n                  for=\"name\"\n                  // class=\"col-md-3 col-sm-3 col-xs-12 control-label\"\n                >\n                  File:{\" \"}\n                </label>\n                <div class=\"col-md-8\">\n                  <input\n                    type=\"file\"\n                    name=\"csv_file\"\n                    id=\"csv_file\"\n                    required=\"True\"\n                    class=\"form-control\"\n                    ref={this.fileInput}\n                  />\n                </div>\n              </div>\n              <input type=\"submit\" value=\"Submit\" />\n            </FormGroup>\n          </Form>\n          <div id=\"image-display\">\n            <img id= \"image-output\"\n             src={this.state.imgSrc}></img>\n          </div>\n        </main>\n      </Layout>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}