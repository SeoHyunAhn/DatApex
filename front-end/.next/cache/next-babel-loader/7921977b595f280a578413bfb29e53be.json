{"ast":null,"code":"var _jsxFileName = \"/Users/seohyun/dataPex/front-end/pages/mlalgo.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport axios from \"axios\";\nimport { Button, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Input, Label } from \"reactstrap\";\nimport UploadCSV from \"../components/Modal\";\nconst posts = [{\n  path: \"nba\",\n  title: \"Naive Bayes algorithm\"\n}, {\n  path: \"lra\",\n  title: \"Logistic Regression algorithm\"\n}, {\n  path: \"svm\",\n  title: \"Support Vector Machine algorithm\"\n}, {\n  path: \"bag\",\n  title: \"Bagging algorithm\"\n}, {\n  path: \"clus\",\n  title: \"Clustering algorithm\"\n}, {\n  path: \"tree\",\n  title: \"Decision tree algorithm\"\n}];\nimport Layout from \"../components/layout\";\nvar backend_url = \"\";\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.state = {\n      imgSrc: \"\",\n      sos: \"\",\n      lambda: \"\",\n      maxit: \"\",\n      depthlimit: \"\",\n      exlimit: \"\",\n      k: \"\"\n    };\n    this.path = \"\";\n  }\n\n  onChange(event) {\n    console.log(event.target.name);\n    var param = event.target.name;\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleSubmit(filename) {\n    console.log(\"handling submit\");\n    var formData = new FormData(); // console.log(this.fileInput.current.files[0]);\n\n    formData.append(\"file\", filename);\n    var div = document.getElementById(\"image-display\");\n    div.innerHTML = \"<Spinner animation='border' role='status'> <span className='sr-only'>Loading...</span></Spinner>\";\n\n    if (this.path == \"nba\") {\n      backend_url = \"http://localhost:8000/dataMining/NaiveBayes/\";\n    } else if (this.path == \"lra\") {\n      backend_url = \"http://localhost:8000/dataMining/LogisticRegression/\";\n      backend_url = backend_url + this.state.sos + \"/\" + this.state.lambda + \"/\" + this.state.maxit;\n      console.log(backend_url);\n    } else if (this.path == \"svm\") {\n      backend_url = \"http://localhost:8000/dataMining/SVM/\";\n      backend_url = backend_url + this.state.sos + \"/\" + this.state.lambda + \"/\" + this.state.maxit;\n      console.log(backend_url);\n    } else if (this.path == \"bag\") {\n      backend_url = \"http://localhost:8000/dataMining/Bagging/\"; // List the params of each on of them\n\n      backend_url = \"http://localhost:8000/dataMining/SVM/\";\n      backend_url = backend_url + this.state.depthlimit + \"/\" + this.state.exlimit;\n      console.log(backend_url);\n    } else if (this.path == \"clus\") {\n      backend_url = \"http://localhost:8000/dataMining/Clustering/\"; // List the params of each on of them\n\n      backend_url = backend_url + this.state.k;\n      console.log(backend_url);\n    } else if (this.path == \"tree\") {\n      backend_url = \"http://localhost:8000/dataMining/decisionTree/\"; // List the params of each on of them\n    }\n\n    axios.post(backend_url, formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    }).then(e => {\n      // console.log(e);\n      var div = document.getElementById(\"image-display\");\n      div.innerText = \"\";\n      var imageOupput = \"data:image/png;base64,\" + e.data;\n      this.setState({\n        imgSrc: imageOupput\n      });\n    }).catch(err => {\n      console.log(err);\n      var div = document.getElementById(\"image-display\");\n      div.innerText = \"Please check your input and parameters\";\n    });\n  }\n\n  render() {\n    // console.log(this.props.url.asPath.substring(8));\n    this.path = this.props.url.asPath.substring(8);\n    const post = posts.find(p => p.path == this.path);\n\n    if (this.path == \"nba\") {\n      return __jsx(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, __jsx(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, post.title), __jsx(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }), __jsx(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"col-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, __jsx(UploadCSV, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      })), __jsx(\"div\", {\n        className: \"col-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        id: \"image-display\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }), __jsx(\"img\", {\n        id: \"image-output\",\n        src: this.state.imgSrc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }))));\n    } else if (this.path == \"lra\") {\n      return __jsx(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, __jsx(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, post.title), __jsx(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }), __jsx(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"form-group row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        className: \"col-sm-2 col-form-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \" Size of Step: \"), __jsx(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, __jsx(\"input\", {\n        className: \"form-control\",\n        placeholder: \"1,2,3\",\n        type: \"text\",\n        name: \"sos\",\n        onChange: this.onChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      })), __jsx(\"label\", {\n        className: \"col-sm-2 col-form-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \" Lambda: \"), __jsx(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, __jsx(\"input\", {\n        className: \"form-control\",\n        placeholder: \"1,2,3\",\n        type: \"text\",\n        name: \"lambda\",\n        onChange: this.onChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      })), __jsx(\"label\", {\n        className: \"col-sm-2 col-form-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \" \", \"Number of Max iteration:\", \" \"), __jsx(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, __jsx(\"input\", {\n        className: \"form-control\",\n        placeholder: \"1,2,3\",\n        type: \"text\",\n        name: \"maxit\",\n        onChange: this.onChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }))), __jsx(UploadCSV, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      })), __jsx(\"div\", {\n        className: \"col-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        id: \"image-display\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }), __jsx(\"img\", {\n        id: \"image-output\",\n        src: this.state.imgSrc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      })));\n    } else if (this.path == \"svm\") {\n      return __jsx(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, __jsx(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, post.title), __jsx(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }), __jsx(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"form-group row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        className: \"col-sm-2 col-form-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, \" Size of Step: \"), __jsx(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, __jsx(\"input\", {\n        className: \"form-control\",\n        placeholder: \"1,2,3\",\n        type: \"text\",\n        name: \"sos\",\n        onChange: this.onChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      })), __jsx(\"label\", {\n        className: \"col-sm-2 col-form-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, \" Lambda: \"), __jsx(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, __jsx(\"input\", {\n        className: \"form-control\",\n        placeholder: \"1,2,3\",\n        type: \"text\",\n        name: \"lambda\",\n        onChange: this.onChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      })), __jsx(\"label\", {\n        className: \"col-sm-2 col-form-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, \" \", \"Number of Max iteration:\", \" \"), __jsx(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, __jsx(\"input\", {\n        className: \"form-control\",\n        placeholder: \"1,2,3\",\n        type: \"text\",\n        name: \"maxit\",\n        onChange: this.onChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }))), __jsx(UploadCSV, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      })), __jsx(\"div\", {\n        className: \"col-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        id: \"image-display\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }), __jsx(\"img\", {\n        id: \"image-output\",\n        src: this.state.imgSrc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }))); // List the params of each on of them\n    } else if (this.path == \"bag\") {\n      return __jsx(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, __jsx(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, post.title), __jsx(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }), __jsx(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"form-group row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        className: \"col-sm-2 col-form-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, \" Depth limit: \"), __jsx(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, __jsx(\"input\", {\n        className: \"form-control\",\n        placeholder: \"1,2,3\",\n        type: \"text\",\n        name: \"depthlimit\",\n        onChange: this.onChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      })), __jsx(\"label\", {\n        className: \"col-sm-2 col-form-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, \" Example Limit: \"), __jsx(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, __jsx(\"input\", {\n        className: \"form-control\",\n        placeholder: \"1,2,3\",\n        type: \"text\",\n        name: \"exlimit\",\n        onChange: this.onChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }))), __jsx(UploadCSV, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      })), __jsx(\"div\", {\n        className: \"col-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        id: \"image-display\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }), __jsx(\"img\", {\n        id: \"image-output\",\n        src: this.state.imgSrc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      })));\n    } else if (this.path == \"clus\") {\n      return __jsx(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, __jsx(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, post.title), __jsx(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }), __jsx(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"form-group row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        className: \"col-sm-2 col-form-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, \" Number of Cluster: \"), __jsx(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, __jsx(\"input\", {\n        className: \"form-control\",\n        placeholder: \"3\",\n        type: \"text\",\n        name: \"k\",\n        onChange: this.onChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }))), __jsx(UploadCSV, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      })), __jsx(\"div\", {\n        className: \"col-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        id: \"image-display\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }), __jsx(\"img\", {\n        id: \"image-output\",\n        src: this.state.imgSrc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      })));\n    } else if (this.path == \"tree\") {\n      backend_url = \"http://localhost:8000/dataMining/decisionTree/\"; // List the params of each on of them\n    }\n\n    return __jsx(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, __jsx(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, post.title), __jsx(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"col-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, __jsx(UploadCSV, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"col-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      id: \"image-display\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }), __jsx(\"img\", {\n      id: \"image-output\",\n      src: this.state.imgSrc,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/seohyun/dataPex/front-end/pages/mlalgo.js"],"names":["React","axios","Button","ModalHeader","ModalBody","ModalFooter","Form","FormGroup","Input","Label","UploadCSV","posts","path","title","Layout","backend_url","Component","constructor","props","handleSubmit","bind","state","imgSrc","sos","lambda","maxit","depthlimit","exlimit","k","onChange","event","console","log","target","name","param","setState","value","filename","formData","FormData","append","div","document","getElementById","innerHTML","post","headers","then","e","innerText","imageOupput","data","catch","err","render","url","asPath","substring","find","p"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Input,\n  Label\n} from \"reactstrap\";\nimport UploadCSV from \"../components/Modal\";\nconst posts = [\n  { path: \"nba\", title: \"Naive Bayes algorithm\" },\n  { path: \"lra\", title: \"Logistic Regression algorithm\" },\n  { path: \"svm\", title: \"Support Vector Machine algorithm\" },\n  { path: \"bag\", title: \"Bagging algorithm\" },\n  { path: \"clus\", title: \"Clustering algorithm\" },\n  { path: \"tree\", title: \"Decision tree algorithm\" }\n];\nimport Layout from \"../components/layout\";\n\nvar backend_url = \"\";\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.state = { imgSrc: \"\", sos: \"\", lambda: \"\", maxit: \"\" , depthlimit: \"\", exlimit:\"\", k:\"\"};\n    this.path = \"\";\n  }\n\n  onChange(event) {\n    console.log(event.target.name);\n    var param = event.target.name;\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  handleSubmit(filename) {\n    console.log(\"handling submit\");\n    var formData = new FormData();\n    // console.log(this.fileInput.current.files[0]);\n    formData.append(\"file\", filename);\n    var div = document.getElementById(\"image-display\");\n    div.innerHTML =\n      \"<Spinner animation='border' role='status'> <span className='sr-only'>Loading...</span></Spinner>\";\n    if (this.path == \"nba\") {\n      backend_url = \"http://localhost:8000/dataMining/NaiveBayes/\";\n    } else if (this.path == \"lra\") {\n      backend_url = \"http://localhost:8000/dataMining/LogisticRegression/\";\n      backend_url =\n        backend_url +\n        this.state.sos +\n        \"/\" +\n        this.state.lambda +\n        \"/\" +\n        this.state.maxit;\n      console.log(backend_url);\n    } else if (this.path == \"svm\") {\n      backend_url = \"http://localhost:8000/dataMining/SVM/\";\n      backend_url =\n        backend_url +\n        this.state.sos +\n        \"/\" +\n        this.state.lambda +\n        \"/\" +\n        this.state.maxit;\n      console.log(backend_url);\n    } else if (this.path == \"bag\") {\n      backend_url = \"http://localhost:8000/dataMining/Bagging/\";\n      // List the params of each on of them\n      backend_url = \"http://localhost:8000/dataMining/SVM/\";\n      backend_url =\n        backend_url +\n        this.state.depthlimit +\n        \"/\" +\n        this.state.exlimit;\n      console.log(backend_url);\n      \n    } else if (this.path == \"clus\") {\n      backend_url = \"http://localhost:8000/dataMining/Clustering/\";\n      // List the params of each on of them\n      backend_url =\n        backend_url +\n        this.state.k;\n      console.log(backend_url);\n    } else if (this.path == \"tree\") {\n      backend_url = \"http://localhost:8000/dataMining/decisionTree/\";\n      // List the params of each on of them\n    }\n    axios\n      .post(backend_url, formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      })\n      .then(e => {\n        // console.log(e);\n\n        var div = document.getElementById(\"image-display\");\n        div.innerText = \"\";\n        var imageOupput = \"data:image/png;base64,\" + e.data;\n        this.setState({ imgSrc: imageOupput });\n      })\n      .catch(err => {\n        console.log(err);\n\n        var div = document.getElementById(\"image-display\");\n        div.innerText = \"Please check your input and parameters\";\n      });\n  }\n  render() {\n    // console.log(this.props.url.asPath.substring(8));\n    this.path = this.props.url.asPath.substring(8);\n    const post = posts.find(p => p.path == this.path);\n    if (this.path == \"nba\") {\n      return (\n        <Layout>\n          <h1>{post.title}</h1>\n          <hr></hr>\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <UploadCSV onSubmit={this.handleSubmit}></UploadCSV>\n            </div>\n            <div className=\"col-6\">\n              <div id=\"image-display\"></div>\n              <img id=\"image-output\" src={this.state.imgSrc}></img>\n            </div>\n          </div>\n        </Layout>\n      );\n    } else if (this.path == \"lra\") {\n      return (\n        <Layout>\n          <h1>{post.title}</h1>\n          <hr></hr>\n          <form>\n            <div className=\"form-group row\">\n              <label className=\"col-sm-2 col-form-label\"> Size of Step: </label>\n              <div className=\"col-sm-10\">\n                <input\n                  className=\"form-control\"\n                  placeholder=\"1,2,3\"\n                  type=\"text\"\n                  name=\"sos\"\n                  onChange={this.onChange.bind(this)}\n                />\n              </div>\n              <label className=\"col-sm-2 col-form-label\"> Lambda: </label>\n              <div className=\"col-sm-10\">\n                <input\n                  className=\"form-control\"\n                  placeholder=\"1,2,3\"\n                  type=\"text\"\n                  name=\"lambda\"\n                  onChange={this.onChange.bind(this)}\n                />\n              </div>\n              <label className=\"col-sm-2 col-form-label\">\n                {\" \"}\n                Number of Max iteration:{\" \"}\n              </label>\n              <div className=\"col-sm-10\">\n                <input\n                  className=\"form-control\"\n                  placeholder=\"1,2,3\"\n                  type=\"text\"\n                  name=\"maxit\"\n                  onChange={this.onChange.bind(this)}\n                />\n              </div>\n            </div>\n            <UploadCSV onSubmit={this.handleSubmit}></UploadCSV>\n          </form>\n          <div className=\"col-6\">\n            <div id=\"image-display\"></div>\n            <img id=\"image-output\" src={this.state.imgSrc}></img>\n          </div>\n        </Layout>\n      );\n    } else if (this.path == \"svm\") {\n      return (\n        <Layout>\n          <h1>{post.title}</h1>\n          <hr></hr>\n          <form>\n            <div className=\"form-group row\">\n              <label className=\"col-sm-2 col-form-label\"> Size of Step: </label>\n              <div className=\"col-sm-10\">\n                <input\n                  className=\"form-control\"\n                  placeholder=\"1,2,3\"\n                  type=\"text\"\n                  name=\"sos\"\n                  onChange={this.onChange.bind(this)}\n                />\n              </div>\n              <label className=\"col-sm-2 col-form-label\"> Lambda: </label>\n              <div className=\"col-sm-10\">\n                <input\n                  className=\"form-control\"\n                  placeholder=\"1,2,3\"\n                  type=\"text\"\n                  name=\"lambda\"\n                  onChange={this.onChange.bind(this)}\n                />\n              </div>\n              <label className=\"col-sm-2 col-form-label\">\n                {\" \"}\n                Number of Max iteration:{\" \"}\n              </label>\n              <div className=\"col-sm-10\">\n                <input\n                  className=\"form-control\"\n                  placeholder=\"1,2,3\"\n                  type=\"text\"\n                  name=\"maxit\"\n                  onChange={this.onChange.bind(this)}\n                />\n              </div>\n            </div>\n            <UploadCSV onSubmit={this.handleSubmit}></UploadCSV>\n          </form>\n          <div className=\"col-6\">\n            <div id=\"image-display\"></div>\n            <img id=\"image-output\" src={this.state.imgSrc}></img>\n          </div>\n        </Layout>\n      );\n      // List the params of each on of them\n    } else if (this.path == \"bag\") {\n      return (\n        <Layout>\n          <h1>{post.title}</h1>\n          <hr></hr>\n          <form>\n            <div className=\"form-group row\">\n              <label className=\"col-sm-2 col-form-label\"> Depth limit: </label>\n              <div className=\"col-sm-10\">\n                <input\n                  className=\"form-control\"\n                  placeholder=\"1,2,3\"\n                  type=\"text\"\n                  name=\"depthlimit\"\n                  onChange={this.onChange.bind(this)}\n                />\n              </div>\n              <label className=\"col-sm-2 col-form-label\"> Example Limit: </label>\n              <div className=\"col-sm-10\">\n                <input\n                  className=\"form-control\"\n                  placeholder=\"1,2,3\"\n                  type=\"text\"\n                  name=\"exlimit\"\n                  onChange={this.onChange.bind(this)}\n                />\n              </div>\n            </div>\n            <UploadCSV onSubmit={this.handleSubmit}></UploadCSV>\n          </form>\n          <div className=\"col-6\">\n            <div id=\"image-display\"></div>\n            <img id=\"image-output\" src={this.state.imgSrc}></img>\n          </div>\n        </Layout>\n      );\n    } else if (this.path == \"clus\") {\n      return (\n        <Layout>\n          <h1>{post.title}</h1>\n          <hr></hr>\n          <form>\n            <div className=\"form-group row\">\n              <label className=\"col-sm-2 col-form-label\"> Number of Cluster: </label>\n              <div className=\"col-sm-10\">\n                <input\n                  className=\"form-control\"\n                  placeholder=\"3\"\n                  type=\"text\"\n                  name=\"k\"\n                  onChange={this.onChange.bind(this)}\n                />\n              </div>\n            </div>\n            <UploadCSV onSubmit={this.handleSubmit}></UploadCSV>\n          </form>\n          <div className=\"col-6\">\n            <div id=\"image-display\"></div>\n            <img id=\"image-output\" src={this.state.imgSrc}></img>\n          </div>\n        </Layout>\n      );\n    } else if (this.path == \"tree\") {\n      backend_url = \"http://localhost:8000/dataMining/decisionTree/\";\n      // List the params of each on of them\n    }\n    return (\n      <Layout>\n        <h1>{post.title}</h1>\n        <hr></hr>\n        <div className=\"row\">\n          <div className=\"col-6\">\n            <UploadCSV onSubmit={this.handleSubmit}></UploadCSV>\n          </div>\n          <div className=\"col-6\">\n            <div id=\"image-display\"></div>\n            <img id=\"image-output\" src={this.state.imgSrc}></img>\n          </div>\n        </div>\n      </Layout>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}