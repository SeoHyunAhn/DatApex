{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/youngjoon/Desktop/CS407/DatApex/front-end/pages/mlalgo.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport axios from \"axios\";\nimport UploadCSV from \"../components/Modal\";\nimport firebase from \"../common/firebase\";\nvar posts = [{\n  path: \"nba\",\n  title: \"Naive Bayes algorithm\"\n}, {\n  path: \"lra\",\n  title: \"Logistic Regression algorithm\"\n}, {\n  path: \"svm\",\n  title: \"Support Vector Machine algorithm\"\n}, {\n  path: \"bag\",\n  title: \"Bagging algorithm\"\n}, {\n  path: \"clus\",\n  title: \"Clustering algorithm\"\n}, {\n  path: \"tree\",\n  title: \"Decision tree algorithm\"\n}];\nimport Layout from \"../components/layout\";\nvar backend_url = \"\";\n\nvar _default =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(_default, _React$Component);\n\n  _createClass(_default, null, [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(_ref) {\n        var query, res, post;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                query = _ref.query, res = _ref.res;\n                post = posts.find(function (post) {\n                  return post.path == query.path;\n                });\n                console.log(post);\n                return _context.abrupt(\"return\", {\n                  post: post\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  function _default(props) {\n    var _this;\n\n    _classCallCheck(this, _default);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(_default).call(this, props)); // alert(\"ctor : \" + this.props.location);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleUpload\", function () {\n      var imgSrc = _this.state.imgSrc;\n      var uploadTask = firebase.storage.ref(\"images/\".concat(imgSrc.name)).put(imgSrc);\n      uploadTask.on(\"state_changed\", function (snapshot) {// progress function ...\n        // const progress = Math.round(\n        //   (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n        // );\n        // this.setState({ progress });\n      }, function (error) {\n        // Error function ...\n        console.log(error);\n      }, function () {\n        // complete function ...\n        storage.ref(\"images\").child(imgSrc.name).getDownloadURL().then(function (url) {\n          _this.setState({\n            url: url\n          });\n        });\n      });\n    });\n\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    _this.state = {\n      imgSrc: \"\",\n      url: \"\",\n      // progress: 0,\n      sos: \"\",\n      lambda: \"\",\n      maxit: \"\",\n      depthlimit: \"\",\n      exlimit: \"\",\n      k: \"\"\n    };\n    _this.path = \"\";\n    return _this;\n  }\n\n  _createClass(_default, [{\n    key: \"onChange\",\n    value: function onChange(event) {\n      console.log(event.target.name);\n      var param = event.target.name;\n      this.setState(_defineProperty({}, event.target.name, event.target.value));\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(filename) {\n      var _this2 = this;\n\n      console.log(\"handling submit\");\n      var formData = new FormData(); // console.log(this.fileInput.current.files[0]);\n\n      formData.append(\"file\", filename);\n      var div = document.getElementById(\"image-display\");\n      div.innerHTML = \"<Spinner animation='border' role='status'> <span className='sr-only'>Loading...</span></Spinner>\";\n\n      if (this.path == \"nba\") {\n        backend_url = \"http://localhost:8000/dataMining/NaiveBayes/\";\n      } else if (this.path == \"lra\") {\n        backend_url = \"http://localhost:8000/dataMining/LogisticRegression/\";\n        backend_url = backend_url + this.state.sos + \"/\" + this.state.lambda + \"/\" + this.state.maxit;\n        console.log(backend_url);\n      } else if (this.path == \"svm\") {\n        backend_url = \"http://localhost:8000/dataMining/SVM/\";\n        backend_url = backend_url + this.state.sos + \"/\" + this.state.lambda + \"/\" + this.state.maxit;\n        console.log(backend_url);\n      } else if (this.path == \"bag\") {\n        backend_url = \"http://localhost:8000/dataMining/Bagging/\";\n        backend_url = backend_url + this.state.depthlimit + \"/\" + this.state.exlimit;\n        console.log(backend_url);\n      } else if (this.path == \"clus\") {\n        backend_url = \"http://localhost:8000/dataMining/Clustering/\";\n        backend_url = backend_url + this.state.k;\n        console.log(backend_url);\n      } else if (this.path == \"tree\") {\n        backend_url = \"http://localhost:8000/dataMining/DecisionTree/\";\n        backend_url = backend_url + this.state.depthlimit + \"/\" + this.state.exlimit;\n        console.log(backend_url);\n      }\n\n      axios.post(backend_url, formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }).then(function (e) {\n        // console.log(e);\n        var div = document.getElementById(\"image-display\");\n        div.innerText = \"\";\n        var imageOupput = \"data:image/png;base64,\" + e.data;\n\n        _this2.setState({\n          imgSrc: imageOupput\n        });\n      })[\"catch\"](function (err) {\n        console.log(err);\n        var div = document.getElementById(\"image-display\");\n        div.innerText = \"Please check your input and parameters\";\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // console.log(this.props.path);\n      // this.path = this.props.url.asPath.substring(8);\n      // const post = posts.find(p => p.path == this.path);\n      var post = this.props.post; // console.log(post)\n\n      this.path = post.path;\n\n      if (this.path == \"nba\") {\n        return __jsx(React.Fragment, null, __jsx(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        }, post.title), __jsx(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        }), __jsx(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: \"col-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162\n          },\n          __self: this\n        }, __jsx(UploadCSV, {\n          onSubmit: this.handleSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        })), __jsx(\"div\", {\n          className: \"col-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          id: \"image-display\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166\n          },\n          __self: this\n        }), __jsx(\"img\", {\n          id: \"image-output\",\n          src: this.state.imgSrc,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          },\n          __self: this\n        }))));\n      } else if (this.path == \"lra\") {\n        return __jsx(React.Fragment, null, __jsx(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          },\n          __self: this\n        }, post.title), __jsx(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          },\n          __self: this\n        }), __jsx(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: \"col-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178\n          },\n          __self: this\n        }, __jsx(\"form\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: \"form-group row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180\n          },\n          __self: this\n        }, __jsx(\"label\", {\n          className: \"col-sm-2 col-form-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181\n          },\n          __self: this\n        }, \" Size of Step: \"), __jsx(\"div\", {\n          className: \"col-sm-10\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182\n          },\n          __self: this\n        }, __jsx(\"input\", {\n          className: \"form-control\",\n          placeholder: \"1,2,3\",\n          type: \"text\",\n          name: \"sos\",\n          onChange: this.onChange.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183\n          },\n          __self: this\n        })), __jsx(\"label\", {\n          className: \"col-sm-2 col-form-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191\n          },\n          __self: this\n        }, \" Lambda: \"), __jsx(\"div\", {\n          className: \"col-sm-10\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192\n          },\n          __self: this\n        }, __jsx(\"input\", {\n          className: \"form-control\",\n          placeholder: \"1,2,3\",\n          type: \"text\",\n          name: \"lambda\",\n          onChange: this.onChange.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193\n          },\n          __self: this\n        })), __jsx(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201\n          },\n          __self: this\n        }), __jsx(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202\n          },\n          __self: this\n        }), __jsx(\"label\", {\n          className: \"col-sm-2 col-form-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203\n          },\n          __self: this\n        }, \" \", \"Number of Max iteration:\", \" \"), __jsx(\"div\", {\n          className: \"col-sm-10\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207\n          },\n          __self: this\n        }, __jsx(\"input\", {\n          className: \"form-control\",\n          placeholder: \"1,2,3\",\n          type: \"text\",\n          name: \"maxit\",\n          onChange: this.onChange.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208\n          },\n          __self: this\n        }))), __jsx(UploadCSV, {\n          onSubmit: this.handleSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217\n          },\n          __self: this\n        }))), __jsx(\"div\", {\n          className: \"col-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          id: \"image-display\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221\n          },\n          __self: this\n        }), __jsx(\"img\", {\n          id: \"image-output\",\n          src: this.state.imgSrc,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222\n          },\n          __self: this\n        }))));\n      } else if (this.path == \"svm\") {\n        return __jsx(React.Fragment, null, __jsx(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230\n          },\n          __self: this\n        }, post.title), __jsx(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231\n          },\n          __self: this\n        }), __jsx(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: \"col-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 233\n          },\n          __self: this\n        }, __jsx(\"form\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: \"form-group row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235\n          },\n          __self: this\n        }, __jsx(\"label\", {\n          className: \"col-sm-2 col-form-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236\n          },\n          __self: this\n        }, \" Size of Step: \"), __jsx(\"div\", {\n          className: \"col-sm-10\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 237\n          },\n          __self: this\n        }, __jsx(\"input\", {\n          className: \"form-control\",\n          placeholder: \"1,2,3\",\n          type: \"text\",\n          name: \"sos\",\n          onChange: this.onChange.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 238\n          },\n          __self: this\n        })), __jsx(\"label\", {\n          className: \"col-sm-2 col-form-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246\n          },\n          __self: this\n        }, \" Lambda: \"), __jsx(\"div\", {\n          className: \"col-sm-10\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247\n          },\n          __self: this\n        }, __jsx(\"input\", {\n          className: \"form-control\",\n          placeholder: \"1,2,3\",\n          type: \"text\",\n          name: \"lambda\",\n          onChange: this.onChange.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 248\n          },\n          __self: this\n        })), __jsx(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 256\n          },\n          __self: this\n        }), __jsx(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 257\n          },\n          __self: this\n        }), __jsx(\"label\", {\n          className: \"col-sm-2 col-form-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258\n          },\n          __self: this\n        }, \" \", \"Number of Max iteration:\", \" \"), __jsx(\"div\", {\n          className: \"col-sm-10\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262\n          },\n          __self: this\n        }, __jsx(\"input\", {\n          className: \"form-control\",\n          placeholder: \"1,2,3\",\n          type: \"text\",\n          name: \"maxit\",\n          onChange: this.onChange.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 263\n          },\n          __self: this\n        }))), __jsx(UploadCSV, {\n          onSubmit: this.handleSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 272\n          },\n          __self: this\n        }))), __jsx(\"div\", {\n          className: \"col-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 275\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          id: \"image-display\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 276\n          },\n          __self: this\n        }), __jsx(\"img\", {\n          id: \"image-output\",\n          src: this.state.imgSrc,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 277\n          },\n          __self: this\n        })))); // List the params of each on of them\n      } else if (this.path == \"bag\") {\n        return __jsx(React.Fragment, null, __jsx(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 286\n          },\n          __self: this\n        }, post.title), __jsx(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 287\n          },\n          __self: this\n        }), __jsx(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 288\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: \"col-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 289\n          },\n          __self: this\n        }, __jsx(\"form\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 290\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: \"form-group row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 291\n          },\n          __self: this\n        }, __jsx(\"label\", {\n          className: \"col-sm-2 col-form-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 292\n          },\n          __self: this\n        }, \" Depth limit: \"), __jsx(\"div\", {\n          className: \"col-sm-10\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 293\n          },\n          __self: this\n        }, __jsx(\"input\", {\n          className: \"form-control\",\n          placeholder: \"3\",\n          type: \"text\",\n          name: \"depthlimit\",\n          onChange: this.onChange.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 294\n          },\n          __self: this\n        })), __jsx(\"label\", {\n          className: \"col-sm-2 col-form-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 302\n          },\n          __self: this\n        }, \" \", \"Example Limit:\", \" \"), __jsx(\"div\", {\n          className: \"col-sm-10\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 306\n          },\n          __self: this\n        }, __jsx(\"input\", {\n          className: \"form-control\",\n          placeholder: \"3\",\n          type: \"text\",\n          name: \"exlimit\",\n          onChange: this.onChange.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 307\n          },\n          __self: this\n        }))), __jsx(UploadCSV, {\n          onSubmit: this.handleSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 316\n          },\n          __self: this\n        }))), __jsx(\"div\", {\n          className: \"col-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 319\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          id: \"image-display\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 320\n          },\n          __self: this\n        }), __jsx(\"img\", {\n          id: \"image-output\",\n          src: this.state.imgSrc,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 321\n          },\n          __self: this\n        }))));\n      } else if (this.path == \"clus\") {\n        return __jsx(React.Fragment, null, __jsx(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 329\n          },\n          __self: this\n        }, post.title), __jsx(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 330\n          },\n          __self: this\n        }), __jsx(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 331\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: \"col-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 332\n          },\n          __self: this\n        }, __jsx(\"form\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 333\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: \"form-group row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 334\n          },\n          __self: this\n        }, __jsx(\"label\", {\n          className: \"col-sm-2 col-form-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 335\n          },\n          __self: this\n        }, \" \", \"Number of Cluster:\", \" \"), __jsx(\"div\", {\n          className: \"col-sm-10\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 339\n          },\n          __self: this\n        }, __jsx(\"input\", {\n          className: \"form-control\",\n          placeholder: \"3\",\n          type: \"text\",\n          name: \"k\",\n          onChange: this.onChange.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 340\n          },\n          __self: this\n        }))), __jsx(UploadCSV, {\n          onSubmit: this.handleSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 349\n          },\n          __self: this\n        }))), __jsx(\"div\", {\n          className: \"col-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 352\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          id: \"image-display\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 353\n          },\n          __self: this\n        }), __jsx(\"img\", {\n          id: \"image-output\",\n          src: this.state.imgSrc,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 354\n          },\n          __self: this\n        }), __jsx(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 355\n          },\n          __self: this\n        }, __jsx(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: this.handleUpload,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 356\n          },\n          __self: this\n        }, \" Save \")))));\n      } else if (this.path == \"tree\") {\n        return __jsx(React.Fragment, null, __jsx(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 365\n          },\n          __self: this\n        }, post.title), __jsx(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 366\n          },\n          __self: this\n        }), __jsx(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 367\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: \"col-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 368\n          },\n          __self: this\n        }, __jsx(\"form\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 369\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: \"form-group row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 370\n          },\n          __self: this\n        }, __jsx(\"label\", {\n          className: \"col-sm-2 col-form-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 371\n          },\n          __self: this\n        }, \" Depth limit: \"), __jsx(\"div\", {\n          className: \"col-sm-10\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 372\n          },\n          __self: this\n        }, __jsx(\"input\", {\n          className: \"form-control\",\n          placeholder: \"3\",\n          type: \"text\",\n          name: \"depthlimit\",\n          onChange: this.onChange.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 373\n          },\n          __self: this\n        })), __jsx(\"label\", {\n          className: \"col-sm-2 col-form-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 381\n          },\n          __self: this\n        }, \" \", \"Example Limit:\", \" \"), __jsx(\"div\", {\n          className: \"col-sm-10\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 385\n          },\n          __self: this\n        }, __jsx(\"input\", {\n          className: \"form-control\",\n          placeholder: \"3\",\n          type: \"text\",\n          name: \"exlimit\",\n          onChange: this.onChange.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 386\n          },\n          __self: this\n        }))), __jsx(UploadCSV, {\n          onSubmit: this.handleSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 395\n          },\n          __self: this\n        }))), __jsx(\"div\", {\n          className: \"col-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 398\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          id: \"image-display\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 399\n          },\n          __self: this\n        }), __jsx(\"img\", {\n          id: \"image-output\",\n          src: this.state.imgSrc,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 400\n          },\n          __self: this\n        }))));\n      }\n\n      return __jsx(React.Fragment, null, __jsx(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408\n        },\n        __self: this\n      }, post.title), __jsx(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409\n        },\n        __self: this\n      }), __jsx(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"col-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411\n        },\n        __self: this\n      }, __jsx(UploadCSV, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412\n        },\n        __self: this\n      })), __jsx(\"div\", {\n        className: \"col-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        id: \"image-display\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415\n        },\n        __self: this\n      }), __jsx(\"img\", {\n        id: \"image-output\",\n        src: this.state.imgSrc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return _default;\n}(React.Component);\n\nexport { _default as default };","map":{"version":3,"sources":["/Users/youngjoon/Desktop/CS407/DatApex/front-end/pages/mlalgo.js"],"names":["React","axios","UploadCSV","firebase","posts","path","title","Layout","backend_url","query","res","post","find","console","log","props","imgSrc","state","uploadTask","storage","ref","name","put","on","snapshot","error","child","getDownloadURL","then","url","setState","handleSubmit","bind","sos","lambda","maxit","depthlimit","exlimit","k","event","target","param","value","filename","formData","FormData","append","div","document","getElementById","innerHTML","headers","e","innerText","imageOupput","data","err","onChange","handleUpload","Component"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AAEA,IAAMC,KAAK,GAAG,CACZ;AAAEC,EAAAA,IAAI,EAAE,KAAR;AAAeC,EAAAA,KAAK,EAAE;AAAtB,CADY,EAEZ;AAAED,EAAAA,IAAI,EAAE,KAAR;AAAeC,EAAAA,KAAK,EAAE;AAAtB,CAFY,EAGZ;AAAED,EAAAA,IAAI,EAAE,KAAR;AAAeC,EAAAA,KAAK,EAAE;AAAtB,CAHY,EAIZ;AAAED,EAAAA,IAAI,EAAE,KAAR;AAAeC,EAAAA,KAAK,EAAE;AAAtB,CAJY,EAKZ;AAAED,EAAAA,IAAI,EAAE,MAAR;AAAgBC,EAAAA,KAAK,EAAE;AAAvB,CALY,EAMZ;AAAED,EAAAA,IAAI,EAAE,MAAR;AAAgBC,EAAAA,KAAK,EAAE;AAAvB,CANY,CAAd;AAQA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,IAAIC,WAAW,GAAG,EAAlB;;;;;;;;;;;;;;;;;;AAIgCC,gBAAAA,K,QAAAA,K,EAAOC,G,QAAAA,G;AAC7BC,gBAAAA,I,GAAOP,KAAK,CAACQ,IAAN,CAAW,UAAAD,IAAI;AAAA,yBAAGA,IAAI,CAACN,IAAL,IAAaI,KAAK,CAACJ,IAAtB;AAAA,iBAAf,C;AACbQ,gBAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;iDACO;AAACA,kBAAAA,IAAI,EAAJA;AAAD,iB;;;;;;;;;;;;;;;;;;AAGT,oBAAYI,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,kFAAMA,KAAN,GADiB,CAGjB;;AAHiB,mEA6FJ,YAAM;AAAA,UACXC,MADW,GACA,MAAKC,KADL,CACXD,MADW;AAEnB,UAAME,UAAU,GAAGf,QAAQ,CAACgB,OAAT,CAAiBC,GAAjB,kBAA+BJ,MAAM,CAACK,IAAtC,GAA8CC,GAA9C,CAAkDN,MAAlD,CAAnB;AAEAE,MAAAA,UAAU,CAACK,EAAX,CACE,eADF,EAEE,UAAAC,QAAQ,EAAI,CACV;AACA;AACA;AACA;AACA;AACD,OARH,EASE,UAAAC,KAAK,EAAI;AACP;AACAZ,QAAAA,OAAO,CAACC,GAAR,CAAYW,KAAZ;AACD,OAZH,EAaE,YAAM;AACJ;AACAN,QAAAA,OAAO,CACJC,GADH,CACO,QADP,EAEGM,KAFH,CAESV,MAAM,CAACK,IAFhB,EAGGM,cAHH,GAIGC,IAJH,CAIQ,UAAAC,GAAG,EAAI;AACX,gBAAKC,QAAL,CAAc;AAAED,YAAAA,GAAG,EAAHA;AAAF,WAAd;AACD,SANH;AAOC,OAtBL;AAwBC,KAzHgB;;AAKjB,UAAKE,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,+BAApB;AACA,UAAKf,KAAL,GAAa;AACXD,MAAAA,MAAM,EAAE,EADG;AAEXa,MAAAA,GAAG,EAAE,EAFM;AAGX;AACAI,MAAAA,GAAG,EAAE,EAJM;AAKXC,MAAAA,MAAM,EAAE,EALG;AAMXC,MAAAA,KAAK,EAAE,EANI;AAOXC,MAAAA,UAAU,EAAE,EAPD;AAQXC,MAAAA,OAAO,EAAE,EARE;AASXC,MAAAA,CAAC,EAAE;AATQ,KAAb;AAWA,UAAKjC,IAAL,GAAY,EAAZ;AAjBiB;AAkBlB;;;;6BAEQkC,K,EAAO;AACd1B,MAAAA,OAAO,CAACC,GAAR,CAAYyB,KAAK,CAACC,MAAN,CAAanB,IAAzB;AACA,UAAIoB,KAAK,GAAGF,KAAK,CAACC,MAAN,CAAanB,IAAzB;AACA,WAAKS,QAAL,qBAAiBS,KAAK,CAACC,MAAN,CAAanB,IAA9B,EAAqCkB,KAAK,CAACC,MAAN,CAAaE,KAAlD;AACD;;;iCAEYC,Q,EAAU;AAAA;;AACrB9B,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,UAAI8B,QAAQ,GAAG,IAAIC,QAAJ,EAAf,CAFqB,CAGrB;;AACAD,MAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBH,QAAxB;AACA,UAAII,GAAG,GAAGC,QAAQ,CAACC,cAAT,CAAwB,eAAxB,CAAV;AACAF,MAAAA,GAAG,CAACG,SAAJ,GACE,kGADF;;AAEA,UAAI,KAAK7C,IAAL,IAAa,KAAjB,EAAwB;AACtBG,QAAAA,WAAW,GAAG,8CAAd;AACD,OAFD,MAEO,IAAI,KAAKH,IAAL,IAAa,KAAjB,EAAwB;AAC7BG,QAAAA,WAAW,GAAG,sDAAd;AACAA,QAAAA,WAAW,GACTA,WAAW,GACX,KAAKS,KAAL,CAAWgB,GADX,GAEA,GAFA,GAGA,KAAKhB,KAAL,CAAWiB,MAHX,GAIA,GAJA,GAKA,KAAKjB,KAAL,CAAWkB,KANb;AAOAtB,QAAAA,OAAO,CAACC,GAAR,CAAYN,WAAZ;AACD,OAVM,MAUA,IAAI,KAAKH,IAAL,IAAa,KAAjB,EAAwB;AAC7BG,QAAAA,WAAW,GAAG,uCAAd;AACAA,QAAAA,WAAW,GACTA,WAAW,GACX,KAAKS,KAAL,CAAWgB,GADX,GAEA,GAFA,GAGA,KAAKhB,KAAL,CAAWiB,MAHX,GAIA,GAJA,GAKA,KAAKjB,KAAL,CAAWkB,KANb;AAOAtB,QAAAA,OAAO,CAACC,GAAR,CAAYN,WAAZ;AACD,OAVM,MAUA,IAAI,KAAKH,IAAL,IAAa,KAAjB,EAAwB;AAC7BG,QAAAA,WAAW,GAAG,2CAAd;AACAA,QAAAA,WAAW,GACTA,WAAW,GAAG,KAAKS,KAAL,CAAWmB,UAAzB,GAAsC,GAAtC,GAA4C,KAAKnB,KAAL,CAAWoB,OADzD;AAEAxB,QAAAA,OAAO,CAACC,GAAR,CAAYN,WAAZ;AACD,OALM,MAKA,IAAI,KAAKH,IAAL,IAAa,MAAjB,EAAyB;AAC9BG,QAAAA,WAAW,GAAG,8CAAd;AACAA,QAAAA,WAAW,GAAGA,WAAW,GAAG,KAAKS,KAAL,CAAWqB,CAAvC;AACAzB,QAAAA,OAAO,CAACC,GAAR,CAAYN,WAAZ;AACD,OAJM,MAIA,IAAI,KAAKH,IAAL,IAAa,MAAjB,EAAyB;AAC9BG,QAAAA,WAAW,GAAG,gDAAd;AACAA,QAAAA,WAAW,GACTA,WAAW,GAAG,KAAKS,KAAL,CAAWmB,UAAzB,GAAsC,GAAtC,GAA4C,KAAKnB,KAAL,CAAWoB,OADzD;AAEAxB,QAAAA,OAAO,CAACC,GAAR,CAAYN,WAAZ;AACD;;AACDP,MAAAA,KAAK,CACFU,IADH,CACQH,WADR,EACqBoC,QADrB,EAC+B;AAC3BO,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AADkB,OAD/B,EAMGvB,IANH,CAMQ,UAAAwB,CAAC,EAAI;AACT;AAEA,YAAIL,GAAG,GAAGC,QAAQ,CAACC,cAAT,CAAwB,eAAxB,CAAV;AACAF,QAAAA,GAAG,CAACM,SAAJ,GAAgB,EAAhB;AACA,YAAIC,WAAW,GAAG,2BAA2BF,CAAC,CAACG,IAA/C;;AACA,QAAA,MAAI,CAACzB,QAAL,CAAc;AAAEd,UAAAA,MAAM,EAAEsC;AAAV,SAAd;AACD,OAbH,WAcS,UAAAE,GAAG,EAAI;AACZ3C,QAAAA,OAAO,CAACC,GAAR,CAAY0C,GAAZ;AAEA,YAAIT,GAAG,GAAGC,QAAQ,CAACC,cAAT,CAAwB,eAAxB,CAAV;AACAF,QAAAA,GAAG,CAACM,SAAJ,GAAgB,wCAAhB;AACD,OAnBH;AAoBD;;;6BAgCQ;AACP;AACA;AACA;AAHO,UAIA1C,IAJA,GAIO,KAAKI,KAJZ,CAIAJ,IAJA,EAKP;;AACA,WAAKN,IAAL,GAAYM,IAAI,CAACN,IAAjB;;AACA,UAAI,KAAKA,IAAL,IAAa,KAAjB,EAAwB;AACtB,eACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKM,IAAI,CAACL,KAAV,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,EAGE;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,MAAC,SAAD;AAAW,UAAA,QAAQ,EAAE,KAAKyB,YAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF,EAIE;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,EAAE,EAAC,eAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE;AAAK,UAAA,EAAE,EAAC,cAAR;AAAuB,UAAA,GAAG,EAAE,KAAKd,KAAL,CAAWD,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,CAJF,CAHF,CADF;AAeD,OAhBD,MAgBO,IAAI,KAAKX,IAAL,IAAa,KAAjB,EAAwB;AAC7B,eACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKM,IAAI,CAACL,KAAV,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,EAGE;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAO,UAAA,SAAS,EAAC,yBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAEE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AACE,UAAA,SAAS,EAAC,cADZ;AAEE,UAAA,WAAW,EAAC,OAFd;AAGE,UAAA,IAAI,EAAC,MAHP;AAIE,UAAA,IAAI,EAAC,KAJP;AAKE,UAAA,QAAQ,EAAE,KAAKmD,QAAL,CAAczB,IAAd,CAAmB,IAAnB,CALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CAFF,EAWE;AAAO,UAAA,SAAS,EAAC,yBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAXF,EAYE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AACE,UAAA,SAAS,EAAC,cADZ;AAEE,UAAA,WAAW,EAAC,OAFd;AAGE,UAAA,IAAI,EAAC,MAHP;AAIE,UAAA,IAAI,EAAC,QAJP;AAKE,UAAA,QAAQ,EAAE,KAAKyB,QAAL,CAAczB,IAAd,CAAmB,IAAnB,CALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CAZF,EAqBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UArBF,EAsBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAtBF,EAuBE;AAAO,UAAA,SAAS,EAAC,yBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,GADH,8BAE2B,GAF3B,CAvBF,EA2BE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AACE,UAAA,SAAS,EAAC,cADZ;AAEE,UAAA,WAAW,EAAC,OAFd;AAGE,UAAA,IAAI,EAAC,MAHP;AAIE,UAAA,IAAI,EAAC,OAJP;AAKE,UAAA,QAAQ,EAAE,KAAKyB,QAAL,CAAczB,IAAd,CAAmB,IAAnB,CALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CA3BF,CADF,EAsCE,MAAC,SAAD;AAAW,UAAA,QAAQ,EAAE,KAAKD,YAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAtCF,CADF,CADF,EA2CE;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,EAAE,EAAC,eAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE;AAAK,UAAA,EAAE,EAAC,cAAR;AAAuB,UAAA,GAAG,EAAE,KAAKd,KAAL,CAAWD,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,CA3CF,CAHF,CADF;AAsDD,OAvDM,MAuDA,IAAI,KAAKX,IAAL,IAAa,KAAjB,EAAwB;AAC7B,eACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKM,IAAI,CAACL,KAAV,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,EAGE;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAO,UAAA,SAAS,EAAC,yBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAEE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AACE,UAAA,SAAS,EAAC,cADZ;AAEE,UAAA,WAAW,EAAC,OAFd;AAGE,UAAA,IAAI,EAAC,MAHP;AAIE,UAAA,IAAI,EAAC,KAJP;AAKE,UAAA,QAAQ,EAAE,KAAKmD,QAAL,CAAczB,IAAd,CAAmB,IAAnB,CALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CAFF,EAWE;AAAO,UAAA,SAAS,EAAC,yBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAXF,EAYE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AACE,UAAA,SAAS,EAAC,cADZ;AAEE,UAAA,WAAW,EAAC,OAFd;AAGE,UAAA,IAAI,EAAC,MAHP;AAIE,UAAA,IAAI,EAAC,QAJP;AAKE,UAAA,QAAQ,EAAE,KAAKyB,QAAL,CAAczB,IAAd,CAAmB,IAAnB,CALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CAZF,EAqBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UArBF,EAsBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAtBF,EAuBE;AAAO,UAAA,SAAS,EAAC,yBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,GADH,8BAE2B,GAF3B,CAvBF,EA2BE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AACE,UAAA,SAAS,EAAC,cADZ;AAEE,UAAA,WAAW,EAAC,OAFd;AAGE,UAAA,IAAI,EAAC,MAHP;AAIE,UAAA,IAAI,EAAC,OAJP;AAKE,UAAA,QAAQ,EAAE,KAAKyB,QAAL,CAAczB,IAAd,CAAmB,IAAnB,CALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CA3BF,CADF,EAsCE,MAAC,SAAD;AAAW,UAAA,QAAQ,EAAE,KAAKD,YAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAtCF,CADF,CADF,EA2CE;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,EAAE,EAAC,eAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE;AAAK,UAAA,EAAE,EAAC,cAAR;AAAuB,UAAA,GAAG,EAAE,KAAKd,KAAL,CAAWD,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,CA3CF,CAHF,CADF,CAD6B,CAuD7B;AACD,OAxDM,MAwDA,IAAI,KAAKX,IAAL,IAAa,KAAjB,EAAwB;AAC7B,eACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKM,IAAI,CAACL,KAAV,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,EAGE;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAO,UAAA,SAAS,EAAC,yBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AACE,UAAA,SAAS,EAAC,cADZ;AAEE,UAAA,WAAW,EAAC,GAFd;AAGE,UAAA,IAAI,EAAC,MAHP;AAIE,UAAA,IAAI,EAAC,YAJP;AAKE,UAAA,QAAQ,EAAE,KAAKmD,QAAL,CAAczB,IAAd,CAAmB,IAAnB,CALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CAFF,EAWE;AAAO,UAAA,SAAS,EAAC,yBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,GADH,oBAEiB,GAFjB,CAXF,EAeE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AACE,UAAA,SAAS,EAAC,cADZ;AAEE,UAAA,WAAW,EAAC,GAFd;AAGE,UAAA,IAAI,EAAC,MAHP;AAIE,UAAA,IAAI,EAAC,SAJP;AAKE,UAAA,QAAQ,EAAE,KAAKyB,QAAL,CAAczB,IAAd,CAAmB,IAAnB,CALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CAfF,CADF,EA0BE,MAAC,SAAD;AAAW,UAAA,QAAQ,EAAE,KAAKD,YAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UA1BF,CADF,CADF,EA+BE;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,EAAE,EAAC,eAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE;AAAK,UAAA,EAAE,EAAC,cAAR;AAAuB,UAAA,GAAG,EAAE,KAAKd,KAAL,CAAWD,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,CA/BF,CAHF,CADF;AA0CD,OA3CM,MA2CA,IAAI,KAAKX,IAAL,IAAa,MAAjB,EAAyB;AAC9B,eACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKM,IAAI,CAACL,KAAV,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,EAGE;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAO,UAAA,SAAS,EAAC,yBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,GADH,wBAEqB,GAFrB,CADF,EAKE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AACE,UAAA,SAAS,EAAC,cADZ;AAEE,UAAA,WAAW,EAAC,GAFd;AAGE,UAAA,IAAI,EAAC,MAHP;AAIE,UAAA,IAAI,EAAC,GAJP;AAKE,UAAA,QAAQ,EAAE,KAAKmD,QAAL,CAAczB,IAAd,CAAmB,IAAnB,CALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CALF,CADF,EAgBE,MAAC,SAAD;AAAW,UAAA,QAAQ,EAAE,KAAKD,YAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAhBF,CADF,CADF,EAqBE;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,EAAE,EAAC,eAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE;AAAK,UAAA,EAAE,EAAC,cAAR;AAAuB,UAAA,GAAG,EAAE,KAAKd,KAAL,CAAWD,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAQ,UAAA,SAAS,EAAC,iBAAlB;AAAoC,UAAA,OAAO,EAAG,KAAK0C,YAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CAHF,CArBF,CAHF,CADF;AAmCD,OApCM,MAoCA,IAAI,KAAKrD,IAAL,IAAa,MAAjB,EAAyB;AAC9B,eACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKM,IAAI,CAACL,KAAV,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,EAGE;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAO,UAAA,SAAS,EAAC,yBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AACE,UAAA,SAAS,EAAC,cADZ;AAEE,UAAA,WAAW,EAAC,GAFd;AAGE,UAAA,IAAI,EAAC,MAHP;AAIE,UAAA,IAAI,EAAC,YAJP;AAKE,UAAA,QAAQ,EAAE,KAAKmD,QAAL,CAAczB,IAAd,CAAmB,IAAnB,CALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CAFF,EAWE;AAAO,UAAA,SAAS,EAAC,yBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,GADH,oBAEiB,GAFjB,CAXF,EAeE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AACE,UAAA,SAAS,EAAC,cADZ;AAEE,UAAA,WAAW,EAAC,GAFd;AAGE,UAAA,IAAI,EAAC,MAHP;AAIE,UAAA,IAAI,EAAC,SAJP;AAKE,UAAA,QAAQ,EAAE,KAAKyB,QAAL,CAAczB,IAAd,CAAmB,IAAnB,CALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CAfF,CADF,EA0BE,MAAC,SAAD;AAAW,UAAA,QAAQ,EAAE,KAAKD,YAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UA1BF,CADF,CADF,EA+BE;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,EAAE,EAAC,eAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE;AAAK,UAAA,EAAE,EAAC,cAAR;AAAuB,UAAA,GAAG,EAAE,KAAKd,KAAL,CAAWD,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,CA/BF,CAHF,CADF;AA0CD;;AACD,aACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKL,IAAI,CAACL,KAAV,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,SAAD;AAAW,QAAA,QAAQ,EAAE,KAAKyB,YAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAIE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,EAAE,EAAC,eAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAK,QAAA,EAAE,EAAC,cAAR;AAAuB,QAAA,GAAG,EAAE,KAAKd,KAAL,CAAWD,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAJF,CAHF,CADF;AAeD;;;;EAnZ0BhB,KAAK,CAAC2D,S","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport UploadCSV from \"../components/Modal\";\nimport firebase from \"../common/firebase\";\n\nconst posts = [\n  { path: \"nba\", title: \"Naive Bayes algorithm\" },\n  { path: \"lra\", title: \"Logistic Regression algorithm\" },\n  { path: \"svm\", title: \"Support Vector Machine algorithm\" },\n  { path: \"bag\", title: \"Bagging algorithm\" },\n  { path: \"clus\", title: \"Clustering algorithm\" },\n  { path: \"tree\", title: \"Decision tree algorithm\" }\n];\nimport Layout from \"../components/layout\";\n\nvar backend_url = \"\";\n\nexport default class extends React.Component {\n\n  static async getInitialProps({query, res}) {\n    const post = posts.find(post=> post.path == query.path);\n    console.log(post)\n    return {post}\n  }\n\n  constructor(props) {\n    super(props);\n\n    // alert(\"ctor : \" + this.props.location);\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.state = {\n      imgSrc: \"\",\n      url: \"\",\n      // progress: 0,\n      sos: \"\",\n      lambda: \"\",\n      maxit: \"\",\n      depthlimit: \"\",\n      exlimit: \"\",\n      k: \"\"\n    };\n    this.path = \"\";\n  }\n\n  onChange(event) {\n    console.log(event.target.name);\n    var param = event.target.name;\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  handleSubmit(filename) {\n    console.log(\"handling submit\");\n    var formData = new FormData();\n    // console.log(this.fileInput.current.files[0]);\n    formData.append(\"file\", filename);\n    var div = document.getElementById(\"image-display\");\n    div.innerHTML =\n      \"<Spinner animation='border' role='status'> <span className='sr-only'>Loading...</span></Spinner>\";\n    if (this.path == \"nba\") {\n      backend_url = \"http://localhost:8000/dataMining/NaiveBayes/\";\n    } else if (this.path == \"lra\") {\n      backend_url = \"http://localhost:8000/dataMining/LogisticRegression/\";\n      backend_url =\n        backend_url +\n        this.state.sos +\n        \"/\" +\n        this.state.lambda +\n        \"/\" +\n        this.state.maxit;\n      console.log(backend_url);\n    } else if (this.path == \"svm\") {\n      backend_url = \"http://localhost:8000/dataMining/SVM/\";\n      backend_url =\n        backend_url +\n        this.state.sos +\n        \"/\" +\n        this.state.lambda +\n        \"/\" +\n        this.state.maxit;\n      console.log(backend_url);\n    } else if (this.path == \"bag\") {\n      backend_url = \"http://localhost:8000/dataMining/Bagging/\";\n      backend_url =\n        backend_url + this.state.depthlimit + \"/\" + this.state.exlimit;\n      console.log(backend_url);\n    } else if (this.path == \"clus\") {\n      backend_url = \"http://localhost:8000/dataMining/Clustering/\";\n      backend_url = backend_url + this.state.k;\n      console.log(backend_url);\n    } else if (this.path == \"tree\") {\n      backend_url = \"http://localhost:8000/dataMining/DecisionTree/\";\n      backend_url =\n        backend_url + this.state.depthlimit + \"/\" + this.state.exlimit;\n      console.log(backend_url);\n    }\n    axios\n      .post(backend_url, formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      })\n      .then(e => {\n        // console.log(e);\n\n        var div = document.getElementById(\"image-display\");\n        div.innerText = \"\";\n        var imageOupput = \"data:image/png;base64,\" + e.data;\n        this.setState({ imgSrc: imageOupput });\n      })\n      .catch(err => {\n        console.log(err);\n\n        var div = document.getElementById(\"image-display\");\n        div.innerText = \"Please check your input and parameters\";\n      });\n  }\n\n  handleUpload = () => {\n    const { imgSrc } = this.state;\n    const uploadTask = firebase.storage.ref(`images/${imgSrc.name}`).put(imgSrc);\n    \n    uploadTask.on(\n      \"state_changed\",\n      snapshot => {\n        // progress function ...\n        // const progress = Math.round(\n        //   (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n        // );\n        // this.setState({ progress });\n      },\n      error => {\n        // Error function ...\n        console.log(error);\n      },\n      () => {\n        // complete function ...\n        storage\n          .ref(\"images\")\n          .child(imgSrc.name)\n          .getDownloadURL()\n          .then(url => {\n            this.setState({ url });\n          });\n        }\n      );\n    };\n\n  render() {\n    // console.log(this.props.path);\n    // this.path = this.props.url.asPath.substring(8);\n    // const post = posts.find(p => p.path == this.path);\n    const {post} =this.props\n    // console.log(post)\n    this.path = post.path;\n    if (this.path == \"nba\") {\n      return (\n        <>\n          <h1>{post.title}</h1>\n          <hr></hr>\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <UploadCSV onSubmit={this.handleSubmit}></UploadCSV>\n            </div>\n            <div className=\"col-6\">\n              <div id=\"image-display\"></div>\n              <img id=\"image-output\" src={this.state.imgSrc}></img>\n            </div>\n          </div>\n        </>\n      );\n    } else if (this.path == \"lra\") {\n      return (\n        <>\n          <h1>{post.title}</h1>\n          <hr></hr>\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <form>\n                <div className=\"form-group row\">\n                  <label className=\"col-sm-2 col-form-label\"> Size of Step: </label>\n                  <div className=\"col-sm-10\">\n                    <input\n                      className=\"form-control\"\n                      placeholder=\"1,2,3\"\n                      type=\"text\"\n                      name=\"sos\"\n                      onChange={this.onChange.bind(this)}\n                    />\n                  </div>\n                  <label className=\"col-sm-2 col-form-label\"> Lambda: </label>\n                  <div className=\"col-sm-10\">\n                    <input\n                      className=\"form-control\"\n                      placeholder=\"1,2,3\"\n                      type=\"text\"\n                      name=\"lambda\"\n                      onChange={this.onChange.bind(this)}\n                    />\n                  </div>\n                  <br />\n                  <br />\n                  <label className=\"col-sm-2 col-form-label\">\n                    {\" \"}\n                    Number of Max iteration:{\" \"}\n                  </label>\n                  <div className=\"col-sm-10\">\n                    <input\n                      className=\"form-control\"\n                      placeholder=\"1,2,3\"\n                      type=\"text\"\n                      name=\"maxit\"\n                      onChange={this.onChange.bind(this)}\n                    />\n                  </div>\n                </div>\n                <UploadCSV onSubmit={this.handleSubmit}></UploadCSV>\n              </form>\n            </div>\n            <div className=\"col-6\">\n              <div id=\"image-display\"></div>\n              <img id=\"image-output\" src={this.state.imgSrc}></img>\n            </div>\n          </div>\n        </>\n      );\n    } else if (this.path == \"svm\") {\n      return (\n        <>\n          <h1>{post.title}</h1>\n          <hr></hr>\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <form>\n                <div className=\"form-group row\">\n                  <label className=\"col-sm-2 col-form-label\"> Size of Step: </label>\n                  <div className=\"col-sm-10\">\n                    <input\n                      className=\"form-control\"\n                      placeholder=\"1,2,3\"\n                      type=\"text\"\n                      name=\"sos\"\n                      onChange={this.onChange.bind(this)}\n                    />\n                  </div>\n                  <label className=\"col-sm-2 col-form-label\"> Lambda: </label>\n                  <div className=\"col-sm-10\">\n                    <input\n                      className=\"form-control\"\n                      placeholder=\"1,2,3\"\n                      type=\"text\"\n                      name=\"lambda\"\n                      onChange={this.onChange.bind(this)}\n                    />\n                  </div>\n                  <br />\n                  <br />\n                  <label className=\"col-sm-2 col-form-label\">\n                    {\" \"}\n                    Number of Max iteration:{\" \"}\n                  </label>\n                  <div className=\"col-sm-10\">\n                    <input\n                      className=\"form-control\"\n                      placeholder=\"1,2,3\"\n                      type=\"text\"\n                      name=\"maxit\"\n                      onChange={this.onChange.bind(this)}\n                    />\n                  </div>\n                </div>\n                <UploadCSV onSubmit={this.handleSubmit}></UploadCSV>\n              </form>\n            </div>\n            <div className=\"col-6\">\n              <div id=\"image-display\"></div>\n              <img id=\"image-output\" src={this.state.imgSrc}></img>\n            </div>\n          </div>\n        </>\n      );\n      // List the params of each on of them\n    } else if (this.path == \"bag\") {\n      return (\n        <>\n          <h1>{post.title}</h1>\n          <hr></hr>\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <form>\n                <div className=\"form-group row\">\n                  <label className=\"col-sm-2 col-form-label\"> Depth limit: </label>\n                  <div className=\"col-sm-10\">\n                    <input\n                      className=\"form-control\"\n                      placeholder=\"3\"\n                      type=\"text\"\n                      name=\"depthlimit\"\n                      onChange={this.onChange.bind(this)}\n                    />\n                  </div>\n                  <label className=\"col-sm-2 col-form-label\">\n                    {\" \"}\n                    Example Limit:{\" \"}\n                  </label>\n                  <div className=\"col-sm-10\">\n                    <input\n                      className=\"form-control\"\n                      placeholder=\"3\"\n                      type=\"text\"\n                      name=\"exlimit\"\n                      onChange={this.onChange.bind(this)}\n                    />\n                  </div>\n                </div>\n                <UploadCSV onSubmit={this.handleSubmit}></UploadCSV>\n              </form>\n            </div>\n            <div className=\"col-6\">\n              <div id=\"image-display\"></div>\n              <img id=\"image-output\" src={this.state.imgSrc}></img>\n            </div>\n          </div>\n        </>\n      );\n    } else if (this.path == \"clus\") {\n      return (\n        <>\n          <h1>{post.title}</h1>\n          <hr></hr>\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <form>\n                <div className=\"form-group row\">\n                  <label className=\"col-sm-2 col-form-label\">\n                    {\" \"}\n                    Number of Cluster:{\" \"}\n                  </label>\n                  <div className=\"col-sm-10\">\n                    <input\n                      className=\"form-control\"\n                      placeholder=\"3\"\n                      type=\"text\"\n                      name=\"k\"\n                      onChange={this.onChange.bind(this)}\n                    />\n                  </div>\n                </div>\n                <UploadCSV onSubmit={this.handleSubmit}></UploadCSV>\n              </form>\n            </div>\n            <div className=\"col-6\">\n              <div id=\"image-display\"></div>\n              <img id=\"image-output\" src={this.state.imgSrc}></img>\n              <div>\n                <button className=\"btn btn-primary\" onClick={ this.handleUpload } > Save </button>\n              </div>\n            </div>\n          </div>\n        </>\n      );\n    } else if (this.path == \"tree\") {\n      return (\n        <>\n          <h1>{post.title}</h1>\n          <hr></hr>\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <form>\n                <div className=\"form-group row\">\n                  <label className=\"col-sm-2 col-form-label\"> Depth limit: </label>\n                  <div className=\"col-sm-10\">\n                    <input\n                      className=\"form-control\"\n                      placeholder=\"3\"\n                      type=\"text\"\n                      name=\"depthlimit\"\n                      onChange={this.onChange.bind(this)}\n                    />\n                  </div>\n                  <label className=\"col-sm-2 col-form-label\">\n                    {\" \"}\n                    Example Limit:{\" \"}\n                  </label>\n                  <div className=\"col-sm-10\">\n                    <input\n                      className=\"form-control\"\n                      placeholder=\"3\"\n                      type=\"text\"\n                      name=\"exlimit\"\n                      onChange={this.onChange.bind(this)}\n                    />\n                  </div>\n                </div>\n                <UploadCSV onSubmit={this.handleSubmit}></UploadCSV>\n              </form>\n            </div>\n            <div className=\"col-6\">\n              <div id=\"image-display\"></div>\n              <img id=\"image-output\" src={this.state.imgSrc}></img>\n            </div>\n          </div>\n        </>\n      );\n    }\n    return (\n      <>\n        <h1>{post.title}</h1>\n        <hr></hr>\n        <div className=\"row\">\n          <div className=\"col-6\">\n            <UploadCSV onSubmit={this.handleSubmit}></UploadCSV>\n          </div>\n          <div className=\"col-6\">\n            <div id=\"image-display\"></div>\n            <img id=\"image-output\" src={this.state.imgSrc}></img>\n          </div>\n        </div>\n      </>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}