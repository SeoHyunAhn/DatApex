{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/seohyun/dataPex/front-end/pages/preproc.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport axios from \"axios\";\nimport { Button, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Input, Label } from \"reactstrap\";\nimport { CSVLink, CSVDownload } from \"react-csv\";\nimport UploadCSV from \"../components/Modal\"; // import { Components } from \"@reactioncommerce/reaction-components\";\n\nconst posts = [{\n  path: \"label\",\n  title: \"Label Encoding\"\n}, {\n  path: \"one-hot\",\n  title: \"One-Hot Encoding\"\n}, {\n  path: \"delete-rc\",\n  title: \"Delete Row/Column\"\n}, {\n  path: \"replaceW\",\n  title: \"Replace W\"\n}, {\n  path: \"certain\",\n  title: \"Select Certain\"\n}];\nimport Layout from \"../components/layout\";\nexport default class extends React.Component {\n  static async getInitialProps({\n    query,\n    res\n  }) {\n    const post = posts.find(post => post.path == query.path);\n    console.log(post);\n    return {\n      post\n    };\n  }\n\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleUpload\", () => {\n      const {\n        outputCsv\n      } = this.state; // let message = this.state.imgSrc.substring(22);\n      // console.log(this.state.imgSrc);\n      // console.log(message);\n\n      const storage = firebase.storage().ref();\n      const user = firebase.auth().currentUser.uid;\n      var tempDate = new Date();\n      var date = tempDate.getFullYear() + \" \" + (tempDate.getMonth() + 1) + \" \" + tempDate.getDate() + \" \" + tempDate.getHours() + \":\" + tempDate.getMinutes() + \":\" + tempDate.getSeconds();\n      var fileName = user + \"/\" + date + \"_Preporcess_data.csv\";\n      const uploadTastk = firebase.storage().ref().child(fileName).put(message, {\n        contentType: \"multipart/form-data\"\n      });\n      uploadTastk.then(response => {\n        console.log(\"image upload success\");\n      }, failedReason => {\n        console.log(\"image upload failed\");\n      });\n    });\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleOptionChange = this.handleOptionChange.bind(this); // this.csvLink = React.createRef();\n\n    this.state = {\n      outputCsv: \"\",\n      selectedOption: \"\",\n      paramNum: \"\",\n      showResults: false\n    };\n    this.path = \"\";\n  }\n\n  handleSubmit(filename) {\n    event.preventDefault();\n    var formData = new FormData(); // console.log(this.fileInput.current.files[0]);\n\n    formData.append(\"file\", filename);\n    var div = document.getElementById(\"result-display\");\n    div.innerHTML = \"<Spinner animation='border' role='status'> <span className='sr-only'>Loading...</span></Spinner>\";\n    var link = \"\";\n    console.log(this.state.selectedOption);\n\n    if (this.path == \"label\") {\n      //  selected params of each on of them\n      link = \"preProc/LabelEncoding/\";\n    } else if (this.path == \"one-hot\") {\n      link = \"preProc/OneHotEncoding/\" + this.state.paramNum;\n    } else if (this.path == \"delete-rc\") {\n      // console.log(this.state.selectedOption)\n      if (this.state.selectedOption == \"row\") {\n        link = \"preProc/delRow/\" + this.state.paramNum;\n      } else if (this.state.selectedOption == \"col\") {\n        link = \"preProc/delCol/\" + this.state.paramNum;\n      }\n    } else if (this.path == \"replaceW\") {\n      link = \"preProc/ReplaceW\" + this.state.paramNum;\n    } else if (this.path == \"certain\") {// selected params of each on of them\n    }\n\n    axios.post(\"http://localhost:8000/\" + link, formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    }).then(e => {\n      console.log(e);\n      console.log(e.data);\n      this.setState({\n        outputCsv: e.data,\n        showResults: true\n      });\n      div.innerHTML = \"\";\n    }).catch(err => {\n      console.log(err);\n      var div = document.getElementById(\"result-display\");\n      div.innerText = \"Please check your input and parameters\";\n    });\n  }\n\n  handleOptionChange(changeEvent) {\n    console.log(changeEvent.target);\n    this.setState({\n      selectedOption: changeEvent.target.value\n    });\n  }\n\n  onChange(event) {\n    console.log(event.target);\n    this.setState({\n      paramNum: event.target.value\n    });\n  }\n\n  render() {\n    const {\n      post\n    } = this.props;\n    this.path = post.path;\n    console.log(this.path);\n\n    if (this.path == \"label\") {\n      return __jsx(React.Fragment, null, __jsx(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, post.title), __jsx(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }), __jsx(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"col-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, __jsx(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, __jsx(UploadCSV, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }))), __jsx(\"div\", {\n        className: \"col-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        id: \"result-display\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }), this.state.showResults ? __jsx(\"div\", {\n        id: \"download-csv\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, __jsx(CSVLink, {\n        data: this.state.outputCsv,\n        filename: \"data.csv\",\n        className: \"hidden\",\n        target: \"_blank\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \"Download me\"), __jsx(\"div\", {\n        className: \"text-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, __jsx(\"button\", {\n        className: \"btn btn-secondary btn-sm\",\n        onClick: this.handleUpload,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \" \", \"Save\", \" \"))) : null)));\n    } else if (this.path == \"one-hot\") {\n      return __jsx(React.Fragment, null, __jsx(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, post.title), __jsx(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }), __jsx(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"col-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, __jsx(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"form-group row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        className: \"col-sm-2 col-form-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, \" \", \"Number of Column:\", \" \"), __jsx(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, __jsx(\"input\", {\n        className: \"form-control\",\n        placeholder: \"1,2,3\",\n        type: \"text\",\n        name: \"numCol\",\n        onChange: this.onChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }))), __jsx(UploadCSV, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }))), __jsx(\"div\", {\n        className: \"col-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        id: \"result-display\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }), this.state.showResults ? __jsx(\"div\", {\n        id: \"download-csv\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, __jsx(CSVLink, {\n        data: this.state.outputCsv,\n        filename: \"data.csv\",\n        className: \"hidden\",\n        target: \"_blank\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, \"Download me\")) : null)));\n    } else if (this.path == \"delete-rc\" || this.path == \"replaceW\") {\n      return __jsx(React.Fragment, null, __jsx(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, post.title), __jsx(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }), __jsx(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"col-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, __jsx(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"form-check\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        class: \"form-check-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, __jsx(\"input\", {\n        className: \"form-check-input\",\n        type: \"radio\",\n        value: \"row\",\n        checked: this.state.selectedOption === \"row\",\n        onChange: this.handleOptionChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }), \"Row\")), __jsx(\"div\", {\n        className: \"form-check\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, __jsx(\"input\", {\n        className: \"form-check-input\",\n        type: \"radio\",\n        value: \"col\",\n        checked: this.state.selectedOption === \"col\",\n        onChange: this.handleOptionChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }), \"Col\")), __jsx(\"div\", {\n        className: \"form-group row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        className: \"col-sm-2 col-form-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, \" \", \"Number of Rows:\", \" \"), __jsx(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, __jsx(\"input\", {\n        className: \"form-control\",\n        placeholder: \"1,2,3\",\n        type: \"text\",\n        name: \"numRow\",\n        pattern: \"[0-9],*\",\n        onChange: this.onChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }))), __jsx(\"div\", {\n        className: \"form-group row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        className: \"col-sm-2 col-form-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, \" \", \"Number of Cols:\", \" \"), __jsx(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, __jsx(\"input\", {\n        className: \"form-control\",\n        placeholder: \"1,2,3\",\n        type: \"text\",\n        name: \"numCol\",\n        pattern: \"[0-9],*\",\n        onChange: this.onChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }))), __jsx(UploadCSV, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }))), __jsx(\"div\", {\n        className: \"col-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        id: \"result-display\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }), this.state.showResults ? __jsx(\"div\", {\n        id: \"download-csv\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }, __jsx(CSVLink, {\n        data: this.state.outputCsv,\n        filename: \"data.csv\",\n        className: \"hidden\",\n        target: \"_blank\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }, __jsx(\"button\", {\n        className: \"btn btn-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }, \"Download me\"))), __jsx(\"div\", {\n        className: \"text-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, __jsx(\"button\", {\n        className: \"btn btn-secondary btn-sm\",\n        onClick: this.handleUpload,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }, \" \", \"Save\", \" \"))) : null))); // } else if (this.path == \"replaceW\") {\n      // List the params of each on of them\n    } else if (this.path == \"certain\") {// List the params of each on of them\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/seohyun/dataPex/front-end/pages/preproc.js"],"names":["React","axios","Button","ModalHeader","ModalBody","ModalFooter","Form","FormGroup","Input","Label","CSVLink","CSVDownload","UploadCSV","posts","path","title","Layout","Component","getInitialProps","query","res","post","find","console","log","constructor","props","outputCsv","state","storage","firebase","ref","user","auth","currentUser","uid","tempDate","Date","date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","fileName","uploadTastk","child","put","message","contentType","then","response","failedReason","handleSubmit","bind","handleOptionChange","selectedOption","paramNum","showResults","filename","event","preventDefault","formData","FormData","append","div","document","getElementById","innerHTML","link","headers","e","data","setState","catch","err","innerText","changeEvent","target","value","onChange","render","handleUpload"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Input,\n  Label\n} from \"reactstrap\";\nimport { CSVLink, CSVDownload } from \"react-csv\";\nimport UploadCSV from \"../components/Modal\";\n// import { Components } from \"@reactioncommerce/reaction-components\";\n\nconst posts = [\n  { path: \"label\", title: \"Label Encoding\" },\n  { path: \"one-hot\", title: \"One-Hot Encoding\" },\n  { path: \"delete-rc\", title: \"Delete Row/Column\" },\n  { path: \"replaceW\", title: \"Replace W\" },\n  { path: \"certain\", title: \"Select Certain\" }\n];\nimport Layout from \"../components/layout\";\n\nexport default class extends React.Component {\n  static async getInitialProps({ query, res }) {\n    const post = posts.find(post => post.path == query.path);\n    console.log(post);\n    return { post };\n  }\n\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleOptionChange = this.handleOptionChange.bind(this);\n    // this.csvLink = React.createRef();\n    this.state = {\n      outputCsv: \"\",\n      selectedOption: \"\",\n      paramNum: \"\",\n      showResults: false\n    };\n    this.path = \"\";\n  }\n  handleSubmit(filename) {\n    event.preventDefault();\n    var formData = new FormData();\n    // console.log(this.fileInput.current.files[0]);\n    formData.append(\"file\", filename);\n    var div = document.getElementById(\"result-display\");\n    div.innerHTML =\n      \"<Spinner animation='border' role='status'> <span className='sr-only'>Loading...</span></Spinner>\";\n\n    var link = \"\";\n    console.log(this.state.selectedOption);\n    if (this.path == \"label\") {\n      //  selected params of each on of them\n      link = \"preProc/LabelEncoding/\";\n    } else if (this.path == \"one-hot\") {\n      link = \"preProc/OneHotEncoding/\" + this.state.paramNum;\n    } else if (this.path == \"delete-rc\") {\n      // console.log(this.state.selectedOption)\n      if (this.state.selectedOption == \"row\") {\n        link = \"preProc/delRow/\" + this.state.paramNum;\n      } else if (this.state.selectedOption == \"col\") {\n        link = \"preProc/delCol/\" + this.state.paramNum;\n      }\n    } else if (this.path == \"replaceW\") {\n      link = \"preProc/ReplaceW\" + this.state.paramNum;\n    } else if (this.path == \"certain\") {\n      // selected params of each on of them\n    }\n\n    axios\n      .post(\"http://localhost:8000/\" + link, formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      })\n      .then(e => {\n        console.log(e);\n        console.log(e.data);\n        this.setState({ outputCsv: e.data, showResults: true });\n        div.innerHTML = \"\";\n      })\n      .catch(err => {\n        console.log(err);\n\n        var div = document.getElementById(\"result-display\");\n        div.innerText = \"Please check your input and parameters\";\n      });\n  }\n\n  handleOptionChange(changeEvent) {\n    console.log(changeEvent.target);\n    this.setState({\n      selectedOption: changeEvent.target.value\n    });\n  }\n  onChange(event) {\n    console.log(event.target);\n    this.setState({ paramNum: event.target.value });\n  }\n\n\n  handleUpload = () => {\n    const { outputCsv } = this.state;\n    // let message = this.state.imgSrc.substring(22);\n\n    // console.log(this.state.imgSrc);\n    // console.log(message);\n\n    const storage = firebase.storage().ref();\n    const user = firebase.auth().currentUser.uid;\n    var tempDate = new Date();\n    var date =\n      tempDate.getFullYear() +\n      \" \" +\n      (tempDate.getMonth() + 1) +\n      \" \" +\n      tempDate.getDate() +\n      \" \" +\n      tempDate.getHours() +\n      \":\" +\n      tempDate.getMinutes() +\n      \":\" +\n      tempDate.getSeconds();\n\n    var fileName = user + \"/\" + date + \"_Preporcess_data.csv\";\n    const uploadTastk = firebase\n      .storage()\n      .ref()\n      .child(fileName)\n      .put(message, { contentType: \"multipart/form-data\" });\n    uploadTastk.then(\n      response => {\n        console.log(\"image upload success\");\n      },\n      failedReason => {\n        console.log(\"image upload failed\");\n      }\n    );\n  };\n\n  render() {\n    const { post } = this.props;\n\n    this.path = post.path;\n    console.log(this.path);\n\n    if (this.path == \"label\") {\n      return (\n        <>\n          <h1>{post.title}</h1>\n          <hr></hr>\n\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <form>\n                <UploadCSV onSubmit={this.handleSubmit}></UploadCSV>\n              </form>\n            </div>\n            <div className=\"col-6\">\n              <div id=\"result-display\"></div>\n              {this.state.showResults ? (\n                <div id=\"download-csv\">\n                  <CSVLink\n                    data={this.state.outputCsv}\n                    filename=\"data.csv\"\n                    className=\"hidden\"\n                    target=\"_blank\"\n                  >\n                    Download me\n                  </CSVLink>\n                  <div className=\"text-right\">\n                    <button\n                      className=\"btn btn-secondary btn-sm\"\n                      onClick={this.handleUpload}\n                    >\n                      {\" \"}\n                      Save{\" \"}\n                    </button>\n                </div>\n              </div>\n              ) : null}\n            </div>\n          </div>\n        </>\n      );\n    } else if (this.path == \"one-hot\") {\n      return (\n        <>\n          <h1>{post.title}</h1>\n          <hr></hr>\n\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <form>\n                <div className=\"form-group row\">\n                  <label className=\"col-sm-2 col-form-label\">\n                    {\" \"}\n                    Number of Column:{\" \"}\n                  </label>\n                  <div className=\"col-sm-10\">\n                    <input\n                      className=\"form-control\"\n                      placeholder=\"1,2,3\"\n                      type=\"text\"\n                      name=\"numCol\"\n                      onChange={this.onChange.bind(this)}\n                    />\n                  </div>\n                </div>\n\n                <UploadCSV onSubmit={this.handleSubmit}></UploadCSV>\n              </form>\n            </div>\n            <div className=\"col-6\">\n              <div id=\"result-display\"></div>\n              {this.state.showResults ? (\n                <div id=\"download-csv\">\n                  <CSVLink\n                    data={this.state.outputCsv}\n                    filename=\"data.csv\"\n                    className=\"hidden\"\n                    target=\"_blank\"\n                  >\n                    Download me\n                  </CSVLink>\n                </div>\n              ) : null}\n            </div>\n          </div>\n        </>\n      );\n    } else if (this.path == \"delete-rc\" || this.path == \"replaceW\") {\n      return (\n        <>\n          <h1>{post.title}</h1>\n          <hr></hr>\n\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <form>\n                <div className=\"form-check\">\n                  <label class=\"form-check-label\">\n                    <input\n                      className=\"form-check-input\"\n                      type=\"radio\"\n                      value=\"row\"\n                      checked={this.state.selectedOption === \"row\"}\n                      onChange={this.handleOptionChange}\n                    />\n                    Row\n                  </label>\n                </div>\n                <div className=\"form-check\">\n                  <label>\n                    <input\n                      className=\"form-check-input\"\n                      type=\"radio\"\n                      value=\"col\"\n                      checked={this.state.selectedOption === \"col\"}\n                      onChange={this.handleOptionChange}\n                    />\n                    Col\n                  </label>\n                </div>\n                <div className=\"form-group row\">\n                  <label className=\"col-sm-2 col-form-label\">\n                    {\" \"}\n                    Number of Rows:{\" \"}\n                  </label>\n                  <div className=\"col-sm-10\">\n                    <input\n                      className=\"form-control\"\n                      placeholder=\"1,2,3\"\n                      type=\"text\"\n                      name=\"numRow\"\n                      pattern=\"[0-9],*\"\n                      onChange={this.onChange.bind(this)}\n                    />\n                  </div>\n                </div>\n                <div className=\"form-group row\">\n                  <label className=\"col-sm-2 col-form-label\">\n                    {\" \"}\n                    Number of Cols:{\" \"}\n                  </label>\n                  <div className=\"col-sm-10\">\n                    <input\n                      className=\"form-control\"\n                      placeholder=\"1,2,3\"\n                      type=\"text\"\n                      name=\"numCol\"\n                      pattern=\"[0-9],*\"\n                      onChange={this.onChange.bind(this)}\n                    />\n                  </div>\n                </div>\n                <UploadCSV onSubmit={this.handleSubmit}></UploadCSV>\n              </form>\n            </div>\n            <div className=\"col-6\">\n              <div id=\"result-display\"></div>\n              {this.state.showResults ? (\n                <div id=\"download-csv\">\n                  <CSVLink\n                    data={this.state.outputCsv}\n                    filename=\"data.csv\"\n                    className=\"hidden\"\n                    target=\"_blank\"\n                  >\n                    <div className=\"text-center\">\n                      <button className=\"btn btn-info\">Download me</button>\n                    </div>\n                  </CSVLink>\n                  <div className=\"text-right\">\n                    <button\n                      className=\"btn btn-secondary btn-sm\"\n                      onClick={this.handleUpload}\n                    >\n                      {\" \"}\n                      Save{\" \"}\n                    </button>\n                </div>\n                </div>\n              ) : null}\n            </div>\n          </div>\n        </>\n      );\n      // } else if (this.path == \"replaceW\") {\n      // List the params of each on of them\n    } else if (this.path == \"certain\") {\n      // List the params of each on of them\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}