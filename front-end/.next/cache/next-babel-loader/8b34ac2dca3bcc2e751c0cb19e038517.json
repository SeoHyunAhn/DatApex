{"ast":null,"code":"var _jsxFileName = \"/Users/seohyun/dataPex/front-end/pages/preproc.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport axios from \"axios\";\nimport { Button, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Input, Label } from \"reactstrap\";\nconst posts = [{\n  path: \"label\",\n  title: \"Label Encoding\"\n}, {\n  path: \"one-hot\",\n  title: \"One-Hot Encoding\"\n}, {\n  path: \"delete-rc\",\n  title: \"Delete Row/Column\"\n}, {\n  path: \"replaceW\",\n  title: \"Replace W\"\n}, {\n  path: \"certain\",\n  title: \"Select Certain\"\n}];\nimport Layout from \"../components/layout\";\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.csvLink = React.createRef();\n    this.state = {\n      outputCsv: \"\",\n      paramter: []\n    };\n  }\n\n  handleSubmit(event) {\n    event.preventDefault(); // console.log(\"handling submit\");\n    // console.log(this.fileInput.current.files);\n\n    var formData = new FormData(); // console.log(this.fileInput.current.files[0]);\n\n    formData.append(\"file\", this.fileInput.current.files[0]);\n    var div = document.getElementById(\"image-display\");\n    div.innerHTML = \"<Spinner animation='border' role='status'> <span className='sr-only'>Loading...</span></Spinner>\";\n    axios.post(\"http://localhost:8000/upload/csv/\", formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    }).then(data => {\n      this.setState({\n        data\n      }, () => {\n        // click the CSVLink component to trigger the CSV download\n        this.csvLink.current.link.click();\n      });\n      div.style = \"visibility: visible;\";\n    }).catch(err => {\n      console.log(err);\n      var div = document.getElementById(\"download-csv\");\n      div.innerText = \"Please provide a valid csv file\";\n    });\n  }\n\n  render() {\n    console.log(this.props.url.asPath.substring(8));\n    this.path = this.props.url.asPath.substring(8);\n\n    if (this.path == \"label\") {// List the params of each on of them\n    } else if (this.path == \"one-hot\") {// List the params of each on of them\n    } else if (this.path == \"delete-rc\") {// List the params of each on of them\n    } else if (this.path == \"replaceW\") {// List the params of each on of them\n    } else if (this.path == \"certain\") {// List the params of each on of them\n    }\n\n    return __jsx(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, __jsx(\"main\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, __jsx(\"h1\", {\n      className: \"text-white text-uppercase text-center my-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Todo app\"), __jsx(Form, {\n      enctype: \"multipart/form-data\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, __jsx(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      for: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"File: \"), __jsx(\"div\", {\n      class: \"col-md-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      type: \"file\",\n      name: \"csv_file\",\n      id: \"csv_file\",\n      required: \"True\",\n      class: \"form-control\",\n      ref: this.fileInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }))), __jsx(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }))), __jsx(\"div\", {\n      id: \"download-csv\",\n      style: \"visibility: hidden\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, __jsx(\"button\", {\n      onClick: this.fetchData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Download CSV\"), __jsx(CSVLink, {\n      data: this.state.data,\n      filename: \"data.csv\",\n      className: \"hidden\",\n      ref: this.csvLink,\n      target: \"_blank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/seohyun/dataPex/front-end/pages/preproc.js"],"names":["React","axios","Button","ModalHeader","ModalBody","ModalFooter","Form","FormGroup","Input","Label","posts","path","title","Layout","Component","constructor","props","handleSubmit","bind","csvLink","createRef","state","outputCsv","paramter","event","preventDefault","formData","FormData","append","fileInput","current","files","div","document","getElementById","innerHTML","post","headers","then","data","setState","link","click","style","catch","err","console","log","innerText","render","url","asPath","substring","fetchData"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Input,\n  Label\n} from \"reactstrap\";\n\nconst posts = [\n  { path: \"label\", title: \"Label Encoding\" },\n  { path: \"one-hot\", title: \"One-Hot Encoding\" },\n  { path: \"delete-rc\", title: \"Delete Row/Column\" },\n  { path: \"replaceW\", title: \"Replace W\" },\n  { path: \"certain\", title: \"Select Certain\" }\n];\nimport Layout from \"../components/layout\";\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.csvLink = React.createRef();\n    this.state = { outputCsv: \"\", paramter: [] };\n  }\n  handleSubmit(event) {\n    event.preventDefault();\n    // console.log(\"handling submit\");\n    // console.log(this.fileInput.current.files);\n    var formData = new FormData();\n    // console.log(this.fileInput.current.files[0]);\n    formData.append(\"file\", this.fileInput.current.files[0]);\n    var div = document.getElementById(\"image-display\");\n    div.innerHTML =\n      \"<Spinner animation='border' role='status'> <span className='sr-only'>Loading...</span></Spinner>\";\n    \n    axios\n      .post(\"http://localhost:8000/upload/csv/\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      })\n      .then(data => {\n        this.setState({ data }, () => {\n          // click the CSVLink component to trigger the CSV download\n          this.csvLink.current.link.click();\n        });\n        div.style = \"visibility: visible;\";\n      })\n      .catch(err => {\n        console.log(err);\n\n        var div = document.getElementById(\"download-csv\");\n        div.innerText = \"Please provide a valid csv file\";\n      });\n  }\n  render() {\n    console.log(this.props.url.asPath.substring(8));\n    this.path = this.props.url.asPath.substring(8);\n    if (this.path == \"label\") {\n      // List the params of each on of them\n    } else if (this.path == \"one-hot\") {\n      // List the params of each on of them\n    } else if (this.path == \"delete-rc\") {\n      // List the params of each on of them\n    } else if (this.path == \"replaceW\") {\n      // List the params of each on of them\n    } else if (this.path == \"certain\") {\n      // List the params of each on of them\n    }\n    return (\n      <Layout>\n        <main className=\"content\">\n          <h1 className=\"text-white text-uppercase text-center my-4\">\n            Todo app\n          </h1>\n          <Form enctype=\"multipart/form-data\" onSubmit={this.handleSubmit}>\n            <FormGroup>\n              <div class=\"form-group\">\n                <label for=\"name\">File: </label>\n                <div class=\"col-md-8\">\n                  <input\n                    type=\"file\"\n                    name=\"csv_file\"\n                    id=\"csv_file\"\n                    required=\"True\"\n                    class=\"form-control\"\n                    ref={this.fileInput}\n                  />\n                </div>\n              </div>\n              <input type=\"submit\" value=\"Submit\" />\n            </FormGroup>\n          </Form>\n          <div id=\"download-csv\" style=\"visibility: hidden\">\n            <button onClick={this.fetchData}>Download CSV</button>\n\n            <CSVLink\n              data={this.state.data}\n              filename=\"data.csv\"\n              className=\"hidden\"\n              ref={this.csvLink}\n              target=\"_blank\"\n            />\n          </div>\n        </main>\n      </Layout>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}