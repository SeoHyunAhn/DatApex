{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/seohyun/dataPex/front-end/pages/mlalgo.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport axios from \"axios\";\nimport Modal from \"../components/Modal\";\nimport { Button, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Input, Label } from \"reactstrap\";\nvar posts = [{\n  path: \"nba\",\n  title: \"Naive Bayes algorithm\"\n}, {\n  path: \"lra\",\n  title: \"Logistic Regression algorithm\"\n}, {\n  path: \"svm\",\n  title: \"Support Vector Machine algorithm\"\n}, {\n  path: \"bag\",\n  title: \"Bagging algorithm\"\n}, {\n  path: \"clus\",\n  title: \"Clustering algorithm\"\n}];\nimport Layout from \"../components/layout\";\n\nvar _default =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(_default, _React$Component);\n\n  function _default(props) {\n    var _this;\n\n    _classCallCheck(this, _default);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(_default).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"refreshList\", function () {\n      axios.get(\"http://localhost:8000/api/todos/\").then(function (res) {\n        return _this.setState({\n          todoList: res.data\n        });\n      })[\"catch\"](function (err) {\n        return console.log(err);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"displayCompleted\", function (status) {\n      if (status) {\n        return _this.setState({\n          viewCompleted: true\n        });\n      }\n\n      return _this.setState({\n        viewCompleted: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderTabList\", function () {\n      return __jsx(\"div\", {\n        className: \"my-5 tab-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        onClick: function onClick() {\n          return _this.displayCompleted(true);\n        },\n        className: _this.state.viewCompleted ? \"active\" : \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"complete\"), __jsx(\"span\", {\n        onClick: function onClick() {\n          return _this.displayCompleted(false);\n        },\n        className: _this.state.viewCompleted ? \"\" : \"active\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Incomplete\"));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderItems\", function () {\n      var viewCompleted = _this.state.viewCompleted;\n\n      var newItems = _this.state.todoList.filter(function (item) {\n        return item.completed === viewCompleted;\n      });\n\n      return newItems.map(function (item) {\n        return __jsx(\"li\", {\n          key: item.id,\n          className: \"list-group-item d-flex justify-content-between align-items-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, __jsx(\"span\", {\n          className: \"todo-title mr-2 \".concat(_this.state.viewCompleted ? \"completed-todo\" : \"\"),\n          title: item.description,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, item.title), __jsx(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, __jsx(\"button\", {\n          onClick: function onClick() {\n            return _this.editItem(item);\n          },\n          className: \"btn btn-secondary mr-2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, \" \", \"Edit\", \" \"), __jsx(\"button\", {\n          onClick: function onClick() {\n            return _this.handleDelete(item);\n          },\n          className: \"btn btn-danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, \"Delete\", \" \")));\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"toggle\", function () {\n      _this.setState({\n        modal: !_this.state.modal\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", function (item) {\n      _this.toggle();\n\n      if (item.id) {\n        axios.put(\"http://localhost:8000/api/todos/\".concat(item.id, \"/\"), item).then(function (res) {\n          return _this.refreshList();\n        });\n        return;\n      }\n\n      axios.post(\"http://localhost:8000/api/todos/\", item).then(function (res) {\n        return _this.refreshList();\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDelete\", function (item) {\n      axios[\"delete\"](\"http://localhost:8000/api/todos/\".concat(item.id)).then(function (res) {\n        return _this.refreshList();\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"createItem\", function () {\n      var item = {\n        title: \"\",\n        description: \"\",\n        completed: false\n      };\n\n      _this.setState({\n        activeItem: item,\n        modal: !_this.state.modal\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"editItem\", function (item) {\n      _this.setState({\n        activeItem: item,\n        modal: !_this.state.modal\n      });\n    });\n\n    _this.state = {\n      viewCompleted: false,\n      activeItem: {\n        title: \"\",\n        description: \"\",\n        completed: false\n      },\n      todoList: []\n    };\n    return _this;\n  }\n\n  _createClass(_default, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.refreshList();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, __jsx(\"main\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, __jsx(\"h1\", {\n        className: \"text-white text-uppercase text-center my-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"Todo app\"), __jsx(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, function (_ref) {\n        var validateForm = _ref.validateForm,\n            getPayload = _ref.getPayload;\n        return __jsx(\"form\", {\n          className: \"board-form\",\n          onSubmit: function onSubmit(e) {\n            e.preventDefault();\n            validateForm() && _this2.submitForm(getPayload());\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }, __jsx(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }, \"Contact\"), __jsx(\"div\", {\n          className: \"f fw grid-row--s\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: \"mb1 pb05\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        }, __jsx(Input, {\n          name: \"name\",\n          label: \"Name\",\n          required: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        })), __jsx(\"div\", {\n          className: \"mb1 pb05\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        }, __jsx(Input, {\n          name: \"email\",\n          label: \"Email\",\n          required: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        }))), __jsx(ProgressButton, {\n          className: \"button green\",\n          formNoValidate: true,\n          inProgress: _this2.state.submitting,\n          inProgressText: \"Submitting\",\n          isDone: _this2.state.submitted,\n          isDoneText: \"Submitted\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157\n          },\n          __self: this\n        }, \"Submit Form\"));\n      })));\n    }\n  }]);\n\n  return _default;\n}(React.Component);\n\nexport { _default as default };","map":{"version":3,"sources":["/Users/seohyun/dataPex/front-end/pages/mlalgo.js"],"names":["React","axios","Modal","Button","ModalHeader","ModalBody","ModalFooter","Form","FormGroup","Input","Label","posts","path","title","Layout","props","get","then","res","setState","todoList","data","err","console","log","status","viewCompleted","displayCompleted","state","newItems","filter","item","completed","map","id","description","editItem","handleDelete","modal","toggle","put","refreshList","post","activeItem","validateForm","getPayload","e","preventDefault","submitForm","submitting","submitted","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport Modal from \"../components/Modal\";\nimport {\n  Button,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Input,\n  Label\n} from \"reactstrap\";\n\nconst posts = [\n  { path: \"nba\", title: \"Naive Bayes algorithm\" },\n  { path: \"lra\", title: \"Logistic Regression algorithm\" },\n  { path: \"svm\", title: \"Support Vector Machine algorithm\" },\n  { path: \"bag\", title: \"Bagging algorithm\" },\n  { path: \"clus\", title: \"Clustering algorithm\" }\n];\nimport Layout from \"../components/layout\";\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      viewCompleted: false,\n      activeItem: {\n        title: \"\",\n        description: \"\",\n        completed: false\n      },\n      todoList: []\n    };\n  }\n  componentDidMount() {\n    this.refreshList();\n  }\n  refreshList = () => {\n    axios\n      .get(\"http://localhost:8000/api/todos/\")\n      .then(res => this.setState({ todoList: res.data }))\n      .catch(err => console.log(err));\n  };\n  displayCompleted = status => {\n    if (status) {\n      return this.setState({ viewCompleted: true });\n    }\n    return this.setState({ viewCompleted: false });\n  };\n  renderTabList = () => {\n    return (\n      <div className=\"my-5 tab-list\">\n        <span\n          onClick={() => this.displayCompleted(true)}\n          className={this.state.viewCompleted ? \"active\" : \"\"}\n        >\n          complete\n        </span>\n        <span\n          onClick={() => this.displayCompleted(false)}\n          className={this.state.viewCompleted ? \"\" : \"active\"}\n        >\n          Incomplete\n        </span>\n      </div>\n    );\n  };\n  renderItems = () => {\n    const { viewCompleted } = this.state;\n    const newItems = this.state.todoList.filter(\n      item => item.completed === viewCompleted\n    );\n    return newItems.map(item => (\n      <li\n        key={item.id}\n        className=\"list-group-item d-flex justify-content-between align-items-center\"\n      >\n        <span\n          className={`todo-title mr-2 ${\n            this.state.viewCompleted ? \"completed-todo\" : \"\"\n          }`}\n          title={item.description}\n        >\n          {item.title}\n        </span>\n        <span>\n          <button\n            onClick={() => this.editItem(item)}\n            className=\"btn btn-secondary mr-2\"\n          >\n            {\" \"}\n            Edit{\" \"}\n          </button>\n          <button\n            onClick={() => this.handleDelete(item)}\n            className=\"btn btn-danger\"\n          >\n            Delete{\" \"}\n          </button>\n        </span>\n      </li>\n    ));\n  };\n  toggle = () => {\n    this.setState({ modal: !this.state.modal });\n  };\n  handleSubmit = item => {\n    this.toggle();\n    if (item.id) {\n      axios\n        .put(`http://localhost:8000/api/todos/${item.id}/`, item)\n        .then(res => this.refreshList());\n      return;\n    }\n    axios\n      .post(\"http://localhost:8000/api/todos/\", item)\n      .then(res => this.refreshList());\n  };\n  handleDelete = item => {\n    axios\n      .delete(`http://localhost:8000/api/todos/${item.id}`)\n      .then(res => this.refreshList());\n  };\n  createItem = () => {\n    const item = { title: \"\", description: \"\", completed: false };\n    this.setState({ activeItem: item, modal: !this.state.modal });\n  };\n  editItem = item => {\n    this.setState({ activeItem: item, modal: !this.state.modal });\n  };\n  render() {\n    return (\n      <Layout>\n        <main className=\"content\">\n          <h1 className=\"text-white text-uppercase text-center my-4\">\n            Todo app\n          </h1>\n          <Form>\n              {({ validateForm, getPayload }) => {\n                return (\n                  <form className=\"board-form\" onSubmit={e => {\n                    e.preventDefault()\n                    validateForm() && this.submitForm(getPayload())\n                  }}>\n                    <h2>Contact</h2>\n                    <div className=\"f fw grid-row--s\">\n                      <div className=\"mb1 pb05\">\n                        <Input name=\"name\" label=\"Name\" required />\n                      </div>\n                      <div className=\"mb1 pb05\">\n                        <Input name=\"email\" label=\"Email\" required />\n                      </div>\n                    </div>\n\n                    <ProgressButton\n                      className=\"button green\"\n                      formNoValidate={true}\n                      inProgress={this.state.submitting}\n                      inProgressText='Submitting'\n                      isDone={this.state.submitted}\n                      isDoneText='Submitted'>\n                      Submit Form\n                    </ProgressButton>\n\n                  </form>\n                )\n              }}\n            </Form>\n        </main>\n      </Layout>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}