{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/seohyun/temp2/front-end/components/Modal.js\";\nvar __jsx = React.createElement;\n// frontend/src/components/Modal.js\nimport React, { Component } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Input, Label } from \"reactstrap\";\nexport default class CustomModal extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleChange\", e => {\n      let {\n        name,\n        value\n      } = e.target;\n\n      if (e.target.type === \"checkbox\") {\n        value = e.target.checked;\n      }\n\n      const activeItem = _objectSpread({}, this.state.activeItem, {\n        [name]: value\n      });\n\n      this.setState({\n        activeItem\n      });\n    });\n\n    this.state = {\n      activeItem: this.props.activeItem\n    };\n  }\n\n  render() {\n    const {\n      toggle,\n      onSave\n    } = this.props;\n    return __jsx(Modal, {\n      isOpen: true,\n      toggle: toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, __jsx(ModalHeader, {\n      toggle: toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \" Todo Item \"), __jsx(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, __jsx(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, __jsx(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, __jsx(Label, {\n      for: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Title\"), __jsx(Input, {\n      type: \"text\",\n      name: \"title\",\n      value: this.state.activeItem.title,\n      onChange: this.handleChange,\n      placeholder: \"Enter Todo Title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    })), __jsx(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, __jsx(Label, {\n      for: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Description\"), __jsx(Input, {\n      type: \"text\",\n      name: \"description\",\n      value: this.state.activeItem.description,\n      onChange: this.handleChange,\n      placeholder: \"Enter Todo description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    })), __jsx(FormGroup, {\n      check: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, __jsx(Label, {\n      for: \"completed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, __jsx(Input, {\n      type: \"checkbox\",\n      name: \"completed\",\n      checked: this.state.activeItem.completed,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), \"Completed\")))), __jsx(ModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, __jsx(Button, {\n      color: \"success\",\n      onClick: () => onSave(this.state.activeItem),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Save\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/seohyun/temp2/front-end/components/Modal.js"],"names":["React","Component","Button","Modal","ModalHeader","ModalBody","ModalFooter","Form","FormGroup","Input","Label","CustomModal","constructor","props","e","name","value","target","type","checked","activeItem","state","setState","render","toggle","onSave","title","handleChange","description","completed"],"mappings":"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","sourcesContent":["// frontend/src/components/Modal.js\n\nimport React, { Component } from \"react\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Input,\n  Label\n} from \"reactstrap\";\n\nexport default class CustomModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeItem: this.props.activeItem\n    };\n  }\n\n  handleChange = e => {\n    let { name, value } = e.target;\n    if (e.target.type === \"checkbox\") {\n      value = e.target.checked;\n    }\n    const activeItem = { ...this.state.activeItem, [name]: value };\n    this.setState({ activeItem });\n  };\n\n  render() {\n    const { toggle, onSave } = this.props;\n    return (\n      <Modal isOpen={true} toggle={toggle}>\n        <ModalHeader toggle={toggle}> Todo Item </ModalHeader>\n        <ModalBody>\n          <Form>\n            <FormGroup>\n              <Label for=\"title\">Title</Label>\n              <Input\n                type=\"text\"\n                name=\"title\"\n                value={this.state.activeItem.title}\n                onChange={this.handleChange}\n                placeholder=\"Enter Todo Title\"\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"description\">Description</Label>\n              <Input\n                type=\"text\"\n                name=\"description\"\n                value={this.state.activeItem.description}\n                onChange={this.handleChange}\n                placeholder=\"Enter Todo description\"\n              />\n            </FormGroup>\n            <FormGroup check>\n              <Label for=\"completed\">\n                <Input\n                  type=\"checkbox\"\n                  name=\"completed\"\n                  checked={this.state.activeItem.completed}\n                  onChange={this.handleChange}\n                />\n                Completed\n              </Label>\n            </FormGroup>\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"success\" onClick={() => onSave(this.state.activeItem)}>\n            Save\n          </Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}