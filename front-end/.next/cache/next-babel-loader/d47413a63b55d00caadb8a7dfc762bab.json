{"ast":null,"code":"var _jsxFileName = \"/Users/seohyun/dataPex/front-end/pages/mlalgo.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport axios from \"axios\";\nimport { Button, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Input, Label } from \"reactstrap\";\nconst posts = [{\n  path: \"nba\",\n  title: \"Naive Bayes algorithm\"\n}, {\n  path: \"lra\",\n  title: \"Logistic Regression algorithm\"\n}, {\n  path: \"svm\",\n  title: \"Support Vector Machine algorithm\"\n}, {\n  path: \"bag\",\n  title: \"Bagging algorithm\"\n}, {\n  path: \"clus\",\n  title: \"Clustering algorithm\"\n}];\nimport Layout from \"../components/layout\";\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.fileInput = React.createRef();\n    this.state = {\n      imgSrc: \"\"\n    };\n    this.path = \"\";\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    console.log(\"handling submit\"); // console.log(this.fileInput.current.files);\n\n    var formData = new FormData(); // console.log(this.fileInput.current.files[0]);\n\n    formData.append(\"file\", this.fileInput.current.files[0]);\n    var div = document.getElementById(\"image-display\");\n    div.innerHTML = \"<Spinner animation='border' role='status'> <span className='sr-only'>Loading...</span></Spinner>\";\n    axios.post(\"http://localhost:8000/upload/csv/\", formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    }).then(e => {\n      console.log(e);\n      var div = document.getElementById(\"image-display\");\n      div.innerText = \"\";\n      var imageOupput = \"data:image/png;base64,\" + e.data;\n      this.setState({\n        imgSrc: imageOupput\n      });\n    }).catch(err => {\n      console.log(err);\n      var div = document.getElementById(\"image-display\");\n      div.innerText = \"Please provide a valid csv file\";\n    });\n  }\n\n  render() {\n    console.log(this.props.url.asPath.substring(8));\n    this.path = this.props.url.asPath.substring(8);\n\n    if (this.path == \"nba\") {// List the params of each on of them\n    } else if (this.path == \"lra\") {// List the params of each on of them\n    } else if (this.path == \"svm\") {// List the params of each on of them\n    } else if (this.path == \"bag\") {// List the params of each on of them\n    } else if (this.path == \"clus\") {// List the params of each on of them\n    }\n\n    return __jsx(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, __jsx(\"main\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, __jsx(Form, {\n      enctype: \"multipart/form-data\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, __jsx(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      for: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"File: \"), __jsx(\"div\", {\n      class: \"col-md-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      type: \"file\",\n      name: \"csv_file\",\n      id: \"csv_file\",\n      required: \"True\",\n      class: \"form-control\",\n      ref: this.fileInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }))), __jsx(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }))), __jsx(\"div\", {\n      id: \"image-display\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), __jsx(\"img\", {\n      id: \"image-output\",\n      src: this.state.imgSrc,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/seohyun/dataPex/front-end/pages/mlalgo.js"],"names":["React","axios","Button","ModalHeader","ModalBody","ModalFooter","Form","FormGroup","Input","Label","posts","path","title","Layout","Component","constructor","props","handleSubmit","bind","fileInput","createRef","state","imgSrc","event","preventDefault","console","log","formData","FormData","append","current","files","div","document","getElementById","innerHTML","post","headers","then","e","innerText","imageOupput","data","setState","catch","err","render","url","asPath","substring"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Input,\n  Label\n} from \"reactstrap\";\n\nconst posts = [\n  { path: \"nba\", title: \"Naive Bayes algorithm\" },\n  { path: \"lra\", title: \"Logistic Regression algorithm\" },\n  { path: \"svm\", title: \"Support Vector Machine algorithm\" },\n  { path: \"bag\", title: \"Bagging algorithm\" },\n  { path: \"clus\", title: \"Clustering algorithm\" }\n];\nimport Layout from \"../components/layout\";\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.fileInput = React.createRef();\n    this.state = { imgSrc: \"\" };\n    this.path = \"\";\n  }\n  handleSubmit(event) {\n    event.preventDefault();\n    console.log(\"handling submit\");\n    // console.log(this.fileInput.current.files);\n    var formData = new FormData();\n    // console.log(this.fileInput.current.files[0]);\n    formData.append(\"file\", this.fileInput.current.files[0]);\n    var div = document.getElementById(\"image-display\");\n    div.innerHTML =\n      \"<Spinner animation='border' role='status'> <span className='sr-only'>Loading...</span></Spinner>\";\n\n    axios\n      .post(\"http://localhost:8000/upload/csv/\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      })\n      .then(e => {\n        console.log(e);\n\n        var div = document.getElementById(\"image-display\");\n        div.innerText = \"\";\n        var imageOupput = \"data:image/png;base64,\" + e.data;\n        this.setState({ imgSrc: imageOupput });\n      })\n      .catch(err => {\n        console.log(err);\n\n        var div = document.getElementById(\"image-display\");\n        div.innerText = \"Please provide a valid csv file\";\n      });\n  }\n  render() {\n    console.log(this.props.url.asPath.substring(8));\n    this.path = this.props.url.asPath.substring(8);\n    if (this.path == \"nba\") {\n      // List the params of each on of them\n    } else if (this.path == \"lra\") {\n      // List the params of each on of them\n    } else if (this.path == \"svm\") {\n      // List the params of each on of them\n    } else if (this.path == \"bag\") {\n      // List the params of each on of them\n    } else if (this.path == \"clus\") {\n      // List the params of each on of them\n    }\n    return (\n      <Layout>\n        <main className=\"content\">\n          <Form enctype=\"multipart/form-data\" onSubmit={this.handleSubmit}>\n            <FormGroup>\n              <div class=\"form-group\">\n                <label for=\"name\">File: </label>\n                <div class=\"col-md-8\">\n                  <input\n                    type=\"file\"\n                    name=\"csv_file\"\n                    id=\"csv_file\"\n                    required=\"True\"\n                    class=\"form-control\"\n                    ref={this.fileInput}\n                  />\n                </div>\n              </div>\n              <input type=\"submit\" value=\"Submit\" />\n            </FormGroup>\n          </Form>\n          <div id=\"image-display\"></div>\n          <img id=\"image-output\" src={this.state.imgSrc}></img>\n        </main>\n      </Layout>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}