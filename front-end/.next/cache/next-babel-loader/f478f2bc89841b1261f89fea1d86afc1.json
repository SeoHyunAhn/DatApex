{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/seohyun/dataPex/front-end/pages/preproc.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport axios from \"axios\";\nimport { Button, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Input, Label } from \"reactstrap\";\nimport { CSVLink, CSVDownload } from \"react-csv\";\nvar posts = [{\n  path: \"label\",\n  title: \"Label Encoding\"\n}, {\n  path: \"one-hot\",\n  title: \"One-Hot Encoding\"\n}, {\n  path: \"delete-rc\",\n  title: \"Delete Row/Column\"\n}, {\n  path: \"replaceW\",\n  title: \"Replace W\"\n}, {\n  path: \"certain\",\n  title: \"Select Certain\"\n}];\nimport Layout from \"../components/layout\";\n\nvar _default =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(_default, _React$Component);\n\n  function _default(props) {\n    var _this;\n\n    _classCallCheck(this, _default);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(_default).call(this, props));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    _this.csvLink = React.createRef();\n    _this.state = {\n      outputCsv: \"\",\n      paramter: []\n    };\n    _this.path = \"\";\n    return _this;\n  }\n\n  _createClass(_default, [{\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      var _this2 = this;\n\n      event.preventDefault(); // console.log(\"handling submit\");\n      // console.log(this.fileInput.current.files);\n\n      var formData = new FormData(); // console.log(this.fileInput.current.files[0]);\n\n      formData.append(\"file\", this.fileInput.current.files[0]);\n      var div = document.getElementById(\"image-display\");\n      div.innerHTML = \"<Spinner animation='border' role='status'> <span className='sr-only'>Loading...</span></Spinner>\";\n      axios.post(\"http://localhost:8000/upload/csv/\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }).then(function (data) {\n        _this2.setState({\n          data: data\n        }, function () {\n          // click the CSVLink component to trigger the CSV download\n          _this2.csvLink.current.link.click();\n        });\n\n        div.style = \"visibility: visible;\";\n      })[\"catch\"](function (err) {\n        console.log(err);\n        var div = document.getElementById(\"download-csv\");\n        div.innerText = \"Please provide a valid csv file\";\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.props.url.asPath.substring(9));\n      this.path = this.props.url.asPath.substring(9);\n\n      if (this.path == \"label\") {// List the params of each on of them\n      } else if (this.path == \"one-hot\") {// List the params of each on of them\n      } else if (this.path == \"delete-rc\") {// List the params of each on of them\n      } else if (this.path == \"replaceW\") {// List the params of each on of them\n      } else if (this.path == \"certain\") {// List the params of each on of them\n      }\n\n      return __jsx(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, __jsx(\"main\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, __jsx(\"h1\", {\n        className: \"text-white text-uppercase text-center my-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Todo app\"), __jsx(Form, {\n        enctype: \"multipart/form-data\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, __jsx(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        \"class\": \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        \"for\": \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"File: \"), __jsx(\"div\", {\n        \"class\": \"col-md-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, __jsx(\"input\", {\n        type: \"file\",\n        name: \"csv_file\",\n        id: \"csv_file\",\n        required: \"True\",\n        \"class\": \"form-control\",\n        ref: this.fileInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }))), __jsx(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }))), __jsx(\"div\", {\n        id: \"download-csv\",\n        style: \"visibility: hidden\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, __jsx(\"button\", {\n        onClick: this.fetchData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Download CSV\"), __jsx(CSVLink, {\n        data: this.state.data,\n        filename: \"data.csv\",\n        className: \"hidden\",\n        ref: this.csvLink,\n        target: \"_blank\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return _default;\n}(React.Component);\n\nexport { _default as default };","map":{"version":3,"sources":["/Users/seohyun/dataPex/front-end/pages/preproc.js"],"names":["React","axios","Button","ModalHeader","ModalBody","ModalFooter","Form","FormGroup","Input","Label","CSVLink","CSVDownload","posts","path","title","Layout","props","handleSubmit","bind","csvLink","createRef","state","outputCsv","paramter","event","preventDefault","formData","FormData","append","fileInput","current","files","div","document","getElementById","innerHTML","post","headers","then","data","setState","link","click","style","err","console","log","innerText","url","asPath","substring","fetchData","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Input,\n  Label\n} from \"reactstrap\";\nimport { CSVLink, CSVDownload } from \"react-csv\";\n\nconst posts = [\n  { path: \"label\", title: \"Label Encoding\" },\n  { path: \"one-hot\", title: \"One-Hot Encoding\" },\n  { path: \"delete-rc\", title: \"Delete Row/Column\" },\n  { path: \"replaceW\", title: \"Replace W\" },\n  { path: \"certain\", title: \"Select Certain\" }\n];\nimport Layout from \"../components/layout\";\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.csvLink = React.createRef();\n    this.state = { outputCsv: \"\", paramter: [] };\n    this.path = \"\";\n  }\n  handleSubmit(event) {\n    event.preventDefault();\n    // console.log(\"handling submit\");\n    // console.log(this.fileInput.current.files);\n    var formData = new FormData();\n    // console.log(this.fileInput.current.files[0]);\n    formData.append(\"file\", this.fileInput.current.files[0]);\n    var div = document.getElementById(\"image-display\");\n    div.innerHTML =\n      \"<Spinner animation='border' role='status'> <span className='sr-only'>Loading...</span></Spinner>\";\n    \n    axios\n      .post(\"http://localhost:8000/upload/csv/\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      })\n      .then(data => {\n        this.setState({ data }, () => {\n          // click the CSVLink component to trigger the CSV download\n          this.csvLink.current.link.click();\n        });\n        div.style = \"visibility: visible;\";\n      })\n      .catch(err => {\n        console.log(err);\n\n        var div = document.getElementById(\"download-csv\");\n        div.innerText = \"Please provide a valid csv file\";\n      });\n  }\n  render() {\n    console.log(this.props.url.asPath.substring(9));\n    this.path = this.props.url.asPath.substring(9);\n    if (this.path == \"label\") {\n      // List the params of each on of them\n    } else if (this.path == \"one-hot\") {\n      // List the params of each on of them\n    } else if (this.path == \"delete-rc\") {\n      // List the params of each on of them\n    } else if (this.path == \"replaceW\") {\n      // List the params of each on of them\n    } else if (this.path == \"certain\") {\n      // List the params of each on of them\n    }\n    return (\n      <Layout>\n        <main className=\"content\">\n          <h1 className=\"text-white text-uppercase text-center my-4\">\n            Todo app\n          </h1>\n          <Form enctype=\"multipart/form-data\" onSubmit={this.handleSubmit}>\n            <FormGroup>\n              <div class=\"form-group\">\n                <label for=\"name\">File: </label>\n                <div class=\"col-md-8\">\n                  <input\n                    type=\"file\"\n                    name=\"csv_file\"\n                    id=\"csv_file\"\n                    required=\"True\"\n                    class=\"form-control\"\n                    ref={this.fileInput}\n                  />\n                </div>\n              </div>\n              <input type=\"submit\" value=\"Submit\" />\n            </FormGroup>\n          </Form>\n          <div id=\"download-csv\" style=\"visibility: hidden\">\n            <button onClick={this.fetchData}>Download CSV</button>\n\n            <CSVLink\n              data={this.state.data}\n              filename=\"data.csv\"\n              className=\"hidden\"\n              ref={this.csvLink}\n              target=\"_blank\"\n            />\n          </div>\n        </main>\n      </Layout>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}