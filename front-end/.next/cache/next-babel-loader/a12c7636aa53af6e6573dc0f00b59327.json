{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/seohyun/dataPex/front-end/pages/preproc.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport axios from \"axios\";\nimport firebase from \"../common/firebase\";\nimport { Button, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Input, Label } from \"reactstrap\";\nimport { CSVLink, CSVDownload } from \"react-csv\";\nimport UploadCSV from \"../components/Modal\"; // import { Components } from \"@reactioncommerce/reaction-components\";\n\nvar posts = [{\n  path: \"label\",\n  title: \"Label Encoding\"\n}, {\n  path: \"one-hot\",\n  title: \"One-Hot Encoding\"\n}, {\n  path: \"delete-rc\",\n  title: \"Delete Row/Column\"\n}, {\n  path: \"replaceW\",\n  title: \"Replace W\"\n}, {\n  path: \"certain\",\n  title: \"Select Certain\"\n}];\nimport Layout from \"../components/layout\";\n\nvar _default =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(_default, _React$Component);\n\n  _createClass(_default, null, [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(_ref) {\n        var query, res, post;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                query = _ref.query, res = _ref.res;\n                post = posts.find(function (post) {\n                  return post.path == query.path;\n                });\n                console.log(post);\n                return _context.abrupt(\"return\", {\n                  post: post\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  function _default(props) {\n    var _this;\n\n    _classCallCheck(this, _default);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(_default).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleUpload\", function () {\n      var message = _this.state.outputCsv; // console.log(this.state.imgSrc);\n      // console.log(message);\n\n      var storage = firebase.storage().ref();\n      var user = firebase.auth().currentUser.uid;\n      var tempDate = new Date();\n      var date = tempDate.getFullYear() + \" \" + (tempDate.getMonth() + 1) + \" \" + tempDate.getDate() + \" \" + tempDate.getHours() + \":\" + tempDate.getMinutes() + \":\" + tempDate.getSeconds();\n      var fileName = user + \"/\" + date + \"_Preporcess_data.csv\";\n      var uploadTastk = storage.child(fileName).putString(message);\n      uploadTastk.then(function (response) {\n        console.log(\"file upload success\");\n      }, function (failedReason) {\n        console.log(\"file upload failed\");\n      });\n    });\n\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    _this.handleOptionChange = _this.handleOptionChange.bind(_assertThisInitialized(_this)); // this.csvLink = React.createRef();\n\n    _this.state = {\n      outputCsv: \"\",\n      selectedOption: \"\",\n      paramNum: \"\",\n      showResults: false\n    };\n    _this.path = \"\";\n    return _this;\n  }\n\n  _createClass(_default, [{\n    key: \"handleSubmit\",\n    value: function handleSubmit(filename) {\n      var _this2 = this;\n\n      event.preventDefault();\n      var formData = new FormData(); // console.log(this.fileInput.current.files[0]);\n\n      formData.append(\"file\", filename);\n      var div = document.getElementById(\"result-display\");\n      div.innerHTML = \"<Spinner animation='border' role='status'> <span className='sr-only'>Loading...</span></Spinner>\";\n      var link = \"\";\n      console.log(this.state.selectedOption);\n\n      if (this.path == \"label\") {\n        //  selected params of each on of them\n        link = \"preProc/LabelEncoding/\";\n      } else if (this.path == \"one-hot\") {\n        link = \"preProc/OneHotEncoding/\" + this.state.paramNum;\n      } else if (this.path == \"delete-rc\") {\n        // console.log(this.state.selectedOption)\n        if (this.state.selectedOption == \"row\") {\n          link = \"preProc/delRow/\" + this.state.paramNum;\n        } else if (this.state.selectedOption == \"col\") {\n          link = \"preProc/delCol/\" + this.state.paramNum;\n        }\n      } else if (this.path == \"replaceW\") {\n        link = \"preProc/ReplaceW\" + this.state.paramNum;\n      } else if (this.path == \"certain\") {// selected params of each on of them\n      }\n\n      axios.post(\"http://localhost:8000/\" + link, formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }).then(function (e) {\n        console.log(e);\n        console.log(e.data);\n\n        _this2.setState({\n          outputCsv: e.data,\n          showResults: true\n        });\n\n        div.innerHTML = \"\";\n      })[\"catch\"](function (err) {\n        console.log(err);\n        var div = document.getElementById(\"result-display\");\n        div.innerText = \"Please check your input and parameters\";\n      });\n    }\n  }, {\n    key: \"handleOptionChange\",\n    value: function handleOptionChange(changeEvent) {\n      console.log(changeEvent.target);\n      this.setState({\n        selectedOption: changeEvent.target.value\n      });\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(event) {\n      console.log(event.target);\n      this.setState({\n        paramNum: event.target.value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var post = this.props.post;\n      this.path = post.path;\n      console.log(this.path);\n\n      if (this.path == \"label\") {\n        return __jsx(React.Fragment, null, __jsx(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154\n          },\n          __self: this\n        }, post.title), __jsx(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        }), __jsx(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: \"col-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          },\n          __self: this\n        }, __jsx(\"form\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        }, __jsx(UploadCSV, {\n          onSubmit: this.handleSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        }))), __jsx(\"div\", {\n          className: \"col-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          id: \"result-display\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164\n          },\n          __self: this\n        }), this.state.showResults ? __jsx(\"div\", {\n          id: \"download-csv\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166\n          },\n          __self: this\n        }, __jsx(CSVLink, {\n          data: this.state.outputCsv,\n          filename: \"data.csv\",\n          className: \"hidden\",\n          target: \"_blank\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          },\n          __self: this\n        }, \"Download me\"), __jsx(\"div\", {\n          className: \"text-right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          },\n          __self: this\n        }, __jsx(\"button\", {\n          className: \"btn btn-secondary btn-sm\",\n          onClick: this.handleUpload,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          },\n          __self: this\n        }, \" \", \"Save\", \" \"))) : null)));\n      } else if (this.path == \"one-hot\") {\n        return __jsx(React.Fragment, null, __jsx(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193\n          },\n          __self: this\n        }, post.title), __jsx(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194\n          },\n          __self: this\n        }), __jsx(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: \"col-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197\n          },\n          __self: this\n        }, __jsx(\"form\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: \"form-group row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199\n          },\n          __self: this\n        }, __jsx(\"label\", {\n          className: \"col-sm-2 col-form-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200\n          },\n          __self: this\n        }, \" \", \"Number of Column:\", \" \"), __jsx(\"div\", {\n          className: \"col-sm-10\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204\n          },\n          __self: this\n        }, __jsx(\"input\", {\n          className: \"form-control\",\n          placeholder: \"1,2,3\",\n          type: \"text\",\n          name: \"numCol\",\n          onChange: this.onChange.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205\n          },\n          __self: this\n        }))), __jsx(UploadCSV, {\n          onSubmit: this.handleSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215\n          },\n          __self: this\n        }))), __jsx(\"div\", {\n          className: \"col-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          id: \"result-display\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219\n          },\n          __self: this\n        }), this.state.showResults ? __jsx(\"div\", {\n          id: \"download-csv\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221\n          },\n          __self: this\n        }, __jsx(CSVLink, {\n          data: this.state.outputCsv,\n          filename: \"data.csv\",\n          className: \"hidden\",\n          target: \"_blank\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222\n          },\n          __self: this\n        }, \"Download me\")) : null)));\n      } else if (this.path == \"delete-rc\" || this.path == \"replaceW\") {\n        return __jsx(React.Fragment, null, __jsx(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 239\n          },\n          __self: this\n        }, post.title), __jsx(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240\n          },\n          __self: this\n        }), __jsx(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 242\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: \"col-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 243\n          },\n          __self: this\n        }, __jsx(\"form\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 244\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: \"form-check\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 245\n          },\n          __self: this\n        }, __jsx(\"label\", {\n          \"class\": \"form-check-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246\n          },\n          __self: this\n        }, __jsx(\"input\", {\n          className: \"form-check-input\",\n          type: \"radio\",\n          value: \"row\",\n          checked: this.state.selectedOption === \"row\",\n          onChange: this.handleOptionChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247\n          },\n          __self: this\n        }), \"Row\")), __jsx(\"div\", {\n          className: \"form-check\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 257\n          },\n          __self: this\n        }, __jsx(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258\n          },\n          __self: this\n        }, __jsx(\"input\", {\n          className: \"form-check-input\",\n          type: \"radio\",\n          value: \"col\",\n          checked: this.state.selectedOption === \"col\",\n          onChange: this.handleOptionChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 259\n          },\n          __self: this\n        }), \"Col\")), __jsx(\"div\", {\n          className: \"form-group row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 269\n          },\n          __self: this\n        }, __jsx(\"label\", {\n          className: \"col-sm-2 col-form-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 270\n          },\n          __self: this\n        }, \" \", \"Number of Rows:\", \" \"), __jsx(\"div\", {\n          className: \"col-sm-10\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 274\n          },\n          __self: this\n        }, __jsx(\"input\", {\n          className: \"form-control\",\n          placeholder: \"1,2,3\",\n          type: \"text\",\n          name: \"numRow\",\n          pattern: \"[0-9],*\",\n          onChange: this.onChange.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 275\n          },\n          __self: this\n        }))), __jsx(\"div\", {\n          className: \"form-group row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 285\n          },\n          __self: this\n        }, __jsx(\"label\", {\n          className: \"col-sm-2 col-form-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 286\n          },\n          __self: this\n        }, \" \", \"Number of Cols:\", \" \"), __jsx(\"div\", {\n          className: \"col-sm-10\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 290\n          },\n          __self: this\n        }, __jsx(\"input\", {\n          className: \"form-control\",\n          placeholder: \"1,2,3\",\n          type: \"text\",\n          name: \"numCol\",\n          pattern: \"[0-9],*\",\n          onChange: this.onChange.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 291\n          },\n          __self: this\n        }))), __jsx(UploadCSV, {\n          onSubmit: this.handleSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 301\n          },\n          __self: this\n        }))), __jsx(\"div\", {\n          className: \"col-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 304\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          id: \"result-display\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 305\n          },\n          __self: this\n        }), this.state.showResults ? __jsx(\"div\", {\n          id: \"download-csv\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 307\n          },\n          __self: this\n        }, __jsx(CSVLink, {\n          data: this.state.outputCsv,\n          filename: \"data.csv\",\n          className: \"hidden\",\n          target: \"_blank\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 308\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: \"text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 314\n          },\n          __self: this\n        }, __jsx(\"button\", {\n          className: \"btn btn-info\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 315\n          },\n          __self: this\n        }, \"Download me\"))), __jsx(\"div\", {\n          className: \"text-right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 318\n          },\n          __self: this\n        }, __jsx(\"button\", {\n          className: \"btn btn-secondary btn-sm\",\n          onClick: this.handleUpload,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 319\n          },\n          __self: this\n        }, \" \", \"Save\", \" \"))) : null))); // } else if (this.path == \"replaceW\") {\n        // List the params of each on of them\n      } else if (this.path == \"certain\") {// List the params of each on of them\n      }\n    }\n  }]);\n\n  return _default;\n}(React.Component);\n\nexport { _default as default };","map":{"version":3,"sources":["/Users/seohyun/dataPex/front-end/pages/preproc.js"],"names":["React","axios","firebase","Button","ModalHeader","ModalBody","ModalFooter","Form","FormGroup","Input","Label","CSVLink","CSVDownload","UploadCSV","posts","path","title","Layout","query","res","post","find","console","log","props","message","state","outputCsv","storage","ref","user","auth","currentUser","uid","tempDate","Date","date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","fileName","uploadTastk","child","putString","then","response","failedReason","handleSubmit","bind","handleOptionChange","selectedOption","paramNum","showResults","filename","event","preventDefault","formData","FormData","append","div","document","getElementById","innerHTML","link","headers","e","data","setState","err","innerText","changeEvent","target","value","handleUpload","onChange","Component"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AAEA,SACEC,MADF,EAEEC,WAFF,EAGEC,SAHF,EAIEC,WAJF,EAKEC,IALF,EAMEC,SANF,EAOEC,KAPF,EAQEC,KARF,QASO,YATP;AAUA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,WAArC;AACA,OAAOC,SAAP,MAAsB,qBAAtB,C,CACA;;AAEA,IAAMC,KAAK,GAAG,CACZ;AAAEC,EAAAA,IAAI,EAAE,OAAR;AAAiBC,EAAAA,KAAK,EAAE;AAAxB,CADY,EAEZ;AAAED,EAAAA,IAAI,EAAE,SAAR;AAAmBC,EAAAA,KAAK,EAAE;AAA1B,CAFY,EAGZ;AAAED,EAAAA,IAAI,EAAE,WAAR;AAAqBC,EAAAA,KAAK,EAAE;AAA5B,CAHY,EAIZ;AAAED,EAAAA,IAAI,EAAE,UAAR;AAAoBC,EAAAA,KAAK,EAAE;AAA3B,CAJY,EAKZ;AAAED,EAAAA,IAAI,EAAE,SAAR;AAAmBC,EAAAA,KAAK,EAAE;AAA1B,CALY,CAAd;AAOA,OAAOC,MAAP,MAAmB,sBAAnB;;;;;;;;;;;;;;;;;;AAGiCC,gBAAAA,K,QAAAA,K,EAAOC,G,QAAAA,G;AAC9BC,gBAAAA,I,GAAON,KAAK,CAACO,IAAN,CAAW,UAAAD,IAAI;AAAA,yBAAIA,IAAI,CAACL,IAAL,IAAaG,KAAK,CAACH,IAAvB;AAAA,iBAAf,C;AACbO,gBAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;iDACO;AAAEA,kBAAAA,IAAI,EAAJA;AAAF,iB;;;;;;;;;;;;;;;;;;AAGT,oBAAYI,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,kFAAMA,KAAN;;AADiB,mEA0EJ,YAAM;AACnB,UAAIC,OAAO,GAAG,MAAKC,KAAL,CAAWC,SAAzB,CADmB,CAGnB;AACA;;AAEA,UAAMC,OAAO,GAAG1B,QAAQ,CAAC0B,OAAT,GAAmBC,GAAnB,EAAhB;AACA,UAAMC,IAAI,GAAG5B,QAAQ,CAAC6B,IAAT,GAAgBC,WAAhB,CAA4BC,GAAzC;AACA,UAAIC,QAAQ,GAAG,IAAIC,IAAJ,EAAf;AACA,UAAIC,IAAI,GACNF,QAAQ,CAACG,WAAT,KACA,GADA,IAECH,QAAQ,CAACI,QAAT,KAAsB,CAFvB,IAGA,GAHA,GAIAJ,QAAQ,CAACK,OAAT,EAJA,GAKA,GALA,GAMAL,QAAQ,CAACM,QAAT,EANA,GAOA,GAPA,GAQAN,QAAQ,CAACO,UAAT,EARA,GASA,GATA,GAUAP,QAAQ,CAACQ,UAAT,EAXF;AAaA,UAAIC,QAAQ,GAAGb,IAAI,GAAG,GAAP,GAAaM,IAAb,GAAoB,sBAAnC;AACA,UAAMQ,WAAW,GAAGhB,OAAO,CACxBiB,KADiB,CACXF,QADW,EAEjBG,SAFiB,CAEPrB,OAFO,CAApB;AAGAmB,MAAAA,WAAW,CAACG,IAAZ,CACE,UAAAC,QAAQ,EAAI;AACV1B,QAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACD,OAHH,EAIE,UAAA0B,YAAY,EAAI;AACd3B,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACD,OANH;AAQD,KA5GkB;;AAEjB,UAAK2B,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,+BAApB;AACA,UAAKC,kBAAL,GAA0B,MAAKA,kBAAL,CAAwBD,IAAxB,+BAA1B,CAHiB,CAIjB;;AACA,UAAKzB,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,EADA;AAEX0B,MAAAA,cAAc,EAAE,EAFL;AAGXC,MAAAA,QAAQ,EAAE,EAHC;AAIXC,MAAAA,WAAW,EAAE;AAJF,KAAb;AAMA,UAAKxC,IAAL,GAAY,EAAZ;AAXiB;AAYlB;;;;iCACYyC,Q,EAAU;AAAA;;AACrBC,MAAAA,KAAK,CAACC,cAAN;AACA,UAAIC,QAAQ,GAAG,IAAIC,QAAJ,EAAf,CAFqB,CAGrB;;AACAD,MAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBL,QAAxB;AACA,UAAIM,GAAG,GAAGC,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,CAAV;AACAF,MAAAA,GAAG,CAACG,SAAJ,GACE,kGADF;AAGA,UAAIC,IAAI,GAAG,EAAX;AACA5C,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKG,KAAL,CAAW2B,cAAvB;;AACA,UAAI,KAAKtC,IAAL,IAAa,OAAjB,EAA0B;AACxB;AACAmD,QAAAA,IAAI,GAAG,wBAAP;AACD,OAHD,MAGO,IAAI,KAAKnD,IAAL,IAAa,SAAjB,EAA4B;AACjCmD,QAAAA,IAAI,GAAG,4BAA4B,KAAKxC,KAAL,CAAW4B,QAA9C;AACD,OAFM,MAEA,IAAI,KAAKvC,IAAL,IAAa,WAAjB,EAA8B;AACnC;AACA,YAAI,KAAKW,KAAL,CAAW2B,cAAX,IAA6B,KAAjC,EAAwC;AACtCa,UAAAA,IAAI,GAAG,oBAAoB,KAAKxC,KAAL,CAAW4B,QAAtC;AACD,SAFD,MAEO,IAAI,KAAK5B,KAAL,CAAW2B,cAAX,IAA6B,KAAjC,EAAwC;AAC7Ca,UAAAA,IAAI,GAAG,oBAAoB,KAAKxC,KAAL,CAAW4B,QAAtC;AACD;AACF,OAPM,MAOA,IAAI,KAAKvC,IAAL,IAAa,UAAjB,EAA6B;AAClCmD,QAAAA,IAAI,GAAG,qBAAqB,KAAKxC,KAAL,CAAW4B,QAAvC;AACD,OAFM,MAEA,IAAI,KAAKvC,IAAL,IAAa,SAAjB,EAA4B,CACjC;AACD;;AAEDd,MAAAA,KAAK,CACFmB,IADH,CACQ,2BAA2B8C,IADnC,EACyCP,QADzC,EACmD;AAC/CQ,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AADsC,OADnD,EAMGpB,IANH,CAMQ,UAAAqB,CAAC,EAAI;AACT9C,QAAAA,OAAO,CAACC,GAAR,CAAY6C,CAAZ;AACA9C,QAAAA,OAAO,CAACC,GAAR,CAAY6C,CAAC,CAACC,IAAd;;AACA,QAAA,MAAI,CAACC,QAAL,CAAc;AAAE3C,UAAAA,SAAS,EAAEyC,CAAC,CAACC,IAAf;AAAqBd,UAAAA,WAAW,EAAE;AAAlC,SAAd;;AACAO,QAAAA,GAAG,CAACG,SAAJ,GAAgB,EAAhB;AACD,OAXH,WAYS,UAAAM,GAAG,EAAI;AACZjD,QAAAA,OAAO,CAACC,GAAR,CAAYgD,GAAZ;AAEA,YAAIT,GAAG,GAAGC,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,CAAV;AACAF,QAAAA,GAAG,CAACU,SAAJ,GAAgB,wCAAhB;AACD,OAjBH;AAkBD;;;uCAEkBC,W,EAAa;AAC9BnD,MAAAA,OAAO,CAACC,GAAR,CAAYkD,WAAW,CAACC,MAAxB;AACA,WAAKJ,QAAL,CAAc;AACZjB,QAAAA,cAAc,EAAEoB,WAAW,CAACC,MAAZ,CAAmBC;AADvB,OAAd;AAGD;;;6BACQlB,K,EAAO;AACdnC,MAAAA,OAAO,CAACC,GAAR,CAAYkC,KAAK,CAACiB,MAAlB;AACA,WAAKJ,QAAL,CAAc;AAAEhB,QAAAA,QAAQ,EAAEG,KAAK,CAACiB,MAAN,CAAaC;AAAzB,OAAd;AACD;;;6BAuCQ;AAAA,UACCvD,IADD,GACU,KAAKI,KADf,CACCJ,IADD;AAGP,WAAKL,IAAL,GAAYK,IAAI,CAACL,IAAjB;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKR,IAAjB;;AAEA,UAAI,KAAKA,IAAL,IAAa,OAAjB,EAA0B;AACxB,eACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKK,IAAI,CAACJ,KAAV,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,EAIE;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,MAAC,SAAD;AAAW,UAAA,QAAQ,EAAE,KAAKkC,YAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF,CADF,EAME;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,EAAE,EAAC,gBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEG,KAAKxB,KAAL,CAAW6B,WAAX,GACC;AAAK,UAAA,EAAE,EAAC,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,MAAC,OAAD;AACE,UAAA,IAAI,EAAE,KAAK7B,KAAL,CAAWC,SADnB;AAEE,UAAA,QAAQ,EAAC,UAFX;AAGE,UAAA,SAAS,EAAC,QAHZ;AAIE,UAAA,MAAM,EAAC,QAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EASE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AACE,UAAA,SAAS,EAAC,0BADZ;AAEE,UAAA,OAAO,EAAE,KAAKiD,YAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAIG,GAJH,UAKO,GALP,CADF,CATF,CADD,GAoBG,IAtBN,CANF,CAJF,CADF;AAsCD,OAvCD,MAuCO,IAAI,KAAK7D,IAAL,IAAa,SAAjB,EAA4B;AACjC,eACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKK,IAAI,CAACJ,KAAV,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,EAIE;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAO,UAAA,SAAS,EAAC,yBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,GADH,uBAEoB,GAFpB,CADF,EAKE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AACE,UAAA,SAAS,EAAC,cADZ;AAEE,UAAA,WAAW,EAAC,OAFd;AAGE,UAAA,IAAI,EAAC,MAHP;AAIE,UAAA,IAAI,EAAC,QAJP;AAKE,UAAA,QAAQ,EAAE,KAAK6D,QAAL,CAAc1B,IAAd,CAAmB,IAAnB,CALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CALF,CADF,EAiBE,MAAC,SAAD;AAAW,UAAA,QAAQ,EAAE,KAAKD,YAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAjBF,CADF,CADF,EAsBE;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,EAAE,EAAC,gBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEG,KAAKxB,KAAL,CAAW6B,WAAX,GACC;AAAK,UAAA,EAAE,EAAC,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,MAAC,OAAD;AACE,UAAA,IAAI,EAAE,KAAK7B,KAAL,CAAWC,SADnB;AAEE,UAAA,QAAQ,EAAC,UAFX;AAGE,UAAA,SAAS,EAAC,QAHZ;AAIE,UAAA,MAAM,EAAC,QAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CADD,GAWG,IAbN,CAtBF,CAJF,CADF;AA6CD,OA9CM,MA8CA,IAAI,KAAKZ,IAAL,IAAa,WAAb,IAA4B,KAAKA,IAAL,IAAa,UAA7C,EAAyD;AAC9D,eACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKK,IAAI,CAACJ,KAAV,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,EAIE;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAO,mBAAM,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AACE,UAAA,SAAS,EAAC,kBADZ;AAEE,UAAA,IAAI,EAAC,OAFP;AAGE,UAAA,KAAK,EAAC,KAHR;AAIE,UAAA,OAAO,EAAE,KAAKU,KAAL,CAAW2B,cAAX,KAA8B,KAJzC;AAKE,UAAA,QAAQ,EAAE,KAAKD,kBALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,QADF,CADF,EAaE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AACE,UAAA,SAAS,EAAC,kBADZ;AAEE,UAAA,IAAI,EAAC,OAFP;AAGE,UAAA,KAAK,EAAC,KAHR;AAIE,UAAA,OAAO,EAAE,KAAK1B,KAAL,CAAW2B,cAAX,KAA8B,KAJzC;AAKE,UAAA,QAAQ,EAAE,KAAKD,kBALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,QADF,CAbF,EAyBE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAO,UAAA,SAAS,EAAC,yBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,GADH,qBAEkB,GAFlB,CADF,EAKE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AACE,UAAA,SAAS,EAAC,cADZ;AAEE,UAAA,WAAW,EAAC,OAFd;AAGE,UAAA,IAAI,EAAC,MAHP;AAIE,UAAA,IAAI,EAAC,QAJP;AAKE,UAAA,OAAO,EAAC,SALV;AAME,UAAA,QAAQ,EAAE,KAAKyB,QAAL,CAAc1B,IAAd,CAAmB,IAAnB,CANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CALF,CAzBF,EAyCE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAO,UAAA,SAAS,EAAC,yBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,GADH,qBAEkB,GAFlB,CADF,EAKE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AACE,UAAA,SAAS,EAAC,cADZ;AAEE,UAAA,WAAW,EAAC,OAFd;AAGE,UAAA,IAAI,EAAC,MAHP;AAIE,UAAA,IAAI,EAAC,QAJP;AAKE,UAAA,OAAO,EAAC,SALV;AAME,UAAA,QAAQ,EAAE,KAAK0B,QAAL,CAAc1B,IAAd,CAAmB,IAAnB,CANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CALF,CAzCF,EAyDE,MAAC,SAAD;AAAW,UAAA,QAAQ,EAAE,KAAKD,YAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAzDF,CADF,CADF,EA8DE;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,EAAE,EAAC,gBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEG,KAAKxB,KAAL,CAAW6B,WAAX,GACC;AAAK,UAAA,EAAE,EAAC,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,MAAC,OAAD;AACE,UAAA,IAAI,EAAE,KAAK7B,KAAL,CAAWC,SADnB;AAEE,UAAA,QAAQ,EAAC,UAFX;AAGE,UAAA,SAAS,EAAC,QAHZ;AAIE,UAAA,MAAM,EAAC,QAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAME;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAQ,UAAA,SAAS,EAAC,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CANF,CADF,EAWE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AACE,UAAA,SAAS,EAAC,0BADZ;AAEE,UAAA,OAAO,EAAE,KAAKiD,YAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAIG,GAJH,UAKO,GALP,CADF,CAXF,CADD,GAsBG,IAxBN,CA9DF,CAJF,CADF,CAD8D,CAiG9D;AACA;AACD,OAnGM,MAmGA,IAAI,KAAK7D,IAAL,IAAa,SAAjB,EAA4B,CACjC;AACD;AACF;;;;EAtT0Bf,KAAK,CAAC8E,S","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport firebase from \"../common/firebase\";\n\nimport {\n  Button,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Input,\n  Label\n} from \"reactstrap\";\nimport { CSVLink, CSVDownload } from \"react-csv\";\nimport UploadCSV from \"../components/Modal\";\n// import { Components } from \"@reactioncommerce/reaction-components\";\n\nconst posts = [\n  { path: \"label\", title: \"Label Encoding\" },\n  { path: \"one-hot\", title: \"One-Hot Encoding\" },\n  { path: \"delete-rc\", title: \"Delete Row/Column\" },\n  { path: \"replaceW\", title: \"Replace W\" },\n  { path: \"certain\", title: \"Select Certain\" }\n];\nimport Layout from \"../components/layout\";\n\nexport default class extends React.Component {\n  static async getInitialProps({ query, res }) {\n    const post = posts.find(post => post.path == query.path);\n    console.log(post);\n    return { post };\n  }\n\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleOptionChange = this.handleOptionChange.bind(this);\n    // this.csvLink = React.createRef();\n    this.state = {\n      outputCsv: \"\",\n      selectedOption: \"\",\n      paramNum: \"\",\n      showResults: false\n    };\n    this.path = \"\";\n  }\n  handleSubmit(filename) {\n    event.preventDefault();\n    var formData = new FormData();\n    // console.log(this.fileInput.current.files[0]);\n    formData.append(\"file\", filename);\n    var div = document.getElementById(\"result-display\");\n    div.innerHTML =\n      \"<Spinner animation='border' role='status'> <span className='sr-only'>Loading...</span></Spinner>\";\n\n    var link = \"\";\n    console.log(this.state.selectedOption);\n    if (this.path == \"label\") {\n      //  selected params of each on of them\n      link = \"preProc/LabelEncoding/\";\n    } else if (this.path == \"one-hot\") {\n      link = \"preProc/OneHotEncoding/\" + this.state.paramNum;\n    } else if (this.path == \"delete-rc\") {\n      // console.log(this.state.selectedOption)\n      if (this.state.selectedOption == \"row\") {\n        link = \"preProc/delRow/\" + this.state.paramNum;\n      } else if (this.state.selectedOption == \"col\") {\n        link = \"preProc/delCol/\" + this.state.paramNum;\n      }\n    } else if (this.path == \"replaceW\") {\n      link = \"preProc/ReplaceW\" + this.state.paramNum;\n    } else if (this.path == \"certain\") {\n      // selected params of each on of them\n    }\n\n    axios\n      .post(\"http://localhost:8000/\" + link, formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      })\n      .then(e => {\n        console.log(e);\n        console.log(e.data);\n        this.setState({ outputCsv: e.data, showResults: true });\n        div.innerHTML = \"\";\n      })\n      .catch(err => {\n        console.log(err);\n\n        var div = document.getElementById(\"result-display\");\n        div.innerText = \"Please check your input and parameters\";\n      });\n  }\n\n  handleOptionChange(changeEvent) {\n    console.log(changeEvent.target);\n    this.setState({\n      selectedOption: changeEvent.target.value\n    });\n  }\n  onChange(event) {\n    console.log(event.target);\n    this.setState({ paramNum: event.target.value });\n  }\n\n\n  handleUpload = () => {\n    let message = this.state.outputCsv;\n\n    // console.log(this.state.imgSrc);\n    // console.log(message);\n\n    const storage = firebase.storage().ref();\n    const user = firebase.auth().currentUser.uid;\n    var tempDate = new Date();\n    var date =\n      tempDate.getFullYear() +\n      \" \" +\n      (tempDate.getMonth() + 1) +\n      \" \" +\n      tempDate.getDate() +\n      \" \" +\n      tempDate.getHours() +\n      \":\" +\n      tempDate.getMinutes() +\n      \":\" +\n      tempDate.getSeconds();\n\n    var fileName = user + \"/\" + date + \"_Preporcess_data.csv\";\n    const uploadTastk = storage\n      .child(fileName)\n      .putString(message);\n    uploadTastk.then(\n      response => {\n        console.log(\"file upload success\");\n      },\n      failedReason => {\n        console.log(\"file upload failed\");\n      }\n    );\n  };\n\n  render() {\n    const { post } = this.props;\n\n    this.path = post.path;\n    console.log(this.path);\n\n    if (this.path == \"label\") {\n      return (\n        <>\n          <h1>{post.title}</h1>\n          <hr></hr>\n\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <form>\n                <UploadCSV onSubmit={this.handleSubmit}></UploadCSV>\n              </form>\n            </div>\n            <div className=\"col-6\">\n              <div id=\"result-display\"></div>\n              {this.state.showResults ? (\n                <div id=\"download-csv\">\n                  <CSVLink\n                    data={this.state.outputCsv}\n                    filename=\"data.csv\"\n                    className=\"hidden\"\n                    target=\"_blank\"\n                  >\n                    Download me\n                  </CSVLink>\n                  <div className=\"text-right\">\n                    <button\n                      className=\"btn btn-secondary btn-sm\"\n                      onClick={this.handleUpload}\n                    >\n                      {\" \"}\n                      Save{\" \"}\n                    </button>\n                </div>\n              </div>\n              ) : null}\n            </div>\n          </div>\n        </>\n      );\n    } else if (this.path == \"one-hot\") {\n      return (\n        <>\n          <h1>{post.title}</h1>\n          <hr></hr>\n\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <form>\n                <div className=\"form-group row\">\n                  <label className=\"col-sm-2 col-form-label\">\n                    {\" \"}\n                    Number of Column:{\" \"}\n                  </label>\n                  <div className=\"col-sm-10\">\n                    <input\n                      className=\"form-control\"\n                      placeholder=\"1,2,3\"\n                      type=\"text\"\n                      name=\"numCol\"\n                      onChange={this.onChange.bind(this)}\n                    />\n                  </div>\n                </div>\n\n                <UploadCSV onSubmit={this.handleSubmit}></UploadCSV>\n              </form>\n            </div>\n            <div className=\"col-6\">\n              <div id=\"result-display\"></div>\n              {this.state.showResults ? (\n                <div id=\"download-csv\">\n                  <CSVLink\n                    data={this.state.outputCsv}\n                    filename=\"data.csv\"\n                    className=\"hidden\"\n                    target=\"_blank\"\n                  >\n                    Download me\n                  </CSVLink>\n                </div>\n              ) : null}\n            </div>\n          </div>\n        </>\n      );\n    } else if (this.path == \"delete-rc\" || this.path == \"replaceW\") {\n      return (\n        <>\n          <h1>{post.title}</h1>\n          <hr></hr>\n\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <form>\n                <div className=\"form-check\">\n                  <label class=\"form-check-label\">\n                    <input\n                      className=\"form-check-input\"\n                      type=\"radio\"\n                      value=\"row\"\n                      checked={this.state.selectedOption === \"row\"}\n                      onChange={this.handleOptionChange}\n                    />\n                    Row\n                  </label>\n                </div>\n                <div className=\"form-check\">\n                  <label>\n                    <input\n                      className=\"form-check-input\"\n                      type=\"radio\"\n                      value=\"col\"\n                      checked={this.state.selectedOption === \"col\"}\n                      onChange={this.handleOptionChange}\n                    />\n                    Col\n                  </label>\n                </div>\n                <div className=\"form-group row\">\n                  <label className=\"col-sm-2 col-form-label\">\n                    {\" \"}\n                    Number of Rows:{\" \"}\n                  </label>\n                  <div className=\"col-sm-10\">\n                    <input\n                      className=\"form-control\"\n                      placeholder=\"1,2,3\"\n                      type=\"text\"\n                      name=\"numRow\"\n                      pattern=\"[0-9],*\"\n                      onChange={this.onChange.bind(this)}\n                    />\n                  </div>\n                </div>\n                <div className=\"form-group row\">\n                  <label className=\"col-sm-2 col-form-label\">\n                    {\" \"}\n                    Number of Cols:{\" \"}\n                  </label>\n                  <div className=\"col-sm-10\">\n                    <input\n                      className=\"form-control\"\n                      placeholder=\"1,2,3\"\n                      type=\"text\"\n                      name=\"numCol\"\n                      pattern=\"[0-9],*\"\n                      onChange={this.onChange.bind(this)}\n                    />\n                  </div>\n                </div>\n                <UploadCSV onSubmit={this.handleSubmit}></UploadCSV>\n              </form>\n            </div>\n            <div className=\"col-6\">\n              <div id=\"result-display\"></div>\n              {this.state.showResults ? (\n                <div id=\"download-csv\">\n                  <CSVLink\n                    data={this.state.outputCsv}\n                    filename=\"data.csv\"\n                    className=\"hidden\"\n                    target=\"_blank\"\n                  >\n                    <div className=\"text-center\">\n                      <button className=\"btn btn-info\">Download me</button>\n                    </div>\n                  </CSVLink>\n                  <div className=\"text-right\">\n                    <button\n                      className=\"btn btn-secondary btn-sm\"\n                      onClick={this.handleUpload}\n                    >\n                      {\" \"}\n                      Save{\" \"}\n                    </button>\n                </div>\n                </div>\n              ) : null}\n            </div>\n          </div>\n        </>\n      );\n      // } else if (this.path == \"replaceW\") {\n      // List the params of each on of them\n    } else if (this.path == \"certain\") {\n      // List the params of each on of them\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}