{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/youngjoon/Desktop/CS407/DatApex/front-end/pages/preproc.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport axios from \"axios\";\nimport { Button, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Input, Label } from \"reactstrap\";\nimport { CSVLink, CSVDownload } from \"react-csv\";\nimport UploadCSV from \"../components/Modal\"; // import { Components } from \"@reactioncommerce/reaction-components\";\n\nvar posts = [{\n  path: \"label\",\n  title: \"Label Encoding\"\n}, {\n  path: \"one-hot\",\n  title: \"One-Hot Encoding\"\n}, {\n  path: \"delete-rc\",\n  title: \"Delete Row/Column\"\n}, {\n  path: \"replaceW\",\n  title: \"Replace W\"\n}, {\n  path: \"certain\",\n  title: \"Select Certain\"\n}];\nimport Layout from \"../components/layout\";\n\nvar _default =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(_default, _React$Component);\n\n  _createClass(_default, null, [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(_ref) {\n        var query, res, post;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                query = _ref.query, res = _ref.res;\n                post = posts.find(function (post) {\n                  return post.path == query.path;\n                });\n                console.log(post);\n                return _context.abrupt(\"return\", {\n                  post: post\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  function _default(props) {\n    var _this;\n\n    _classCallCheck(this, _default);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(_default).call(this, props));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    _this.handleOptionChange = _this.handleOptionChange.bind(_assertThisInitialized(_this)); // this.csvLink = React.createRef();\n\n    _this.state = {\n      outputCsv: \"\",\n      selectedOption: \"\",\n      paramNum: \"\",\n      showResults: false\n    };\n    _this.path = \"\";\n    return _this;\n  }\n\n  _createClass(_default, [{\n    key: \"handleSubmit\",\n    value: function handleSubmit(filename) {\n      var _this2 = this;\n\n      event.preventDefault();\n      var formData = new FormData(); // console.log(this.fileInput.current.files[0]);\n\n      formData.append(\"file\", filename);\n      var div = document.getElementById(\"result-display\");\n      div.innerHTML = \"<Spinner animation='border' role='status'> <span className='sr-only'>Loading...</span></Spinner>\";\n      var link = \"\";\n      console.log(this.state.selectedOption);\n\n      if (this.path == \"label\") {//  selected params of each on of them\n      } else if (this.path == \"one-hot\") {\n        link = \"preProc/OneHotEncoding/\" + this.state.paramNum;\n      } else if (this.path == \"delete-rc\") {\n        console.log(this.state.selectedOption);\n\n        if (this.state.selectedOption == \"row\") {\n          link = \"preProc/delRow/\" + this.state.paramNum;\n        } else if (this.state.selectedOption == \"col\") {\n          link = \"preProc/delCol/\" + this.state.paramNum;\n        }\n      } else if (this.path == \"replaceW\") {\n        link = \"preProc/ReplaceW\" + this.state.paramNum;\n      } else if (this.path == \"certain\") {// selected params of each on of them\n      }\n\n      axios.post(\"http://localhost:8000/\" + link, formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }).then(function (e) {\n        console.log(e);\n        console.log(e.data);\n\n        _this2.setState({\n          outputCsv: e.data,\n          showResults: true\n        });\n\n        div.innerHTML = \"\";\n      })[\"catch\"](function (err) {\n        console.log(err);\n        var div = document.getElementById(\"result-display\");\n        div.innerText = \"Please check your input and parameters\";\n      });\n    }\n  }, {\n    key: \"handleOptionChange\",\n    value: function handleOptionChange(changeEvent) {\n      console.log(changeEvent.target);\n      this.setState({\n        selectedOption: changeEvent.target.value\n      });\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(event) {\n      console.log(event.target);\n      this.setState({\n        paramNum: event.target.value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // console.log(this.props.url.asPath.substring(9));\n      // this.path = this.props.url.asPath.substring(9);\n      var post = this.props.post;\n      this.path = post.path;\n      console.log(this.path);\n\n      if (this.path == \"label\") {// List the params of each on of them\n      } else if (this.path == \"one-hot\") {\n        // List the params of each on of them\n        return __jsx(React.Fragment, null, __jsx(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, this.path), __jsx(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }), __jsx(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: \"col-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, __jsx(\"form\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: \"form-group row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, __jsx(\"label\", {\n          className: \"col-sm-2 col-form-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, \" Number of Column: \"), __jsx(\"div\", {\n          className: \"col-sm-10\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, __jsx(\"input\", {\n          className: \"form-control\",\n          placeholder: \"1,2,3\",\n          type: \"text\",\n          name: \"numCol\",\n          onChange: this.onChange.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }))), __jsx(UploadCSV, {\n          onSubmit: this.handleSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }))), __jsx(\"div\", {\n          className: \"col-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          id: \"result-display\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }), this.state.showResults ? __jsx(\"div\", {\n          id: \"download-csv\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }, __jsx(CSVLink, {\n          data: this.state.outputCsv,\n          filename: \"data.csv\",\n          className: \"hidden\",\n          target: \"_blank\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        }, \"Download me\")) : null)));\n      } else if (this.path == \"delete-rc\" || this.path == \"replaceW\") {\n        // List the params of each on of them\n        return __jsx(React.Fragment, null, __jsx(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196\n          },\n          __self: this\n        }, this.path), __jsx(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197\n          },\n          __self: this\n        }), __jsx(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: \"col-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200\n          },\n          __self: this\n        }, __jsx(\"form\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: \"form-check\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202\n          },\n          __self: this\n        }, __jsx(\"label\", {\n          \"class\": \"form-check-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203\n          },\n          __self: this\n        }, __jsx(\"input\", {\n          className: \"form-check-input\",\n          type: \"radio\",\n          value: \"row\",\n          checked: this.state.selectedOption === \"row\",\n          onChange: this.handleOptionChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204\n          },\n          __self: this\n        }), \"Row\")), __jsx(\"div\", {\n          className: \"form-check\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214\n          },\n          __self: this\n        }, __jsx(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215\n          },\n          __self: this\n        }, __jsx(\"input\", {\n          className: \"form-check-input\",\n          type: \"radio\",\n          value: \"col\",\n          checked: this.state.selectedOption === \"col\",\n          onChange: this.handleOptionChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216\n          },\n          __self: this\n        }), \"Col\")), __jsx(\"div\", {\n          className: \"form-group row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226\n          },\n          __self: this\n        }, __jsx(\"label\", {\n          className: \"col-sm-2 col-form-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227\n          },\n          __self: this\n        }, \" Number of Rows: \"), __jsx(\"div\", {\n          className: \"col-sm-10\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 228\n          },\n          __self: this\n        }, __jsx(\"input\", {\n          className: \"form-control\",\n          placeholder: \"1,2,3\",\n          type: \"text\",\n          name: \"numRow\",\n          pattern: \"[0-9],*\",\n          onChange: this.onChange.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229\n          },\n          __self: this\n        }))), __jsx(\"div\", {\n          className: \"form-group row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 239\n          },\n          __self: this\n        }, __jsx(\"label\", {\n          className: \"col-sm-2 col-form-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240\n          },\n          __self: this\n        }, \" Number of Cols: \"), __jsx(\"div\", {\n          className: \"col-sm-10\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 241\n          },\n          __self: this\n        }, __jsx(\"input\", {\n          className: \"form-control\",\n          placeholder: \"1,2,3\",\n          type: \"text\",\n          name: \"numCol\",\n          pattern: \"[0-9],*\",\n          onChange: this.onChange.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 242\n          },\n          __self: this\n        }))), __jsx(UploadCSV, {\n          onSubmit: this.handleSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 252\n          },\n          __self: this\n        }))), __jsx(\"div\", {\n          className: \"col-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 255\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          id: \"result-display\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 256\n          },\n          __self: this\n        }), this.state.showResults ? __jsx(\"div\", {\n          id: \"download-csv\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258\n          },\n          __self: this\n        }, __jsx(CSVLink, {\n          data: this.state.outputCsv,\n          filename: \"data.csv\",\n          className: \"hidden\",\n          target: \"_blank\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 259\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: \"text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 265\n          },\n          __self: this\n        }, __jsx(\"button\", {\n          className: \"btn btn-info\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 266\n          },\n          __self: this\n        }, \"Download me\")))) : null))); // } else if (this.path == \"replaceW\") {\n        // List the params of each on of them\n      } else if (this.path == \"certain\") {// List the params of each on of them\n      }\n    }\n  }]);\n\n  return _default;\n}(React.Component);\n\nexport { _default as default };","map":{"version":3,"sources":["/Users/youngjoon/Desktop/CS407/DatApex/front-end/pages/preproc.js"],"names":["React","axios","Button","ModalHeader","ModalBody","ModalFooter","Form","FormGroup","Input","Label","CSVLink","CSVDownload","UploadCSV","posts","path","title","Layout","query","res","post","find","console","log","props","handleSubmit","bind","handleOptionChange","state","outputCsv","selectedOption","paramNum","showResults","filename","event","preventDefault","formData","FormData","append","div","document","getElementById","innerHTML","link","headers","then","e","data","setState","err","innerText","changeEvent","target","value","onChange","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Input,\n  Label\n} from \"reactstrap\";\nimport { CSVLink, CSVDownload } from \"react-csv\";\nimport UploadCSV from \"../components/Modal\";\n// import { Components } from \"@reactioncommerce/reaction-components\";\n\nconst posts = [\n  { path: \"label\", title: \"Label Encoding\" },\n  { path: \"one-hot\", title: \"One-Hot Encoding\" },\n  { path: \"delete-rc\", title: \"Delete Row/Column\" },\n  { path: \"replaceW\", title: \"Replace W\" },\n  { path: \"certain\", title: \"Select Certain\" }\n];\nimport Layout from \"../components/layout\";\n\nexport default class extends React.Component {\n  static async getInitialProps({query, res}) {\n    const post = posts.find(post=> post.path == query.path);\n    console.log(post)\n    return {post}\n  }\n  \n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleOptionChange = this.handleOptionChange.bind(this);\n    // this.csvLink = React.createRef();\n    this.state = {\n      outputCsv: \"\",\n      selectedOption: \"\",\n      paramNum: \"\",\n      showResults: false\n    };\n    this.path = \"\";\n  }\n  handleSubmit(filename) {\n    event.preventDefault();\n    var formData = new FormData();\n    // console.log(this.fileInput.current.files[0]);\n    formData.append(\"file\", filename);\n    var div = document.getElementById(\"result-display\");\n    div.innerHTML =\n      \"<Spinner animation='border' role='status'> <span className='sr-only'>Loading...</span></Spinner>\";\n\n    var link = \"\";\n    console.log(this.state.selectedOption);\n    if (this.path == \"label\") {\n      //  selected params of each on of them\n    } else if (this.path == \"one-hot\") {\n      link = \"preProc/OneHotEncoding/\" + this.state.paramNum;\n    } else if (this.path == \"delete-rc\") {\n      console.log(this.state.selectedOption)\n      if(this.state.selectedOption==\"row\"){\n        link = \"preProc/delRow/\" + this.state.paramNum;\n      }else if(this.state.selectedOption==\"col\"){\n        link = \"preProc/delCol/\" + this.state.paramNum;\n      }\n    } else if (this.path == \"replaceW\") {\n      link = \"preProc/ReplaceW\" + this.state.paramNum;\n    } else if (this.path == \"certain\") {\n      // selected params of each on of them\n    }\n\n    axios\n      .post(\"http://localhost:8000/\" + link, formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      })\n      .then(e => {\n        console.log(e);\n        console.log(e.data);\n        this.setState({ outputCsv: e.data, showResults: true });\n        div.innerHTML = \"\";\n      })\n      .catch(err => {\n        console.log(err);\n\n        var div = document.getElementById(\"result-display\");\n        div.innerText = \"Please check your input and parameters\";\n      });\n  }\n\n  handleOptionChange(changeEvent) {\n    console.log(changeEvent.target);\n    this.setState({\n      selectedOption: changeEvent.target.value\n    });\n  }\n  onChange(event) {\n    console.log(event.target);\n    this.setState({ paramNum: event.target.value });\n  }\n\n  render() {\n    // console.log(this.props.url.asPath.substring(9));\n    // this.path = this.props.url.asPath.substring(9);\n    const {post} =this.props\n\n    this.path = post.path;\n    console.log(this.path);\n\n    if (this.path == \"label\") {\n      // List the params of each on of them\n    } \n    else if (this.path == \"one-hot\") {\n      // List the params of each on of them\n      return (\n        <>\n          <h1>{ this.path }</h1>\n          <hr></hr>\n\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <form>\n                <div className=\"form-group row\">\n                  <label className=\"col-sm-2 col-form-label\"> Number of Column: </label>\n                  <div className=\"col-sm-10\">\n                    <input\n                      className=\"form-control\"\n                      placeholder=\"1,2,3\"\n                      type=\"text\"\n                      name=\"numCol\"\n                      onChange={this.onChange.bind(this)}\n                    />\n                  </div>\n                </div>\n                \n                <UploadCSV onSubmit={this.handleSubmit}></UploadCSV>\n              </form>\n            </div>\n            <div className=\"col-6\">\n              <div id=\"result-display\"></div>\n              { this.state.showResults ? (\n                <div id=\"download-csv\">\n                  <CSVLink\n                    data={this.state.outputCsv}\n                    filename=\"data.csv\"\n                    className=\"hidden\"\n                    target=\"_blank\"\n                  >\n                    Download me\n                  </CSVLink>\n                </div>\n              ) : null}\n            </div>\n          </div>\n          \n\n\n\n          {/* <main className=\"content\">\n            <div >\n              <label>\n                name of Column:\n                <input\n                  type=\"text\"\n                  name=\"numCol\"\n                  onChange={this.onChange.bind(this)}\n                />\n              </label>\n            </div>\n  \n            <UploadCSV onSubmit={this.handleSubmit}></UploadCSV>\n            <div id=\"result-display\"></div>\n            {this.state.showResults ? (\n              <div id=\"download-csv\">\n                <CSVLink\n                  data={this.state.outputCsv}\n                  filename=\"data.csv\"\n                  className=\"hidden\"\n                  target=\"_blank\"\n                >\n                  download me\n                </CSVLink>\n              </div>\n            ) : null}\n          </main> */}\n        </>\n      );\n    } else if (this.path == \"delete-rc\" || this.path == \"replaceW\") {\n      // List the params of each on of them\n      return (\n        <>\n\n          <h1>{ this.path }</h1>\n          <hr></hr>\n\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <form>\n                <div className=\"form-check\">\n                  <label class=\"form-check-label\">\n                    <input\n                      className=\"form-check-input\"\n                      type=\"radio\"\n                      value=\"row\"\n                      checked={this.state.selectedOption === \"row\"}\n                      onChange={this.handleOptionChange}\n                    />\n                    Row\n                  </label>\n                </div>\n                <div className=\"form-check\">\n                  <label>\n                    <input\n                      className=\"form-check-input\"\n                      type=\"radio\"\n                      value=\"col\"\n                      checked={this.state.selectedOption === \"col\"}\n                      onChange={this.handleOptionChange}\n                    />\n                    Col\n                  </label>\n                </div>\n                <div className=\"form-group row\">\n                  <label className=\"col-sm-2 col-form-label\"> Number of Rows: </label>\n                  <div className=\"col-sm-10\">\n                    <input\n                      className=\"form-control\"\n                      placeholder=\"1,2,3\"\n                      type=\"text\"\n                      name=\"numRow\"\n                      pattern=\"[0-9],*\"\n                      onChange={this.onChange.bind(this)}\n                    />\n                  </div>\n                </div>\n                <div className=\"form-group row\">\n                  <label className=\"col-sm-2 col-form-label\"> Number of Cols: </label>\n                  <div className=\"col-sm-10\">\n                    <input\n                      className=\"form-control\"\n                      placeholder=\"1,2,3\"\n                      type=\"text\"\n                      name=\"numCol\"\n                      pattern=\"[0-9],*\"\n                      onChange={this.onChange.bind(this)}\n                    />\n                  </div>\n                </div>\n                <UploadCSV onSubmit={this.handleSubmit}></UploadCSV>\n              </form>\n            </div>\n            <div className=\"col-6\">\n              <div id=\"result-display\"></div>\n              {this.state.showResults ? (\n                <div id=\"download-csv\">\n                  <CSVLink\n                    data={this.state.outputCsv}\n                    filename=\"data.csv\"\n                    className=\"hidden\"\n                    target=\"_blank\"\n                  >\n                    <div className=\"text-center\">\n                      <button className=\"btn btn-info\">\n                        Download me\n                      </button>\n                    </div>\n                  </CSVLink>\n                </div>\n              ) : null}\n            </div>\n          </div>\n          \n\n\n          {/* <main className=\"content\">\n            <div className=\"radio\">\n              <label class=\"form-check-label\">\n                <input\n                  className=\"form-check-input\"\n                  type=\"radio\"\n                  value=\"row\"\n                  checked={this.state.selectedOption === \"row\"}\n                  onChange={this.handleOptionChange}\n                />\n                Row\n              </label>\n              <label>\n                <input\n                  type=\"radio\"\n                  value=\"col\"\n                  checked={this.state.selectedOption === \"col\"}\n                  onChange={this.handleOptionChange}\n                />\n                Col\n              </label>\n              <br></br>\n              <label>\n                number of rows:\n                <input\n                  type=\"text\"\n                  name=\"numRow\"\n                  pattern=\"[0-9],*\"\n                  onChange={this.onChange.bind(this)}\n                />\n              </label>\n              <label>\n                number of col:\n                <input\n                  type=\"text\"\n                  name=\"numCol\"\n                  pattern=\"[0-9],*\"\n                  onChange={this.onChange.bind(this)}\n                />\n              </label>\n            </div>\n  \n            <UploadCSV onSubmit={this.handleSubmit}></UploadCSV>\n            <div id=\"result-display\"></div>\n            {this.state.showResults ? (\n              <div id=\"download-csv\">\n                <CSVLink\n                  data={this.state.outputCsv}\n                  filename=\"data.csv\"\n                  className=\"hidden\"\n                  target=\"_blank\"\n                >\n                  download me\n                </CSVLink>\n              </div>\n            ) : null}\n          </main> */}\n        </>\n      );\n    // } else if (this.path == \"replaceW\") {\n      // List the params of each on of them\n      \n    } else if (this.path == \"certain\") {\n      // List the params of each on of them\n    }\n    \n  }\n}\n"]},"metadata":{},"sourceType":"module"}