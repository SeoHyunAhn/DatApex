{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/seohyun/dataPex/front-end/pages/profile.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport firebase from '../common/firebase';\n\nvar Profile =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Profile, _Component);\n\n  function Profile() {\n    var _this;\n\n    _classCallCheck(this, Profile);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Profile).call(this));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleResetPassword\", function (e) {\n      _this.setState({\n        isClickedPassword: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleEditName\", function (e) {\n      _this.setState({\n        isClickedName: true\n      });\n    });\n\n    _this.state = {\n      isClickedPassword: false,\n      isClickedName: false\n    };\n    return _this;\n  }\n\n  _createClass(Profile, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"col-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, __jsx(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"Profile\"), __jsx(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }), __jsx(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"* Please make sure that you use public account, Not Google Account\"), __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Email:\"), \" \", __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \" \", firebase.auth().currentUser.email)), __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Name:\"), \" \", __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \" \", firebase.auth().currentUser.displayName)), __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), this.state.isClickedName ? __jsx(React.Fragment, null, __jsx(ChangeName, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      })) : __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, __jsx(\"button\", {\n        className: \"btn btn-info btn-block\",\n        onClick: this.handleEditName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Edit User Name\")), __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), this.state.isClickedPassword ? __jsx(React.Fragment, null, __jsx(ChangePassword, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      })) : __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, __jsx(\"button\", {\n        className: \"btn btn-danger btn-block\",\n        onClick: this.handleResetPassword,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Reset Password\")))));\n    }\n  }]);\n\n  return Profile;\n}(Component);\n\nvar ChangeName =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(ChangeName, _Component2);\n\n  function ChangeName() {\n    var _getPrototypeOf2;\n\n    var _this2;\n\n    _classCallCheck(this, ChangeName);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ChangeName)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this2), \"state\", {\n      name: '',\n      error: null\n    });\n\n    _defineProperty(_assertThisInitialized(_this2), \"onSubmitForm\", function (e) {\n      e.preventDefault();\n      var name = _this2.state.name;\n      var updateUser = firebase.auth().currentUser;\n      updateUser.updateProfile({\n        displayName: name\n      }).then(function (user) {\n        window.location = \"/main\";\n      })[\"catch\"](function (error) {\n        alert(error);\n\n        _this2.setState({\n          error: error\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this2), \"input\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this2), \"onRefInput\", function (c) {\n      _this2.input = c;\n    });\n\n    _defineProperty(_assertThisInitialized(_this2), \"onChangeInputName\", function (e) {\n      _this2.setState({\n        name: e.target.value\n      });\n    });\n\n    return _this2;\n  }\n\n  _createClass(ChangeName, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(React.Fragment, null, __jsx(\"form\", {\n        onSubmit: this.onSubmitForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Enter new User Name:\"), __jsx(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"name\",\n        placeholder: \"New Name\",\n        ref: this.onRefInput,\n        value: this.state.name,\n        onChange: this.onChangeInputName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      })), __jsx(\"div\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, __jsx(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-info btn-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Edit UserName\"))));\n    }\n  }]);\n\n  return ChangeName;\n}(Component);\n\nvar ChangePassword =\n/*#__PURE__*/\nfunction (_Component3) {\n  _inherits(ChangePassword, _Component3);\n\n  function ChangePassword() {\n    var _getPrototypeOf3;\n\n    var _this3;\n\n    _classCallCheck(this, ChangePassword);\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    _this3 = _possibleConstructorReturn(this, (_getPrototypeOf3 = _getPrototypeOf(ChangePassword)).call.apply(_getPrototypeOf3, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this3), \"state\", {\n      oldPassword: '',\n      password1: '',\n      password2: '',\n      error: null\n    });\n\n    _defineProperty(_assertThisInitialized(_this3), \"onSubmitForm\", function (e) {\n      e.preventDefault();\n      var _this3$state = _this3.state,\n          oldPassword = _this3$state.oldPassword,\n          password1 = _this3$state.password1,\n          password2 = _this3$state.password2;\n\n      if (password1 !== password2) {\n        alert(\"Password does not match!!!\");\n      } else {\n        var updateUser = firebase.auth().currentUser;\n        updateUser.updatePassword(password1).then(function (user) {\n          window.location = \"/main\";\n        })[\"catch\"](function (error) {\n          alert(error);\n\n          _this3.setState({\n            error: error\n          });\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this3), \"input\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this3), \"onRefInput\", function (c) {\n      _this3.input = c;\n    });\n\n    _defineProperty(_assertThisInitialized(_this3), \"onChangeInputOldPassword\", function (e) {\n      _this3.setState({\n        oldPassword: e.target.value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this3), \"onChangeInputPassword1\", function (e) {\n      _this3.setState({\n        password1: e.target.value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this3), \"onChangeInputPassword2\", function (e) {\n      _this3.setState({\n        password2: e.target.value\n      });\n    });\n\n    return _this3;\n  }\n\n  _createClass(ChangePassword, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(React.Fragment, null, __jsx(\"form\", {\n        onSubmit: this.onSubmitForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, \"Enter new Password:\"), __jsx(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"password1\",\n        placeholder: \"******\",\n        ref: this.onRefInput,\n        value: this.state.password1,\n        onChange: this.onChangeInputPassword1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      })), __jsx(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, \"Re-enter new Password:\"), __jsx(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"password2\",\n        placeholder: \"******\",\n        ref: this.onRefInput,\n        value: this.state.password2,\n        onChange: this.onChangeInputPassword2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      })), __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }), __jsx(\"div\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, __jsx(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-danger btn-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, \"Reset Password\"))));\n    }\n  }]);\n\n  return ChangePassword;\n}(Component);\n\nexport default Profile;","map":{"version":3,"sources":["/Users/seohyun/dataPex/front-end/pages/profile.js"],"names":["React","Component","firebase","Profile","e","setState","isClickedPassword","isClickedName","state","auth","currentUser","email","displayName","handleEditName","handleResetPassword","ChangeName","name","error","preventDefault","updateUser","updateProfile","then","user","window","location","alert","c","input","target","value","onSubmitForm","onRefInput","onChangeInputName","ChangePassword","oldPassword","password1","password2","updatePassword","onChangeInputPassword1","onChangeInputPassword2"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport firebase from '../common/firebase';\n\nclass Profile extends Component {\n    \n    constructor(){\n        super();\n        this.state = {  \n            isClickedPassword: false,\n            isClickedName: false,\n        }\n    }\n    \n    handleResetPassword = (e) => {\n        this.setState({\n            isClickedPassword: true,\n        });        \n    }\n\n    handleEditName = (e) => {\n        this.setState({\n            isClickedName: true,\n        });        \n    }\n    \n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <h1>Profile</h1>\n                        <hr></hr>\n                        <h5>* Please make sure that you use public account, Not Google Account</h5>\n                        <br />\n\n                        <div>\n                            <label>Email:</label> <span> { firebase.auth().currentUser.email }</span>\n                        </div>\n                        <div>\n                            <label>Name:</label> <span> { firebase.auth().currentUser.displayName }</span>\n                        </div>\n                        <br />\n\n                        { this.state.isClickedName ? (   <>\n                                                    <ChangeName />\n                                                </>\n                            ) : (   <div>\n                                        <button className=\"btn btn-info btn-block\" onClick={ this.handleEditName }>Edit User Name</button>\n                                    </div>\n                            )\n                        }\n                        <br />\n\n                        { this.state.isClickedPassword ? (   <>\n                                                    <ChangePassword />\n                                                </>\n                            ) : (   <div>\n                                        <button className=\"btn btn-danger btn-block\" onClick={ this.handleResetPassword }>Reset Password</button>\n                                    </div>\n                            )\n                        }\n                    </div>\n                </div>\n                \n            </div>\n        );\n    }\n}\n\nclass ChangeName extends Component {\n    state = {\n        name: '',\n        error: null,\n    };\n    \n    onSubmitForm = (e) => {\n        e.preventDefault();\n        \n        const { name } = this.state;\n\n        let updateUser = firebase.auth().currentUser;\n\n        updateUser.updateProfile({\n            displayName: name,\n        }).then((user) => {\n            window.location = \"/main\";\n        })\n        .catch((error) => {\n            alert(error);\n            this.setState({ error: error });\n        });                \n        \n    };\n\n    input;\n\n    onRefInput = (c) => {\n        this.input = c;\n    };\n\n    onChangeInputName = (e) => {\n        this.setState({\n            name: e.target.value\n        });\n    };\n\n    render() {\n        return (\n            <>\n                <form onSubmit={ this.onSubmitForm }>\n                    <div className=\"form-group\">\n                        <label>Enter new User Name:</label>\n                        <input type=\"text\" className=\"form-control\" id=\"name\" placeholder=\"New Name\" ref={ this.onRefInput } value={ this.state.name } onChange={ this.onChangeInputName } />\n                    </div>\n                    <div className=\"text-center\">\n                        <button type=\"submit\" className=\"btn btn-info btn-block\">Edit UserName</button>\n                    </div>\n                </form>\n            </>\n        );\n    }\n}\n\n\nclass ChangePassword extends Component {\n    state = {\n        oldPassword: '',\n        password1: '',\n        password2: '',\n        error: null,\n    };\n    \n    onSubmitForm = (e) => {\n        e.preventDefault();\n        \n        const { oldPassword, password1, password2 } = this.state;\n\n        if(password1 !== password2) {\n            alert(\"Password does not match!!!\");\n        }\n        else {\n\n            let updateUser = firebase.auth().currentUser;\n\n            updateUser.updatePassword(password1)\n                .then((user) => {\n                    window.location = \"/main\";\n                })\n                .catch((error) => {\n                    alert(error);\n                    this.setState({ error: error });\n                });                \n        }\n    };\n\n    input;\n\n    onRefInput = (c) => {\n        this.input = c;\n    };\n\n    onChangeInputOldPassword = (e) => {\n        this.setState({\n            oldPassword: e.target.value\n        });\n    };\n\n    onChangeInputPassword1  = (e) => {\n        this.setState({\n            password1: e.target.value\n        });\n    };\n\n    onChangeInputPassword2  = (e) => {\n        this.setState({\n            password2: e.target.value\n        });\n    };\n\n    render() {\n        return (\n            <>\n                <form onSubmit={ this.onSubmitForm }>\n                    {/* <div className=\"form-group\">\n                        <label>Enter current Password:</label>\n                        <input type=\"text\" className=\"form-control\" id=\"oldPassword\" placeholder=\"******\" ref={ this.onRefInput } value={ this.state.oldPassword } onChange={ this.onChangeInputOldPassword } />\n                    </div> */}\n                    <div className=\"form-group\">\n                        <label>Enter new Password:</label>\n                        <input type=\"text\" className=\"form-control\" id=\"password1\" placeholder=\"******\" ref={ this.onRefInput } value={ this.state.password1 } onChange={ this.onChangeInputPassword1 } />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Re-enter new Password:</label>\n                        <input type=\"text\" className=\"form-control\" id=\"password2\" placeholder=\"******\" ref={ this.onRefInput } value={ this.state.password2 } onChange={ this.onChangeInputPassword2 } />\n                    </div>\n                    <br />\n                    <div className=\"text-center\">\n                        <button type=\"submit\" className=\"btn btn-danger btn-block\">Reset Password</button>\n                    </div>\n                </form>\n            </>\n        );\n    }\n}\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}