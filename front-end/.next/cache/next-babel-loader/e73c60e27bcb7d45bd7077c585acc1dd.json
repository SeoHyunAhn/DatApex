{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/seohyun/dataPex/front-end/pages/preproc.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport axios from \"axios\";\nimport { Button, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Input, Label } from \"reactstrap\";\nimport { CSVLink, CSVDownload } from \"react-csv\";\nimport UploadCSV from \"../components/Modal\";\nvar posts = [{\n  path: \"label\",\n  title: \"Label Encoding\"\n}, {\n  path: \"one-hot\",\n  title: \"One-Hot Encoding\"\n}, {\n  path: \"delete-rc\",\n  title: \"Delete Row/Column\"\n}, {\n  path: \"replaceW\",\n  title: \"Replace W\"\n}, {\n  path: \"certain\",\n  title: \"Select Certain\"\n}];\nimport Layout from \"../components/layout\";\n\nvar _default =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(_default, _React$Component);\n\n  function _default(props) {\n    var _this;\n\n    _classCallCheck(this, _default);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(_default).call(this, props));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    _this.handleOptionChange = _this.handleOptionChange.bind(_assertThisInitialized(_this)); // this.csvLink = React.createRef();\n\n    _this.state = {\n      outputCsv: \"\",\n      selectedOption: \"\",\n      paramNum: \"\"\n    };\n    _this.path = \"\";\n    return _this;\n  }\n\n  _createClass(_default, [{\n    key: \"handleSubmit\",\n    value: function handleSubmit(filename) {\n      var _this2 = this;\n\n      event.preventDefault();\n      var formData = new FormData(); // console.log(this.fileInput.current.files[0]);\n\n      formData.append(\"file\", filename);\n      var div = document.getElementById(\"result-display\");\n      div.innerHTML = \"<Spinner animation='border' role='status'> <span className='sr-only'>Loading...</span></Spinner>\";\n      var link = \"\";\n      console.log(this.state.selectedOption);\n\n      if (this.path == \"label\") {//  selected params of each on of them\n      } else if (this.path == \"one-hot\") {// selected  params of each on of them\n      } else if (this.path == \"delete-rc\") {\n        // selected  params of each on of them\n        link = \"preProc/delRow/\" + this.state.paramNum;\n      } else if (this.path == \"replaceW\") {// selected params of each on of them\n      } else if (this.path == \"certain\") {// selected params of each on of them\n      }\n\n      axios.post(\"http://localhost:8000/\" + link, formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }).then(function (data) {\n        _this2.setState({\n          data: data\n        }, function () {\n          // click the CSVLink component to trigger the CSV download\n          _this2.csvLink.current.link.click();\n        });\n\n        div.style = \"visibility: visible;\";\n      })[\"catch\"](function (err) {\n        console.log(err);\n        var div = document.getElementById(\"result-display\");\n        div.innerText = \"Please provide a valid csv file\";\n      });\n    }\n  }, {\n    key: \"handleOptionChange\",\n    value: function handleOptionChange(changeEvent) {\n      console.log(changeEvent.target);\n      this.setState({\n        selectedOption: changeEvent.target.value\n      });\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(event) {\n      console.log(event.target);\n      this.setState({\n        paramNum: event.target.value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // console.log(this.props.url.asPath.substring(9));\n      this.path = this.props.url.asPath.substring(9);\n      var params = [];\n\n      if (this.path == \"label\") {// List the params of each on of them\n      } else if (this.path == \"one-hot\") {// List the params of each on of them\n      } else if (this.path == \"delete-rc\") {// List the params of each on of them\n      } else if (this.path == \"replaceW\") {// List the params of each on of them\n      } else if (this.path == \"certain\") {// List the params of each on of them\n      }\n\n      return __jsx(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, __jsx(\"main\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"radio\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, __jsx(\"input\", {\n        type: \"radio\",\n        value: \"row\",\n        checked: this.state.selectedOption === \"row\",\n        onChange: this.handleOptionChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }), \"row\"), __jsx(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"number of rows:\", __jsx(\"input\", {\n        type: \"text\",\n        name: \"numRow\",\n        pattern: \"[0-9]*\",\n        onChange: this.onChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }))), __jsx(UploadCSV, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), __jsx(\"div\", {\n        id: \"result-display\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return _default;\n}(React.Component);\n\nexport { _default as default };","map":{"version":3,"sources":["/Users/seohyun/dataPex/front-end/pages/preproc.js"],"names":["React","axios","Button","ModalHeader","ModalBody","ModalFooter","Form","FormGroup","Input","Label","CSVLink","CSVDownload","UploadCSV","posts","path","title","Layout","props","handleSubmit","bind","handleOptionChange","state","outputCsv","selectedOption","paramNum","filename","event","preventDefault","formData","FormData","append","div","document","getElementById","innerHTML","link","console","log","post","headers","then","data","setState","csvLink","current","click","style","err","innerText","changeEvent","target","value","url","asPath","substring","params","onChange","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Input,\n  Label\n} from \"reactstrap\";\nimport { CSVLink, CSVDownload } from \"react-csv\";\nimport UploadCSV from \"../components/Modal\";\n\nconst posts = [\n  { path: \"label\", title: \"Label Encoding\" },\n  { path: \"one-hot\", title: \"One-Hot Encoding\" },\n  { path: \"delete-rc\", title: \"Delete Row/Column\" },\n  { path: \"replaceW\", title: \"Replace W\" },\n  { path: \"certain\", title: \"Select Certain\" }\n];\nimport Layout from \"../components/layout\";\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleOptionChange = this.handleOptionChange.bind(this);\n    // this.csvLink = React.createRef();\n    this.state = { outputCsv: \"\", selectedOption: \"\", paramNum: \"\" };\n    this.path = \"\";\n  }\n  handleSubmit(filename) {\n    event.preventDefault();\n    var formData = new FormData();\n    // console.log(this.fileInput.current.files[0]);\n    formData.append(\"file\", filename);\n    var div = document.getElementById(\"result-display\");\n    div.innerHTML =\n      \"<Spinner animation='border' role='status'> <span className='sr-only'>Loading...</span></Spinner>\";\n\n    var link = \"\";\n    console.log(this.state.selectedOption);\n    if (this.path == \"label\") {\n      //  selected params of each on of them\n    } else if (this.path == \"one-hot\") {\n      // selected  params of each on of them\n    } else if (this.path == \"delete-rc\") {\n      // selected  params of each on of them\n      link = \"preProc/delRow/\"+this.state.paramNum;\n    } else if (this.path == \"replaceW\") {\n      // selected params of each on of them\n    } else if (this.path == \"certain\") {\n      // selected params of each on of them\n    }\n\n    axios\n      .post(\"http://localhost:8000/\" + link, formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      })\n      .then(data => {\n        this.setState({ data }, () => {\n          // click the CSVLink component to trigger the CSV download\n          this.csvLink.current.link.click();\n        });\n        div.style = \"visibility: visible;\";\n      })\n      .catch(err => {\n        console.log(err);\n\n        var div = document.getElementById(\"result-display\");\n        div.innerText = \"Please provide a valid csv file\";\n      });\n  }\n\n  handleOptionChange(changeEvent) {\n    console.log(changeEvent.target);\n    this.setState({\n      selectedOption: changeEvent.target.value\n    });\n  }\n  onChange(event){\n    console.log(event.target)\n    this.setState({paramNum: event.target.value});\n  }\n\n  render() {\n    // console.log(this.props.url.asPath.substring(9));\n    this.path = this.props.url.asPath.substring(9);\n    const params = [];\n    if (this.path == \"label\") {\n      // List the params of each on of them\n    } else if (this.path == \"one-hot\") {\n      // List the params of each on of them\n    } else if (this.path == \"delete-rc\") {\n      // List the params of each on of them\n    } else if (this.path == \"replaceW\") {\n      // List the params of each on of them\n    } else if (this.path == \"certain\") {\n      // List the params of each on of them\n    }\n    return (\n      <Layout>\n        <main className=\"content\">\n          <div className=\"radio\">\n            <label>\n              <input\n                type=\"radio\"\n                value=\"row\"\n                checked={this.state.selectedOption === \"row\"}\n                onChange={this.handleOptionChange}\n              />\n              row\n            </label>\n\n            <label>\n              number of rows:\n              <input type=\"text\" name=\"numRow\" pattern=\"[0-9]*\" onChange={this.onChange.bind(this)}/>\n            </label>\n          </div>\n          <UploadCSV onSubmit={this.handleSubmit}></UploadCSV>\n          <div id=\"result-display\"></div>\n          {/* <div id=\"download-csv\" >\n            <button onClick={this.fetchData}>Download CSV</button>\n\n            <CSVLink\n              data={this.state.data}\n              filename=\"data.csv\"\n              className=\"hidden\"\n              ref={this.csvLink}\n              target=\"_blank\"\n            />\n          </div> */}\n        </main>\n      </Layout>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}