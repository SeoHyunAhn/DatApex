{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/youngjoon/Desktop/CS407/DatApex/front-end/pages/mlalgo.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport axios from \"axios\";\nimport { Button, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Input, Label } from \"reactstrap\";\nimport UploadCSV from \"../components/Modal\";\nvar posts = [{\n  path: \"nba\",\n  title: \"Naive Bayes algorithm\"\n}, {\n  path: \"lra\",\n  title: \"Logistic Regression algorithm\"\n}, {\n  path: \"svm\",\n  title: \"Support Vector Machine algorithm\"\n}, {\n  path: \"bag\",\n  title: \"Bagging algorithm\"\n}, {\n  path: \"clus\",\n  title: \"Clustering algorithm\"\n}];\nimport Layout from \"../components/layout\";\n\nvar _default =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(_default, _React$Component);\n\n  function _default(props) {\n    var _this;\n\n    _classCallCheck(this, _default);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(_default).call(this, props));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this)); // this.fileInput = React.createRef();\n\n    _this.state = {\n      imgSrc: \"\"\n    };\n    _this.path = \"\";\n    return _this;\n  }\n\n  _createClass(_default, [{\n    key: \"handleSubmit\",\n    value: function handleSubmit(filename) {\n      var _this2 = this;\n\n      console.log(\"handling submit\");\n      var formData = new FormData(); // console.log(this.fileInput.current.files[0]);\n\n      formData.append(\"file\", filename);\n      var div = document.getElementById(\"image-display\");\n      div.innerHTML = \"<Spinner animation='border' role='status'> <span className='sr-only'>Loading...</span></Spinner>\";\n      axios.post(\"http://localhost:8000/upload/csv/\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }).then(function (e) {\n        console.log(e);\n        var div = document.getElementById(\"image-display\");\n        div.innerText = \"\";\n        var imageOupput = \"data:image/png;base64,\" + e.data;\n\n        _this2.setState({\n          imgSrc: imageOupput\n        });\n      })[\"catch\"](function (err) {\n        console.log(err);\n        var div = document.getElementById(\"image-display\");\n        div.innerText = \"Please provide a valid csv file\";\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // console.log(this.props.url.asPath.substring(8));\n      this.path = this.props.url.asPath.substring(8);\n\n      if (this.path == \"nba\") {// List the params of each on of them\n      } else if (this.path == \"lra\") {// List the params of each on of them\n      } else if (this.path == \"svm\") {// List the params of each on of them\n      } else if (this.path == \"bag\") {// List the params of each on of them\n      } else if (this.path == \"clus\") {// List the params of each on of them\n      }\n\n      return __jsx(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, __jsx(\"main\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, __jsx(UploadCSV, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), __jsx(\"div\", {\n        id: \"image-display\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), __jsx(\"img\", {\n        id: \"image-output\",\n        src: this.state.imgSrc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return _default;\n}(React.Component);\n\nexport { _default as default };","map":{"version":3,"sources":["/Users/youngjoon/Desktop/CS407/DatApex/front-end/pages/mlalgo.js"],"names":["React","axios","Button","ModalHeader","ModalBody","ModalFooter","Form","FormGroup","Input","Label","UploadCSV","posts","path","title","Layout","props","handleSubmit","bind","state","imgSrc","filename","console","log","formData","FormData","append","div","document","getElementById","innerHTML","post","headers","then","e","innerText","imageOupput","data","setState","err","url","asPath","substring","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Input,\n  Label\n} from \"reactstrap\";\nimport UploadCSV from \"../components/Modal\";\nconst posts = [\n  { path: \"nba\", title: \"Naive Bayes algorithm\" },\n  { path: \"lra\", title: \"Logistic Regression algorithm\" },\n  { path: \"svm\", title: \"Support Vector Machine algorithm\" },\n  { path: \"bag\", title: \"Bagging algorithm\" },\n  { path: \"clus\", title: \"Clustering algorithm\" }\n];\nimport Layout from \"../components/layout\";\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    // this.fileInput = React.createRef();\n    this.state = { imgSrc: \"\" };\n    this.path = \"\";\n  }\n  handleSubmit(filename) {\n    console.log(\"handling submit\");\n    var formData = new FormData();\n    // console.log(this.fileInput.current.files[0]);\n    formData.append(\"file\", filename);\n    var div = document.getElementById(\"image-display\");\n    div.innerHTML =\n      \"<Spinner animation='border' role='status'> <span className='sr-only'>Loading...</span></Spinner>\";\n\n    axios\n      .post(\"http://localhost:8000/upload/csv/\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      })\n      .then(e => {\n        console.log(e);\n\n        var div = document.getElementById(\"image-display\");\n        div.innerText = \"\";\n        var imageOupput = \"data:image/png;base64,\" + e.data;\n        this.setState({ imgSrc: imageOupput });\n      })\n      .catch(err => {\n        console.log(err);\n\n        var div = document.getElementById(\"image-display\");\n        div.innerText = \"Please provide a valid csv file\";\n      });\n  }\n  render() {\n    // console.log(this.props.url.asPath.substring(8));\n    this.path = this.props.url.asPath.substring(8);\n    if (this.path == \"nba\") {\n      // List the params of each on of them\n    } else if (this.path == \"lra\") {\n      // List the params of each on of them\n    } else if (this.path == \"svm\") {\n      // List the params of each on of them\n    } else if (this.path == \"bag\") {\n      // List the params of each on of them\n    } else if (this.path == \"clus\") {\n      // List the params of each on of them\n    }\n    return (\n      <Layout>\n        <main className=\"content\">\n          <UploadCSV onSubmit={this.handleSubmit}></UploadCSV>\n          <div id=\"image-display\"></div>\n          <img id=\"image-output\" src={this.state.imgSrc}></img>\n        </main>\n      </Layout>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}