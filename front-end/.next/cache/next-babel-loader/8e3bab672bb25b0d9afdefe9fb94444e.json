{"ast":null,"code":"var _jsxFileName = \"/Users/youngjoon/Desktop/CS407/DatApex/front-end/pages/preproc.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport axios from \"axios\";\nimport { Button, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Input, Label } from \"reactstrap\";\nimport { CSVLink, CSVDownload } from \"react-csv\";\nimport UploadCSV from \"../components/Modal\"; // import { Components } from \"@reactioncommerce/reaction-components\";\n\nconst posts = [{\n  path: \"label\",\n  title: \"Label Encoding\"\n}, {\n  path: \"one-hot\",\n  title: \"One-Hot Encoding\"\n}, {\n  path: \"delete-rc\",\n  title: \"Delete Row/Column\"\n}, {\n  path: \"replaceW\",\n  title: \"Replace W\"\n}, {\n  path: \"certain\",\n  title: \"Select Certain\"\n}];\nimport Layout from \"../components/layout\";\nexport default class extends React.Component {\n  static async getInitialProps({\n    query,\n    res\n  }) {\n    const post = posts.find(post => post.path == query.path);\n    console.log(post);\n    return {\n      post\n    };\n  }\n\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleOptionChange = this.handleOptionChange.bind(this); // this.csvLink = React.createRef();\n\n    this.state = {\n      outputCsv: \"\",\n      selectedOption: \"\",\n      paramNum: \"\",\n      showResults: false\n    };\n    this.path = \"\";\n  }\n\n  handleSubmit(filename) {\n    event.preventDefault();\n    var formData = new FormData(); // console.log(this.fileInput.current.files[0]);\n\n    formData.append(\"file\", filename);\n    var div = document.getElementById(\"result-display\");\n    div.innerHTML = \"<Spinner animation='border' role='status'> <span className='sr-only'>Loading...</span></Spinner>\";\n    var link = \"\";\n    console.log(this.state.selectedOption);\n\n    if (this.path == \"label\") {//  selected params of each on of them\n    } else if (this.path == \"one-hot\") {\n      link = \"preProc/OneHotEncoding/\" + this.state.paramNum;\n    } else if (this.path == \"delete-rc\") {\n      console.log(this.state.selectedOption);\n\n      if (this.state.selectedOption == \"row\") {\n        link = \"preProc/delRow/\" + this.state.paramNum;\n      } else if (this.state.selectedOption == \"col\") {\n        link = \"preProc/delCol/\" + this.state.paramNum;\n      }\n    } else if (this.path == \"replaceW\") {\n      link = \"preProc/ReplaceW\" + this.state.paramNum;\n    } else if (this.path == \"certain\") {// selected params of each on of them\n    }\n\n    axios.post(\"http://localhost:8000/\" + link, formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    }).then(e => {\n      console.log(e);\n      console.log(e.data);\n      this.setState({\n        outputCsv: e.data,\n        showResults: true\n      });\n      div.innerHTML = \"\";\n    }).catch(err => {\n      console.log(err);\n      var div = document.getElementById(\"result-display\");\n      div.innerText = \"Please check your input and parameters\";\n    });\n  }\n\n  handleOptionChange(changeEvent) {\n    console.log(changeEvent.target);\n    this.setState({\n      selectedOption: changeEvent.target.value\n    });\n  }\n\n  onChange(event) {\n    console.log(event.target);\n    this.setState({\n      paramNum: event.target.value\n    });\n  }\n\n  render() {\n    // console.log(this.props.url.asPath.substring(9));\n    // this.path = this.props.url.asPath.substring(9);\n    const {\n      post\n    } = this.props;\n    console.log(this.path);\n\n    if (this.path == \"label\") {// List the params of each on of them\n    } else if (this.path == \"one-hot\") {\n      // List the params of each on of them\n      return __jsx(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, __jsx(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, this.path), __jsx(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), __jsx(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"col-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, __jsx(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"form-group row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        className: \"col-sm-2 col-form-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \" Number of Column: \"), __jsx(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, __jsx(\"input\", {\n        className: \"form-control\",\n        placeholder: \"1,2,3\",\n        type: \"text\",\n        name: \"numCol\",\n        onChange: this.onChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }))), __jsx(UploadCSV, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }))), __jsx(\"div\", {\n        className: \"col-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        id: \"result-display\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }), this.state.showResults ? __jsx(\"div\", {\n        id: \"download-csv\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, __jsx(CSVLink, {\n        data: this.state.outputCsv,\n        filename: \"data.csv\",\n        className: \"hidden\",\n        target: \"_blank\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"Download me\")) : null)));\n    } else if (this.path == \"delete-rc\" || this.path == \"replaceW\") {\n      // List the params of each on of them\n      return __jsx(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, __jsx(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, this.path), __jsx(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }), __jsx(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"col-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, __jsx(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"form-check\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        class: \"form-check-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, __jsx(\"input\", {\n        className: \"form-check-input\",\n        type: \"radio\",\n        value: \"row\",\n        checked: this.state.selectedOption === \"row\",\n        onChange: this.handleOptionChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }), \"Row\")), __jsx(\"div\", {\n        className: \"form-check\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, __jsx(\"input\", {\n        className: \"form-check-input\",\n        type: \"radio\",\n        value: \"col\",\n        checked: this.state.selectedOption === \"col\",\n        onChange: this.handleOptionChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }), \"Col\")), __jsx(\"div\", {\n        className: \"form-group row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        className: \"col-sm-2 col-form-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, \" Number of Rows: \"), __jsx(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, __jsx(\"input\", {\n        className: \"form-control\",\n        placeholder: \"1,2,3\",\n        type: \"text\",\n        name: \"numRow\",\n        pattern: \"[0-9],*\",\n        onChange: this.onChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }))), __jsx(\"div\", {\n        className: \"form-group row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        className: \"col-sm-2 col-form-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, \" Number of Cols: \"), __jsx(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, __jsx(\"input\", {\n        className: \"form-control\",\n        placeholder: \"1,2,3\",\n        type: \"text\",\n        name: \"numCol\",\n        pattern: \"[0-9],*\",\n        onChange: this.onChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }))), __jsx(UploadCSV, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }))), __jsx(\"div\", {\n        className: \"col-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        id: \"result-display\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }), this.state.showResults ? __jsx(\"div\", {\n        id: \"download-csv\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, __jsx(CSVLink, {\n        data: this.state.outputCsv,\n        filename: \"data.csv\",\n        className: \"hidden\",\n        target: \"_blank\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, __jsx(\"button\", {\n        className: \"btn btn-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, \"Download me\")))) : null))); // } else if (this.path == \"replaceW\") {\n      // List the params of each on of them\n    } else if (this.path == \"certain\") {// List the params of each on of them\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/youngjoon/Desktop/CS407/DatApex/front-end/pages/preproc.js"],"names":["React","axios","Button","ModalHeader","ModalBody","ModalFooter","Form","FormGroup","Input","Label","CSVLink","CSVDownload","UploadCSV","posts","path","title","Layout","Component","getInitialProps","query","res","post","find","console","log","constructor","props","handleSubmit","bind","handleOptionChange","state","outputCsv","selectedOption","paramNum","showResults","filename","event","preventDefault","formData","FormData","append","div","document","getElementById","innerHTML","link","headers","then","e","data","setState","catch","err","innerText","changeEvent","target","value","onChange","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Input,\n  Label\n} from \"reactstrap\";\nimport { CSVLink, CSVDownload } from \"react-csv\";\nimport UploadCSV from \"../components/Modal\";\n// import { Components } from \"@reactioncommerce/reaction-components\";\n\nconst posts = [\n  { path: \"label\", title: \"Label Encoding\" },\n  { path: \"one-hot\", title: \"One-Hot Encoding\" },\n  { path: \"delete-rc\", title: \"Delete Row/Column\" },\n  { path: \"replaceW\", title: \"Replace W\" },\n  { path: \"certain\", title: \"Select Certain\" }\n];\nimport Layout from \"../components/layout\";\n\nexport default class extends React.Component {\n  static async getInitialProps({query, res}) {\n    const post = posts.find(post=> post.path == query.path);\n    console.log(post)\n    return {post}\n  }\n  \n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleOptionChange = this.handleOptionChange.bind(this);\n    // this.csvLink = React.createRef();\n    this.state = {\n      outputCsv: \"\",\n      selectedOption: \"\",\n      paramNum: \"\",\n      showResults: false\n    };\n    this.path = \"\";\n  }\n  handleSubmit(filename) {\n    event.preventDefault();\n    var formData = new FormData();\n    // console.log(this.fileInput.current.files[0]);\n    formData.append(\"file\", filename);\n    var div = document.getElementById(\"result-display\");\n    div.innerHTML =\n      \"<Spinner animation='border' role='status'> <span className='sr-only'>Loading...</span></Spinner>\";\n\n    var link = \"\";\n    console.log(this.state.selectedOption);\n    if (this.path == \"label\") {\n      //  selected params of each on of them\n    } else if (this.path == \"one-hot\") {\n      link = \"preProc/OneHotEncoding/\" + this.state.paramNum;\n    } else if (this.path == \"delete-rc\") {\n      console.log(this.state.selectedOption)\n      if(this.state.selectedOption==\"row\"){\n        link = \"preProc/delRow/\" + this.state.paramNum;\n      }else if(this.state.selectedOption==\"col\"){\n        link = \"preProc/delCol/\" + this.state.paramNum;\n      }\n    } else if (this.path == \"replaceW\") {\n      link = \"preProc/ReplaceW\" + this.state.paramNum;\n    } else if (this.path == \"certain\") {\n      // selected params of each on of them\n    }\n\n    axios\n      .post(\"http://localhost:8000/\" + link, formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      })\n      .then(e => {\n        console.log(e);\n        console.log(e.data);\n        this.setState({ outputCsv: e.data, showResults: true });\n        div.innerHTML = \"\";\n      })\n      .catch(err => {\n        console.log(err);\n\n        var div = document.getElementById(\"result-display\");\n        div.innerText = \"Please check your input and parameters\";\n      });\n  }\n\n  handleOptionChange(changeEvent) {\n    console.log(changeEvent.target);\n    this.setState({\n      selectedOption: changeEvent.target.value\n    });\n  }\n  onChange(event) {\n    console.log(event.target);\n    this.setState({ paramNum: event.target.value });\n  }\n\n  render() {\n    // console.log(this.props.url.asPath.substring(9));\n    // this.path = this.props.url.asPath.substring(9);\n    const {post} =this.props\n\n    console.log(this.path);\n\n    if (this.path == \"label\") {\n      // List the params of each on of them\n    } \n    else if (this.path == \"one-hot\") {\n      // List the params of each on of them\n      return (\n        <Layout>\n          <h1>{ this.path }</h1>\n          <hr></hr>\n\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <form>\n                <div className=\"form-group row\">\n                  <label className=\"col-sm-2 col-form-label\"> Number of Column: </label>\n                  <div className=\"col-sm-10\">\n                    <input\n                      className=\"form-control\"\n                      placeholder=\"1,2,3\"\n                      type=\"text\"\n                      name=\"numCol\"\n                      onChange={this.onChange.bind(this)}\n                    />\n                  </div>\n                </div>\n                \n                <UploadCSV onSubmit={this.handleSubmit}></UploadCSV>\n              </form>\n            </div>\n            <div className=\"col-6\">\n              <div id=\"result-display\"></div>\n              { this.state.showResults ? (\n                <div id=\"download-csv\">\n                  <CSVLink\n                    data={this.state.outputCsv}\n                    filename=\"data.csv\"\n                    className=\"hidden\"\n                    target=\"_blank\"\n                  >\n                    Download me\n                  </CSVLink>\n                </div>\n              ) : null}\n            </div>\n          </div>\n          \n\n\n\n          {/* <main className=\"content\">\n            <div >\n              <label>\n                name of Column:\n                <input\n                  type=\"text\"\n                  name=\"numCol\"\n                  onChange={this.onChange.bind(this)}\n                />\n              </label>\n            </div>\n  \n            <UploadCSV onSubmit={this.handleSubmit}></UploadCSV>\n            <div id=\"result-display\"></div>\n            {this.state.showResults ? (\n              <div id=\"download-csv\">\n                <CSVLink\n                  data={this.state.outputCsv}\n                  filename=\"data.csv\"\n                  className=\"hidden\"\n                  target=\"_blank\"\n                >\n                  download me\n                </CSVLink>\n              </div>\n            ) : null}\n          </main> */}\n        </Layout>\n      );\n    } else if (this.path == \"delete-rc\" || this.path == \"replaceW\") {\n      // List the params of each on of them\n      return (\n        <Layout>\n\n          <h1>{ this.path }</h1>\n          <hr></hr>\n\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <form>\n                <div className=\"form-check\">\n                  <label class=\"form-check-label\">\n                    <input\n                      className=\"form-check-input\"\n                      type=\"radio\"\n                      value=\"row\"\n                      checked={this.state.selectedOption === \"row\"}\n                      onChange={this.handleOptionChange}\n                    />\n                    Row\n                  </label>\n                </div>\n                <div className=\"form-check\">\n                  <label>\n                    <input\n                      className=\"form-check-input\"\n                      type=\"radio\"\n                      value=\"col\"\n                      checked={this.state.selectedOption === \"col\"}\n                      onChange={this.handleOptionChange}\n                    />\n                    Col\n                  </label>\n                </div>\n                <div className=\"form-group row\">\n                  <label className=\"col-sm-2 col-form-label\"> Number of Rows: </label>\n                  <div className=\"col-sm-10\">\n                    <input\n                      className=\"form-control\"\n                      placeholder=\"1,2,3\"\n                      type=\"text\"\n                      name=\"numRow\"\n                      pattern=\"[0-9],*\"\n                      onChange={this.onChange.bind(this)}\n                    />\n                  </div>\n                </div>\n                <div className=\"form-group row\">\n                  <label className=\"col-sm-2 col-form-label\"> Number of Cols: </label>\n                  <div className=\"col-sm-10\">\n                    <input\n                      className=\"form-control\"\n                      placeholder=\"1,2,3\"\n                      type=\"text\"\n                      name=\"numCol\"\n                      pattern=\"[0-9],*\"\n                      onChange={this.onChange.bind(this)}\n                    />\n                  </div>\n                </div>\n                <UploadCSV onSubmit={this.handleSubmit}></UploadCSV>\n              </form>\n            </div>\n            <div className=\"col-6\">\n              <div id=\"result-display\"></div>\n              {this.state.showResults ? (\n                <div id=\"download-csv\">\n                  <CSVLink\n                    data={this.state.outputCsv}\n                    filename=\"data.csv\"\n                    className=\"hidden\"\n                    target=\"_blank\"\n                  >\n                    <div className=\"text-center\">\n                      <button className=\"btn btn-info\">\n                        Download me\n                      </button>\n                    </div>\n                  </CSVLink>\n                </div>\n              ) : null}\n            </div>\n          </div>\n          \n\n\n          {/* <main className=\"content\">\n            <div className=\"radio\">\n              <label class=\"form-check-label\">\n                <input\n                  className=\"form-check-input\"\n                  type=\"radio\"\n                  value=\"row\"\n                  checked={this.state.selectedOption === \"row\"}\n                  onChange={this.handleOptionChange}\n                />\n                Row\n              </label>\n              <label>\n                <input\n                  type=\"radio\"\n                  value=\"col\"\n                  checked={this.state.selectedOption === \"col\"}\n                  onChange={this.handleOptionChange}\n                />\n                Col\n              </label>\n              <br></br>\n              <label>\n                number of rows:\n                <input\n                  type=\"text\"\n                  name=\"numRow\"\n                  pattern=\"[0-9],*\"\n                  onChange={this.onChange.bind(this)}\n                />\n              </label>\n              <label>\n                number of col:\n                <input\n                  type=\"text\"\n                  name=\"numCol\"\n                  pattern=\"[0-9],*\"\n                  onChange={this.onChange.bind(this)}\n                />\n              </label>\n            </div>\n  \n            <UploadCSV onSubmit={this.handleSubmit}></UploadCSV>\n            <div id=\"result-display\"></div>\n            {this.state.showResults ? (\n              <div id=\"download-csv\">\n                <CSVLink\n                  data={this.state.outputCsv}\n                  filename=\"data.csv\"\n                  className=\"hidden\"\n                  target=\"_blank\"\n                >\n                  download me\n                </CSVLink>\n              </div>\n            ) : null}\n          </main> */}\n        </Layout>\n      );\n    // } else if (this.path == \"replaceW\") {\n      // List the params of each on of them\n      \n    } else if (this.path == \"certain\") {\n      // List the params of each on of them\n    }\n    \n  }\n}\n"]},"metadata":{},"sourceType":"module"}