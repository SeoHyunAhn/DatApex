{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/seohyun/dataPex/front-end/pages/mlOptions.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport Layout from \"../components/layout\"; // import Link from 'next/link';\n\nimport { Link, Router } from \"../routes\";\nvar styleCard = {\n  marginBottom: \"10px\"\n};\n\nvar MlOptions =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MlOptions, _Component);\n\n  function MlOptions() {\n    _classCallCheck(this, MlOptions);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MlOptions).apply(this, arguments));\n  }\n\n  _createClass(MlOptions, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, __jsx(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, \"MLOptions\"), __jsx(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }), __jsx(\"div\", {\n        className: \"container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"col-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"card\",\n        style: styleCard,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"card-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, \"Naive Bayes algorithm\"), __jsx(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, __jsx(\"img\", {\n        className: \"card-img\",\n        variant: \"top\",\n        src: \"../static/nba.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }), __jsx(\"h5\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"Explanation: \"), __jsx(\"p\", {\n        className: \"card-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"Na\\xEFve Bayes is a classification technique/algorithm based on Bayes\\u2019 Theorem with an assumption of independence among the predictors. Loosely translated, this means that a Na\\xEFve Bayes classifier assumes that the presence of a particular feature in a class is unrelated to the presence of any other feature. This model is particularly useful for large data sets \\u2013 along with simplicity, Na\\xEFve Bayes is known to outperform even highly sophisticated classification methods in some cases. \", __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), \"The Na\\xEFve Bayes algorithm works by converting the dataset into a frequency table, creating a likelihood table by calculating probabilities & then using the Na\\xEFve Bayes equation to calculate the posterior probability for each class. The class with the highest posterior probability is considered the outcome of the prediction. This algorithm is typically used in text classification & with problems having multiple classes.\"), __jsx(Link, {\n        route: \"mlalgo\",\n        params: {\n          path: \"nba\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Go somewhere\"))))), __jsx(\"div\", {\n        className: \"col-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"card\",\n        style: styleCard,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"card-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Logistic Regression algorithm\"), __jsx(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, __jsx(\"img\", {\n        className: \"card-img\",\n        variant: \"top\",\n        src: \"../static/lra.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), __jsx(\"h5\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Explanation: \"), __jsx(\"p\", {\n        className: \"card-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Logistic Regression is a classification machine-learning algorithm used to assign observations to a discrete set of classes (binary or multiple classes). Logistic regression transforms its output using the logistic sigmoid function to return a probability value. Logistic Regression is a predictive analysis algorithm as it is based on the concepts of probability. It uses a more complex cost function than linear regression (the logistic or sigmoid function).\", __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), \"In order to map predicted values to probabilities, we use the Sigmoid function which maps any real value into another value between 0 & 1.\"), __jsx(Link, {\n        route: \"mlalgo\",\n        params: {\n          path: \"lra\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Go somewhere\"))))), __jsx(\"div\", {\n        className: \"col-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"card\",\n        style: styleCard,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"card-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Support Vector Machine algorithm\"), __jsx(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, __jsx(\"img\", {\n        className: \"card-img\",\n        variant: \"top\",\n        src: \"../static/svm.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), __jsx(\"h5\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Explanation: \"), __jsx(\"p\", {\n        className: \"card-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"SVM is a supervised machine learning algorithm which may be used for either classification or regression problems. However, in general, it is used predominantly for classification problems. In this algorithm, we plot each data item as a point in n-dimensional space (n being the number of features) with the value of each feature being the value of a particular coordinate. Subsequently, classification is performed by finding the hyperplane (the equivalent of a line in a 2-dimensional space) that differentiates the two classes well. \", __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }), \"Above image shows, Support Vectors are simply the co-ordinates of individual observations. SVM is a frontier which best segregates the two classes.\"), __jsx(Link, {\n        route: \"mlalgo\",\n        params: {\n          path: \"svm\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Go somewhere\"))))), __jsx(\"div\", {\n        className: \"col-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"card\",\n        style: styleCard,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"card-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Bagging algorithm\"), __jsx(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, __jsx(\"h5\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Explanation: \"), __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"aka. Bootstrap aggregating\"), __jsx(\"p\", {\n        className: \"card-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Improve the stability and accuracy of machine learning algorithms used in statistical classification and regression.\"), __jsx(Link, {\n        route: \"mlalgo\",\n        params: {\n          path: \"bag\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Go somewhere\"))))), __jsx(\"div\", {\n        className: \"col-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"card\",\n        style: styleCard,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"card-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"Clustering algorithm\"), __jsx(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, __jsx(\"h5\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"Explanation: \"), __jsx(\"p\", {\n        className: \"card-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"Grouping a set of objects in a way that objects in the same group are more similar to each other than to those in other group\"), __jsx(Link, {\n        route: \"mlalgo\",\n        params: {\n          path: \"clus\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"Go somewhere\"))))))));\n    }\n  }]);\n\n  return MlOptions;\n}(Component);\n\nexport default MlOptions;","map":{"version":3,"sources":["/Users/seohyun/dataPex/front-end/pages/mlOptions.js"],"names":["React","Component","Layout","Link","Router","styleCard","marginBottom","MlOptions","path"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Layout from \"../components/layout\";\n// import Link from 'next/link';\nimport { Link, Router } from \"../routes\";\n\nconst styleCard = {\n  marginBottom: \"10px\"\n};\n\nclass MlOptions extends Component {\n  render() {\n    return (\n      <Layout>\n        <h1>MLOptions</h1>\n        <hr></hr>\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <div className=\"card\" style={styleCard}>\n                <div className=\"card-header\">Naive Bayes algorithm</div>\n                <div className=\"card-body\">\n                  <img\n                    className=\"card-img\"\n                    variant=\"top\"\n                    src=\"../static/nba.png\"\n                  />\n                  <h5 className=\"card-title\">Explanation: </h5>\n                  <p className=\"card-text\">\n                    Naïve Bayes is a classification technique/algorithm based on\n                    Bayes’ Theorem with an assumption of independence among the\n                    predictors. Loosely translated, this means that a Naïve\n                    Bayes classifier assumes that the presence of a particular\n                    feature in a class is unrelated to the presence of any other\n                    feature. This model is particularly useful for large data\n                    sets – along with simplicity, Naïve Bayes is known to\n                    outperform even highly sophisticated classification methods\n                    in some cases. <br></br>The Naïve Bayes algorithm works by\n                    converting the dataset into a frequency table, creating a\n                    likelihood table by calculating probabilities & then using\n                    the Naïve Bayes equation to calculate the posterior\n                    probability for each class. The class with the highest\n                    posterior probability is considered the outcome of the\n                    prediction. This algorithm is typically used in text\n                    classification & with problems having multiple classes.\n                  </p>\n\n                  <Link route=\"mlalgo\" params={{ path: \"nba\" }}>\n                    <a className=\"btn btn-primary\">Go somewhere</a>\n                  </Link>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-6\">\n              <div className=\"card\" style={styleCard}>\n                <div className=\"card-header\">Logistic Regression algorithm</div>\n                <div className=\"card-body\">\n                  <img\n                    className=\"card-img\"\n                    variant=\"top\"\n                    src=\"../static/lra.png\"\n                  />\n                  <h5 className=\"card-title\">Explanation: </h5>\n                  <p className=\"card-text\">\n                    Logistic Regression is a classification machine-learning\n                    algorithm used to assign observations to a discrete set of\n                    classes (binary or multiple classes). Logistic regression\n                    transforms its output using the logistic sigmoid function to\n                    return a probability value. Logistic Regression is a\n                    predictive analysis algorithm as it is based on the concepts\n                    of probability. It uses a more complex cost function than\n                    linear regression (the logistic or sigmoid function).\n                    <br></br>\n                    In order to map predicted values to probabilities, we use\n                    the Sigmoid function which maps any real value into another\n                    value between 0 & 1.\n                  </p>\n                  <Link route=\"mlalgo\" params={{ path: \"lra\" }}>\n                    <a className=\"btn btn-primary\">Go somewhere</a>\n                  </Link>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-6\">\n              <div className=\"card\" style={styleCard}>\n                <div className=\"card-header\">\n                  Support Vector Machine algorithm\n                </div>\n                <div className=\"card-body\">\n                  <img\n                    className=\"card-img\"\n                    variant=\"top\"\n                    src=\"../static/svm.png\"\n                  />\n                  <h5 className=\"card-title\">Explanation: </h5>\n                  <p className=\"card-text\">\n                    SVM is a supervised machine learning algorithm which may be\n                    used for either classification or regression problems.\n                    However, in general, it is used predominantly for\n                    classification problems. In this algorithm, we plot each\n                    data item as a point in n-dimensional space (n being the\n                    number of features) with the value of each feature being the\n                    value of a particular coordinate. Subsequently,\n                    classification is performed by finding the hyperplane (the\n                    equivalent of a line in a 2-dimensional space) that\n                    differentiates the two classes well. <br></br>Above image\n                    shows, Support Vectors are simply the co-ordinates of\n                    individual observations. SVM is a frontier which best\n                    segregates the two classes.\n                  </p>\n                  <Link route=\"mlalgo\" params={{ path: \"svm\" }}>\n                    <a className=\"btn btn-primary\">Go somewhere</a>\n                  </Link>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-6\">\n              <div className=\"card\" style={styleCard}>\n                <div className=\"card-header\">Bagging algorithm</div>\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\">Explanation: </h5>\n                  <p>aka. Bootstrap aggregating</p>\n                  <p className=\"card-text\">\n                    Improve the stability and accuracy of machine learning\n                    algorithms used in statistical classification and\n                    regression.\n                  </p>\n                  <Link route=\"mlalgo\" params={{ path: \"bag\" }}>\n                    <a className=\"btn btn-primary\">Go somewhere</a>\n                  </Link>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-6\">\n              <div className=\"card\" style={styleCard}>\n                <div className=\"card-header\">Clustering algorithm</div>\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\">Explanation: </h5>\n                  <p className=\"card-text\">\n                    Grouping a set of objects in a way that objects in the same\n                    group are more similar to each other than to those in other\n                    group\n                  </p>\n                  <Link route=\"mlalgo\" params={{ path: \"clus\" }}>\n                    <a className=\"btn btn-primary\">Go somewhere</a>\n                  </Link>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport default MlOptions;\n"]},"metadata":{},"sourceType":"module"}