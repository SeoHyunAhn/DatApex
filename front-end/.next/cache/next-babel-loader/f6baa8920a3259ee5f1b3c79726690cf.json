{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/seohyun/dataPex/front-end/pages/mlalgo.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport axios from \"axios\";\nimport Modal from \"../components/Modal\";\nconst posts = [{\n  path: \"nba\",\n  title: \"Naive Bayes algorithm\"\n}, {\n  path: \"lra\",\n  title: \"Logistic Regression algorithm\"\n}, {\n  path: \"svm\",\n  title: \"Support Vector Machine algorithm\"\n}, {\n  path: \"bag\",\n  title: \"Bagging algorithm\"\n}, {\n  path: \"clus\",\n  title: \"Clustering algorithm\"\n}];\nimport Layout from \"../components/layout\";\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"refreshList\", () => {\n      axios.get(\"http://localhost:8000/api/todos/\").then(res => this.setState({\n        todoList: res.data\n      })).catch(err => console.log(err));\n    });\n\n    _defineProperty(this, \"displayCompleted\", status => {\n      if (status) {\n        return this.setState({\n          viewCompleted: true\n        });\n      }\n\n      return this.setState({\n        viewCompleted: false\n      });\n    });\n\n    _defineProperty(this, \"renderTabList\", () => {\n      return __jsx(\"div\", {\n        className: \"my-5 tab-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        onClick: () => this.displayCompleted(true),\n        className: this.state.viewCompleted ? \"active\" : \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"complete\"), __jsx(\"span\", {\n        onClick: () => this.displayCompleted(false),\n        className: this.state.viewCompleted ? \"\" : \"active\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Incomplete\"));\n    });\n\n    _defineProperty(this, \"renderItems\", () => {\n      const {\n        viewCompleted\n      } = this.state;\n      const newItems = this.state.todoList.filter(item => item.completed === viewCompleted);\n      return newItems.map(item => __jsx(\"li\", {\n        key: item.id,\n        className: \"list-group-item d-flex justify-content-between align-items-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        className: `todo-title mr-2 ${this.state.viewCompleted ? \"completed-todo\" : \"\"}`,\n        title: item.description,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, item.title), __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, __jsx(\"button\", {\n        onClick: () => this.editItem(item),\n        className: \"btn btn-secondary mr-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \" \", \"Edit\", \" \"), __jsx(\"button\", {\n        onClick: () => this.handleDelete(item),\n        className: \"btn btn-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Delete\", \" \"))));\n    });\n\n    _defineProperty(this, \"toggle\", () => {\n      this.setState({\n        modal: !this.state.modal\n      });\n    });\n\n    _defineProperty(this, \"handleSubmit\", item => {\n      this.toggle();\n\n      if (item.id) {\n        axios.put(`http://localhost:8000/api/todos/${item.id}/`, item).then(res => this.refreshList());\n        return;\n      }\n\n      axios.post(\"http://localhost:8000/api/todos/\", item).then(res => this.refreshList());\n    });\n\n    _defineProperty(this, \"handleDelete\", item => {\n      axios.delete(`http://localhost:8000/api/todos/${item.id}`).then(res => this.refreshList());\n    });\n\n    _defineProperty(this, \"createItem\", () => {\n      const item = {\n        title: \"\",\n        description: \"\",\n        completed: false\n      };\n      this.setState({\n        activeItem: item,\n        modal: !this.state.modal\n      });\n    });\n\n    _defineProperty(this, \"editItem\", item => {\n      this.setState({\n        activeItem: item,\n        modal: !this.state.modal\n      });\n    });\n\n    this.state = {\n      viewCompleted: false,\n      activeItem: {\n        title: \"\",\n        description: \"\",\n        completed: false\n      },\n      todoList: []\n    };\n  }\n\n  componentDidMount() {\n    this.refreshList();\n  }\n\n  render() {\n    return __jsx(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, __jsx(\"main\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, __jsx(\"h1\", {\n      className: \"text-white text-uppercase text-center my-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Todo app\"), __jsx(Form, {\n      enctype: \"multipart/form-data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, __jsx(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      for: \"name\",\n      class: \"col-md-3 col-sm-3 col-xs-12 control-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"File:\", \" \"), __jsx(\"div\", {\n      class: \"col-md-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      type: \"file\",\n      name: \"csv_file\",\n      id: \"csv_file\",\n      required: \"True\",\n      class: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), \">\"))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/seohyun/dataPex/front-end/pages/mlalgo.js"],"names":["React","axios","Modal","posts","path","title","Layout","Component","constructor","props","get","then","res","setState","todoList","data","catch","err","console","log","status","viewCompleted","displayCompleted","state","newItems","filter","item","completed","map","id","description","editItem","handleDelete","modal","toggle","put","refreshList","post","delete","activeItem","componentDidMount","render"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AAEA,MAAMC,KAAK,GAAG,CACZ;AAAEC,EAAAA,IAAI,EAAE,KAAR;AAAeC,EAAAA,KAAK,EAAE;AAAtB,CADY,EAEZ;AAAED,EAAAA,IAAI,EAAE,KAAR;AAAeC,EAAAA,KAAK,EAAE;AAAtB,CAFY,EAGZ;AAAED,EAAAA,IAAI,EAAE,KAAR;AAAeC,EAAAA,KAAK,EAAE;AAAtB,CAHY,EAIZ;AAAED,EAAAA,IAAI,EAAE,KAAR;AAAeC,EAAAA,KAAK,EAAE;AAAtB,CAJY,EAKZ;AAAED,EAAAA,IAAI,EAAE,MAAR;AAAgBC,EAAAA,KAAK,EAAE;AAAvB,CALY,CAAd;AAOA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,eAAe,cAAcN,KAAK,CAACO,SAApB,CAA8B;AAC3CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,yCAeL,MAAM;AAClBR,MAAAA,KAAK,CACFS,GADH,CACO,kCADP,EAEGC,IAFH,CAEQC,GAAG,IAAI,KAAKC,QAAL,CAAc;AAAEC,QAAAA,QAAQ,EAAEF,GAAG,CAACG;AAAhB,OAAd,CAFf,EAGGC,KAHH,CAGSC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAHhB;AAID,KApBkB;;AAAA,8CAqBAG,MAAM,IAAI;AAC3B,UAAIA,MAAJ,EAAY;AACV,eAAO,KAAKP,QAAL,CAAc;AAAEQ,UAAAA,aAAa,EAAE;AAAjB,SAAd,CAAP;AACD;;AACD,aAAO,KAAKR,QAAL,CAAc;AAAEQ,QAAAA,aAAa,EAAE;AAAjB,OAAd,CAAP;AACD,KA1BkB;;AAAA,2CA2BH,MAAM;AACpB,aACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,OAAO,EAAE,MAAM,KAAKC,gBAAL,CAAsB,IAAtB,CADjB;AAEE,QAAA,SAAS,EAAE,KAAKC,KAAL,CAAWF,aAAX,GAA2B,QAA3B,GAAsC,EAFnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAOE;AACE,QAAA,OAAO,EAAE,MAAM,KAAKC,gBAAL,CAAsB,KAAtB,CADjB;AAEE,QAAA,SAAS,EAAE,KAAKC,KAAL,CAAWF,aAAX,GAA2B,EAA3B,GAAgC,QAF7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPF,CADF;AAgBD,KA5CkB;;AAAA,yCA6CL,MAAM;AAClB,YAAM;AAAEA,QAAAA;AAAF,UAAoB,KAAKE,KAA/B;AACA,YAAMC,QAAQ,GAAG,KAAKD,KAAL,CAAWT,QAAX,CAAoBW,MAApB,CACfC,IAAI,IAAIA,IAAI,CAACC,SAAL,KAAmBN,aADZ,CAAjB;AAGA,aAAOG,QAAQ,CAACI,GAAT,CAAaF,IAAI,IACtB;AACE,QAAA,GAAG,EAAEA,IAAI,CAACG,EADZ;AAEE,QAAA,SAAS,EAAC,mEAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE;AACE,QAAA,SAAS,EAAG,mBACV,KAAKN,KAAL,CAAWF,aAAX,GAA2B,gBAA3B,GAA8C,EAC/C,EAHH;AAIE,QAAA,KAAK,EAAEK,IAAI,CAACI,WAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMGJ,IAAI,CAACrB,KANR,CAJF,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,OAAO,EAAE,MAAM,KAAK0B,QAAL,CAAcL,IAAd,CADjB;AAEE,QAAA,SAAS,EAAC,wBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIG,GAJH,UAKO,GALP,CADF,EAQE;AACE,QAAA,OAAO,EAAE,MAAM,KAAKM,YAAL,CAAkBN,IAAlB,CADjB;AAEE,QAAA,SAAS,EAAC,gBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAIS,GAJT,CARF,CAZF,CADK,CAAP;AA8BD,KAhFkB;;AAAA,oCAiFV,MAAM;AACb,WAAKb,QAAL,CAAc;AAAEoB,QAAAA,KAAK,EAAE,CAAC,KAAKV,KAAL,CAAWU;AAArB,OAAd;AACD,KAnFkB;;AAAA,0CAoFJP,IAAI,IAAI;AACrB,WAAKQ,MAAL;;AACA,UAAIR,IAAI,CAACG,EAAT,EAAa;AACX5B,QAAAA,KAAK,CACFkC,GADH,CACQ,mCAAkCT,IAAI,CAACG,EAAG,GADlD,EACsDH,IADtD,EAEGf,IAFH,CAEQC,GAAG,IAAI,KAAKwB,WAAL,EAFf;AAGA;AACD;;AACDnC,MAAAA,KAAK,CACFoC,IADH,CACQ,kCADR,EAC4CX,IAD5C,EAEGf,IAFH,CAEQC,GAAG,IAAI,KAAKwB,WAAL,EAFf;AAGD,KA/FkB;;AAAA,0CAgGJV,IAAI,IAAI;AACrBzB,MAAAA,KAAK,CACFqC,MADH,CACW,mCAAkCZ,IAAI,CAACG,EAAG,EADrD,EAEGlB,IAFH,CAEQC,GAAG,IAAI,KAAKwB,WAAL,EAFf;AAGD,KApGkB;;AAAA,wCAqGN,MAAM;AACjB,YAAMV,IAAI,GAAG;AAAErB,QAAAA,KAAK,EAAE,EAAT;AAAayB,QAAAA,WAAW,EAAE,EAA1B;AAA8BH,QAAAA,SAAS,EAAE;AAAzC,OAAb;AACA,WAAKd,QAAL,CAAc;AAAE0B,QAAAA,UAAU,EAAEb,IAAd;AAAoBO,QAAAA,KAAK,EAAE,CAAC,KAAKV,KAAL,CAAWU;AAAvC,OAAd;AACD,KAxGkB;;AAAA,sCAyGRP,IAAI,IAAI;AACjB,WAAKb,QAAL,CAAc;AAAE0B,QAAAA,UAAU,EAAEb,IAAd;AAAoBO,QAAAA,KAAK,EAAE,CAAC,KAAKV,KAAL,CAAWU;AAAvC,OAAd;AACD,KA3GkB;;AAEjB,SAAKV,KAAL,GAAa;AACXF,MAAAA,aAAa,EAAE,KADJ;AAEXkB,MAAAA,UAAU,EAAE;AACVlC,QAAAA,KAAK,EAAE,EADG;AAEVyB,QAAAA,WAAW,EAAE,EAFH;AAGVH,QAAAA,SAAS,EAAE;AAHD,OAFD;AAOXb,MAAAA,QAAQ,EAAE;AAPC,KAAb;AASD;;AACD0B,EAAAA,iBAAiB,GAAG;AAClB,SAAKJ,WAAL;AACD;;AA8FDK,EAAAA,MAAM,GAAG;AACP,WACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,4CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAIE,MAAC,IAAD;AAAM,MAAA,OAAO,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,KAAK,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,GAAG,EAAC,MADN;AAEE,MAAA,KAAK,EAAC,2CAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAIQ,GAJR,CADF,EAOE;AAAK,MAAA,KAAK,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,EAAE,EAAC,UAHL;AAIE,MAAA,QAAQ,EAAC,MAJX;AAKE,MAAA,KAAK,EAAC,cALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,MAPF,CADF,CADF,CAJF,CADF,CADF;AA+BD;;AA7I0C","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport Modal from \"../components/Modal\";\n\nconst posts = [\n  { path: \"nba\", title: \"Naive Bayes algorithm\" },\n  { path: \"lra\", title: \"Logistic Regression algorithm\" },\n  { path: \"svm\", title: \"Support Vector Machine algorithm\" },\n  { path: \"bag\", title: \"Bagging algorithm\" },\n  { path: \"clus\", title: \"Clustering algorithm\" }\n];\nimport Layout from \"../components/layout\";\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      viewCompleted: false,\n      activeItem: {\n        title: \"\",\n        description: \"\",\n        completed: false\n      },\n      todoList: []\n    };\n  }\n  componentDidMount() {\n    this.refreshList();\n  }\n  refreshList = () => {\n    axios\n      .get(\"http://localhost:8000/api/todos/\")\n      .then(res => this.setState({ todoList: res.data }))\n      .catch(err => console.log(err));\n  };\n  displayCompleted = status => {\n    if (status) {\n      return this.setState({ viewCompleted: true });\n    }\n    return this.setState({ viewCompleted: false });\n  };\n  renderTabList = () => {\n    return (\n      <div className=\"my-5 tab-list\">\n        <span\n          onClick={() => this.displayCompleted(true)}\n          className={this.state.viewCompleted ? \"active\" : \"\"}\n        >\n          complete\n        </span>\n        <span\n          onClick={() => this.displayCompleted(false)}\n          className={this.state.viewCompleted ? \"\" : \"active\"}\n        >\n          Incomplete\n        </span>\n      </div>\n    );\n  };\n  renderItems = () => {\n    const { viewCompleted } = this.state;\n    const newItems = this.state.todoList.filter(\n      item => item.completed === viewCompleted\n    );\n    return newItems.map(item => (\n      <li\n        key={item.id}\n        className=\"list-group-item d-flex justify-content-between align-items-center\"\n      >\n        <span\n          className={`todo-title mr-2 ${\n            this.state.viewCompleted ? \"completed-todo\" : \"\"\n          }`}\n          title={item.description}\n        >\n          {item.title}\n        </span>\n        <span>\n          <button\n            onClick={() => this.editItem(item)}\n            className=\"btn btn-secondary mr-2\"\n          >\n            {\" \"}\n            Edit{\" \"}\n          </button>\n          <button\n            onClick={() => this.handleDelete(item)}\n            className=\"btn btn-danger\"\n          >\n            Delete{\" \"}\n          </button>\n        </span>\n      </li>\n    ));\n  };\n  toggle = () => {\n    this.setState({ modal: !this.state.modal });\n  };\n  handleSubmit = item => {\n    this.toggle();\n    if (item.id) {\n      axios\n        .put(`http://localhost:8000/api/todos/${item.id}/`, item)\n        .then(res => this.refreshList());\n      return;\n    }\n    axios\n      .post(\"http://localhost:8000/api/todos/\", item)\n      .then(res => this.refreshList());\n  };\n  handleDelete = item => {\n    axios\n      .delete(`http://localhost:8000/api/todos/${item.id}`)\n      .then(res => this.refreshList());\n  };\n  createItem = () => {\n    const item = { title: \"\", description: \"\", completed: false };\n    this.setState({ activeItem: item, modal: !this.state.modal });\n  };\n  editItem = item => {\n    this.setState({ activeItem: item, modal: !this.state.modal });\n  };\n  render() {\n    return (\n      <Layout>\n        <main className=\"content\">\n          <h1 className=\"text-white text-uppercase text-center my-4\">\n            Todo app\n          </h1>\n          <Form enctype=\"multipart/form-data\">\n            <FormGroup>\n              <div class=\"form-group\">\n                <label\n                  for=\"name\"\n                  class=\"col-md-3 col-sm-3 col-xs-12 control-label\"\n                >\n                  File:{\" \"}\n                </label>\n                <div class=\"col-md-8\">\n                  <input\n                    type=\"file\"\n                    name=\"csv_file\"\n                    id=\"csv_file\"\n                    required=\"True\"\n                    class=\"form-control\"\n                  />\n                  >\n                </div>\n              </div>\n            </FormGroup>\n          </Form>\n        </main>\n      </Layout>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}