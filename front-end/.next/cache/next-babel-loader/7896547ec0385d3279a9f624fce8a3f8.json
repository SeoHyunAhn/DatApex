{"ast":null,"code":"var _jsxFileName = \"/Users/harsha.valluri/Desktop/cs407/DatApex/front-end/pages/mlalgo.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport axios from \"axios\";\nimport { Button, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Input, Label } from \"reactstrap\";\nimport UploadCSV from \"../components/Modal\";\nconst posts = [{\n  path: \"nba\",\n  title: \"Naive Bayes algorithm\"\n}, {\n  path: \"lra\",\n  title: \"Logistic Regression algorithm\"\n}, {\n  path: \"svm\",\n  title: \"Support Vector Machine algorithm\"\n}, {\n  path: \"bag\",\n  title: \"Bagging algorithm\"\n}, {\n  path: \"clus\",\n  title: \"Clustering algorithm\"\n}, {\n  path: \"tree\",\n  title: \"Decision tree algorithm\"\n}];\nimport Layout from \"../components/layout\";\nurl_to_hit = \"\";\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this); // this.fileInput = React.createRef();\n\n    this.state = {\n      imgSrc: \"\"\n    };\n    this.path = \"\";\n  }\n\n  handleSubmit(filename) {\n    console.log(\"handling submit\");\n    var formData = new FormData(); // console.log(this.fileInput.current.files[0]);\n\n    formData.append(\"file\", filename);\n    var div = document.getElementById(\"image-display\");\n    div.innerHTML = \"<Spinner animation='border' role='status'> <span className='sr-only'>Loading...</span></Spinner>\";\n    axios.post(\"http://localhost:8000/upload/csv/\", formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    }).then(e => {\n      // console.log(e);\n      var div = document.getElementById(\"image-display\");\n      div.innerText = \"\";\n      var imageOupput = \"data:image/png;base64,\" + e.data;\n      this.setState({\n        imgSrc: imageOupput\n      });\n    }).catch(err => {\n      console.log(err);\n      var div = document.getElementById(\"image-display\");\n      div.innerText = \"Please check your input and parameters\";\n    });\n  }\n\n  render() {\n    // console.log(this.props.url.asPath.substring(8));\n    this.path = this.props.url.asPath.substring(8);\n\n    if (this.path == \"nba\") {// List the params of each on of them\n    } else if (this.path == \"lra\") {// List the params of each on of them\n    } else if (this.path == \"svm\") {// List the params of each on of them\n    } else if (this.path == \"bag\") {// List the params of each on of them\n    } else if (this.path == \"clus\") {// List the params of each on of them\n    } else if (this.path == \"tree\") {// List the params of each on of them\n    }\n\n    return __jsx(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, __jsx(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, this.path), __jsx(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"col-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, __jsx(UploadCSV, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"col-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      id: \"image-display\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), __jsx(\"img\", {\n      id: \"image-output\",\n      src: this.state.imgSrc,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/harsha.valluri/Desktop/cs407/DatApex/front-end/pages/mlalgo.js"],"names":["React","axios","Button","ModalHeader","ModalBody","ModalFooter","Form","FormGroup","Input","Label","UploadCSV","posts","path","title","Layout","url_to_hit","Component","constructor","props","handleSubmit","bind","state","imgSrc","filename","console","log","formData","FormData","append","div","document","getElementById","innerHTML","post","headers","then","e","innerText","imageOupput","data","setState","catch","err","render","url","asPath","substring"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Input,\n  Label\n} from \"reactstrap\";\nimport UploadCSV from \"../components/Modal\";\nconst posts = [\n  { path: \"nba\", title: \"Naive Bayes algorithm\" },\n  { path: \"lra\", title: \"Logistic Regression algorithm\" },\n  { path: \"svm\", title: \"Support Vector Machine algorithm\" },\n  { path: \"bag\", title: \"Bagging algorithm\" },\n  { path: \"clus\", title: \"Clustering algorithm\" },\n  { path: \"tree\", title: \"Decision tree algorithm\" }\n];\nimport Layout from \"../components/layout\";\n\nurl_to_hit = \"\"\n\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    // this.fileInput = React.createRef();\n    this.state = { imgSrc: \"\" };\n    this.path = \"\";\n  }\n  handleSubmit(filename) {\n    console.log(\"handling submit\");\n    var formData = new FormData();\n    // console.log(this.fileInput.current.files[0]);\n    formData.append(\"file\", filename);\n    var div = document.getElementById(\"image-display\");\n    div.innerHTML =\n      \"<Spinner animation='border' role='status'> <span className='sr-only'>Loading...</span></Spinner>\";\n    axios\n      .post(\"http://localhost:8000/upload/csv/\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      })\n      .then(e => {\n        // console.log(e);\n\n        var div = document.getElementById(\"image-display\");\n        div.innerText = \"\";\n        var imageOupput = \"data:image/png;base64,\" + e.data;\n        this.setState({ imgSrc: imageOupput });\n      })\n      .catch(err => {\n        console.log(err);\n\n        var div = document.getElementById(\"image-display\");\n        div.innerText = \"Please check your input and parameters\";\n      });\n  }\n  render() {\n    // console.log(this.props.url.asPath.substring(8));\n    this.path = this.props.url.asPath.substring(8);\n    if (this.path == \"nba\") {\n      // List the params of each on of them\n    } else if (this.path == \"lra\") {\n      // List the params of each on of them\n    } else if (this.path == \"svm\") {\n      // List the params of each on of them\n    } else if (this.path == \"bag\") {\n      // List the params of each on of them\n    } else if (this.path == \"clus\") {\n      // List the params of each on of them\n    } else if (this.path == \"tree\") {\n      // List the params of each on of them\n    }\n    return (\n      <Layout>\n        <h1>{ this.path }</h1>\n        <hr></hr>\n        <div className=\"row\">\n          <div className=\"col-6\">\n            <UploadCSV onSubmit={this.handleSubmit}></UploadCSV>\n          </div>\n          <div className=\"col-6\">\n            <div id=\"image-display\"></div>\n            <img id=\"image-output\" src={this.state.imgSrc}></img>\n          </div>\n        </div>\n        {/* <main className=\"content\">\n          <UploadCSV onSubmit={this.handleSubmit}></UploadCSV>\n          <div id=\"image-display\"></div>\n          <img id=\"image-output\" src={this.state.imgSrc}></img>\n        </main> */}\n      </Layout>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}