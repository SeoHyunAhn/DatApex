{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/seohyun/dataPex/front-end/pages/mlalgo.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport axios from \"axios\";\nimport UploadCSV from \"../components/Modal\";\nimport firebase from \"../common/firebase\";\nvar posts = [{\n  path: \"nba\",\n  title: \"Naive Bayes algorithm\"\n}, {\n  path: \"lra\",\n  title: \"Logistic Regression algorithm\"\n}, {\n  path: \"svm\",\n  title: \"Support Vector Machine algorithm\"\n}, {\n  path: \"bag\",\n  title: \"Bagging algorithm\"\n}, {\n  path: \"clus\",\n  title: \"Clustering algorithm\"\n}, {\n  path: \"tree\",\n  title: \"Decision tree algorithm\"\n}];\nimport Layout from \"../components/layout\";\nvar backend_url = \"\";\n\nvar _default =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(_default, _React$Component);\n\n  _createClass(_default, null, [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(_ref) {\n        var query, res, post;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                query = _ref.query, res = _ref.res;\n                post = posts.find(function (post) {\n                  return post.path == query.path;\n                });\n                console.log(post);\n                return _context.abrupt(\"return\", {\n                  post: post\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  function _default(props) {\n    var _this;\n\n    _classCallCheck(this, _default);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(_default).call(this, props)); // alert(\"ctor : \" + this.props.location);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleUpload\", function () {\n      var imgSrc = _this.state.imgSrc;\n\n      var message = _this.state.imgSrc.substring(22);\n\n      var storage = firebase.storage().ref();\n      var user = firebase.auth().currentUser.uid;\n      var tempDate = new Date();\n      var date = tempDate.getFullYear() + \"-\" + (tempDate.getMonth() + 1) + \"-\" + tempDate.getDate() + \" \" + tempDate.getHours() + \":\" + tempDate.getMinutes() + \":\" + tempDate.getSeconds();\n      var imgName = user + \"/\" + date + \"_ML_image.png\";\n      var uploadTastk = firebase.storage().ref().child(imgName).putString(message, \"base64\", {\n        contentType: \"image/png\"\n      });\n      uploadTastk.then(function (response) {\n        console.log(\"image upload success\");\n        var saveButton = document.getElementById(\"save-button\");\n        saveButton.innerText = \"ALL SAVED!\";\n      }, function (failedReason) {\n        console.log(\"image upload failed\");\n      });\n    });\n\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    _this.state = {\n      imgSrc: \"\",\n      url: \"\",\n      isImageReady: false,\n      sos: \"\",\n      lambda: \"\",\n      maxit: \"\",\n      depthlimit: \"\",\n      exlimit: \"\",\n      k: \"\"\n    };\n    _this.path = \"\";\n    return _this;\n  }\n\n  _createClass(_default, [{\n    key: \"onChange\",\n    value: function onChange(event) {\n      console.log(event.target.name);\n      var param = event.target.name;\n      this.setState(_defineProperty({}, event.target.name, event.target.value));\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(filename) {\n      var _this2 = this;\n\n      console.log(\"handling submit\");\n      var formData = new FormData(); // console.log(this.fileInput.current.files[0]);\n\n      formData.append(\"file\", filename);\n      var div = document.getElementById(\"image-display\");\n      div.innerHTML = \"<Spinner animation='border' role='status'> <span className='sr-only'>Loading...</span></Spinner>\";\n\n      if (this.path == \"nba\") {\n        backend_url = \"http://localhost:8000/dataMining/NaiveBayes/\";\n      } else if (this.path == \"lra\") {\n        backend_url = \"http://localhost:8000/dataMining/LogisticRegression/\";\n        backend_url = backend_url + this.state.sos + \"/\" + this.state.lambda + \"/\" + this.state.maxit;\n        console.log(backend_url);\n      } else if (this.path == \"svm\") {\n        backend_url = \"http://localhost:8000/dataMining/SVM/\";\n        backend_url = backend_url + this.state.sos + \"/\" + this.state.lambda + \"/\" + this.state.maxit;\n        console.log(backend_url);\n      } else if (this.path == \"bag\") {\n        backend_url = \"http://localhost:8000/dataMining/Bagging/\";\n        backend_url = backend_url + this.state.depthlimit + \"/\" + this.state.exlimit;\n        console.log(backend_url);\n      } else if (this.path == \"clus\") {\n        backend_url = \"http://localhost:8000/dataMining/Clustering/\";\n        backend_url = backend_url + this.state.k;\n        console.log(backend_url);\n      } else if (this.path == \"tree\") {\n        backend_url = \"http://localhost:8000/dataMining/DecisionTree/\";\n        backend_url = backend_url + this.state.depthlimit + \"/\" + this.state.exlimit;\n        console.log(backend_url);\n      }\n\n      axios.post(backend_url, formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }).then(function (e) {\n        // console.log(e);\n        var div = document.getElementById(\"image-display\");\n        div.innerText = \"\";\n        var imageOupput = \"data:image/png;base64,\" + e.data;\n\n        _this2.setState({\n          imgSrc: imageOupput,\n          isImageReady: true\n        });\n      })[\"catch\"](function (err) {\n        console.log(err);\n        var div = document.getElementById(\"image-display\");\n        div.innerText = \"Please check your input and parameters\";\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // console.log(this.props.path);\n      // this.path = this.props.url.asPath.substring(8);\n      // const post = posts.find(p => p.path == this.path);\n      var post = this.props.post; // console.log(post)\n\n      this.path = post.path;\n\n      if (this.path == \"nba\") {\n        return __jsx(React.Fragment, null, __jsx(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168\n          },\n          __self: this\n        }, post.title), __jsx(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169\n          },\n          __self: this\n        }), __jsx(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: \"col-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }, __jsx(UploadCSV, {\n          onSubmit: this.handleSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172\n          },\n          __self: this\n        })), __jsx(\"div\", {\n          className: \"col-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          },\n          __self: this\n        }, this.state.isImageReady ? __jsx(React.Fragment, null, __jsx(\"div\", {\n          className: \"text-right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177\n          },\n          __self: this\n        }, __jsx(\"button\", {\n          id: \"save-button\",\n          className: \"btn btn-secondary btn-sm\",\n          onClick: this.handleUpload,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178\n          },\n          __self: this\n        }, \" \", \"Save\", \" \"))) : __jsx(React.Fragment, null), __jsx(\"div\", {\n          id: \"image-display\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191\n          },\n          __self: this\n        }), __jsx(\"img\", {\n          id: \"image-output\",\n          src: this.state.imgSrc,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192\n          },\n          __self: this\n        }))));\n      } else if (this.path == \"lra\") {\n        return __jsx(React.Fragment, null, __jsx(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200\n          },\n          __self: this\n        }, post.title), __jsx(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201\n          },\n          __self: this\n        }), __jsx(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: \"col-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203\n          },\n          __self: this\n        }, __jsx(\"form\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: \"form-group row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205\n          },\n          __self: this\n        }, __jsx(\"label\", {\n          className: \"col-sm-2 col-form-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206\n          },\n          __self: this\n        }, \" \", \"Size of Step:\", \" \"), __jsx(\"div\", {\n          className: \"col-sm-10\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210\n          },\n          __self: this\n        }, __jsx(\"input\", {\n          className: \"form-control\",\n          placeholder: \"1,2,3\",\n          type: \"text\",\n          name: \"sos\",\n          onChange: this.onChange.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211\n          },\n          __self: this\n        })), __jsx(\"label\", {\n          className: \"col-sm-2 col-form-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219\n          },\n          __self: this\n        }, \" Lambda: \"), __jsx(\"div\", {\n          className: \"col-sm-10\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220\n          },\n          __self: this\n        }, __jsx(\"input\", {\n          className: \"form-control\",\n          placeholder: \"1,2,3\",\n          type: \"text\",\n          name: \"lambda\",\n          onChange: this.onChange.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221\n          },\n          __self: this\n        })), __jsx(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229\n          },\n          __self: this\n        }), __jsx(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230\n          },\n          __self: this\n        }), __jsx(\"label\", {\n          className: \"col-sm-2 col-form-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231\n          },\n          __self: this\n        }, \" \", \"Number of Max iteration:\", \" \"), __jsx(\"div\", {\n          className: \"col-sm-10\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235\n          },\n          __self: this\n        }, __jsx(\"input\", {\n          className: \"form-control\",\n          placeholder: \"1,2,3\",\n          type: \"text\",\n          name: \"maxit\",\n          onChange: this.onChange.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236\n          },\n          __self: this\n        }))), __jsx(UploadCSV, {\n          onSubmit: this.handleSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 245\n          },\n          __self: this\n        }))), __jsx(\"div\", {\n          className: \"col-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 248\n          },\n          __self: this\n        }, this.state.isImageReady ? __jsx(React.Fragment, null, __jsx(\"div\", {\n          className: \"text-right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 251\n          },\n          __self: this\n        }, __jsx(\"button\", {\n          id: \"save-button\",\n          className: \"btn btn-secondary btn-sm\",\n          onClick: this.handleUpload,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 252\n          },\n          __self: this\n        }, \" \", \"Save\", \" \"))) : __jsx(React.Fragment, null), __jsx(\"div\", {\n          id: \"image-display\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 265\n          },\n          __self: this\n        }), __jsx(\"img\", {\n          id: \"image-output\",\n          src: this.state.imgSrc,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 266\n          },\n          __self: this\n        }))));\n      } else if (this.path == \"svm\") {\n        return __jsx(React.Fragment, null, __jsx(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 274\n          },\n          __self: this\n        }, post.title), __jsx(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 275\n          },\n          __self: this\n        }), __jsx(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 276\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: \"col-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 277\n          },\n          __self: this\n        }, __jsx(\"form\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 278\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: \"form-group row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 279\n          },\n          __self: this\n        }, __jsx(\"label\", {\n          className: \"col-sm-2 col-form-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 280\n          },\n          __self: this\n        }, \" \", \"Size of Step:\", \" \"), __jsx(\"div\", {\n          className: \"col-sm-10\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284\n          },\n          __self: this\n        }, __jsx(\"input\", {\n          className: \"form-control\",\n          placeholder: \"1,2,3\",\n          type: \"text\",\n          name: \"sos\",\n          onChange: this.onChange.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 285\n          },\n          __self: this\n        })), __jsx(\"label\", {\n          className: \"col-sm-2 col-form-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 293\n          },\n          __self: this\n        }, \" Lambda: \"), __jsx(\"div\", {\n          className: \"col-sm-10\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 294\n          },\n          __self: this\n        }, __jsx(\"input\", {\n          className: \"form-control\",\n          placeholder: \"1,2,3\",\n          type: \"text\",\n          name: \"lambda\",\n          onChange: this.onChange.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 295\n          },\n          __self: this\n        })), __jsx(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 303\n          },\n          __self: this\n        }), __jsx(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 304\n          },\n          __self: this\n        }), __jsx(\"label\", {\n          className: \"col-sm-2 col-form-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 305\n          },\n          __self: this\n        }, \" \", \"Number of Max iteration:\", \" \"), __jsx(\"div\", {\n          className: \"col-sm-10\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 309\n          },\n          __self: this\n        }, __jsx(\"input\", {\n          className: \"form-control\",\n          placeholder: \"1,2,3\",\n          type: \"text\",\n          name: \"maxit\",\n          onChange: this.onChange.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 310\n          },\n          __self: this\n        }))), __jsx(UploadCSV, {\n          onSubmit: this.handleSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 319\n          },\n          __self: this\n        }))), __jsx(\"div\", {\n          className: \"col-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 322\n          },\n          __self: this\n        }, this.state.isImageReady ? __jsx(React.Fragment, null, __jsx(\"div\", {\n          className: \"text-right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 325\n          },\n          __self: this\n        }, __jsx(\"button\", {\n          id: \"save-button\",\n          className: \"btn btn-secondary btn-sm\",\n          onClick: this.handleUpload,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 326\n          },\n          __self: this\n        }, \" \", \"Save\", \" \"))) : __jsx(React.Fragment, null), __jsx(\"div\", {\n          id: \"image-display\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 339\n          },\n          __self: this\n        }), __jsx(\"img\", {\n          id: \"image-output\",\n          src: this.state.imgSrc,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 340\n          },\n          __self: this\n        })))); // List the params of each on of them\n      } else if (this.path == \"bag\") {\n        return __jsx(React.Fragment, null, __jsx(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 349\n          },\n          __self: this\n        }, post.title), __jsx(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 350\n          },\n          __self: this\n        }), __jsx(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 351\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: \"col-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 352\n          },\n          __self: this\n        }, __jsx(\"form\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 353\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: \"form-group row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 354\n          },\n          __self: this\n        }, __jsx(\"label\", {\n          className: \"col-sm-2 col-form-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 355\n          },\n          __self: this\n        }, \" \", \"Depth limit:\", \" \"), __jsx(\"div\", {\n          className: \"col-sm-10\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 359\n          },\n          __self: this\n        }, __jsx(\"input\", {\n          className: \"form-control\",\n          placeholder: \"3\",\n          type: \"text\",\n          name: \"depthlimit\",\n          onChange: this.onChange.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 360\n          },\n          __self: this\n        })), __jsx(\"label\", {\n          className: \"col-sm-2 col-form-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 368\n          },\n          __self: this\n        }, \" \", \"Example Limit:\", \" \"), __jsx(\"div\", {\n          className: \"col-sm-10\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 372\n          },\n          __self: this\n        }, __jsx(\"input\", {\n          className: \"form-control\",\n          placeholder: \"3\",\n          type: \"text\",\n          name: \"exlimit\",\n          onChange: this.onChange.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 373\n          },\n          __self: this\n        }))), __jsx(UploadCSV, {\n          onSubmit: this.handleSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 382\n          },\n          __self: this\n        }))), __jsx(\"div\", {\n          className: \"col-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 385\n          },\n          __self: this\n        }, this.state.isImageReady ? __jsx(React.Fragment, null, __jsx(\"div\", {\n          className: \"text-right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 388\n          },\n          __self: this\n        }, __jsx(\"button\", {\n          id: \"save-button\",\n          className: \"btn btn-secondary btn-sm\",\n          onClick: this.handleUpload,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 389\n          },\n          __self: this\n        }, \" \", \"Save\", \" \"))) : __jsx(React.Fragment, null), __jsx(\"div\", {\n          id: \"image-display\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 402\n          },\n          __self: this\n        }), __jsx(\"img\", {\n          id: \"image-output\",\n          src: this.state.imgSrc,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 403\n          },\n          __self: this\n        }))));\n      } else if (this.path == \"clus\") {\n        return __jsx(React.Fragment, null, __jsx(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 411\n          },\n          __self: this\n        }, post.title), __jsx(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 412\n          },\n          __self: this\n        }), __jsx(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 413\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: \"col-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 414\n          },\n          __self: this\n        }, __jsx(\"form\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 415\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: \"form-group row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 416\n          },\n          __self: this\n        }, __jsx(\"label\", {\n          className: \"col-sm-2 col-form-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 417\n          },\n          __self: this\n        }, \" \", \"Number of Cluster:\", \" \"), __jsx(\"div\", {\n          className: \"col-sm-10\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 421\n          },\n          __self: this\n        }, __jsx(\"input\", {\n          className: \"form-control\",\n          placeholder: \"3\",\n          type: \"text\",\n          name: \"k\",\n          onChange: this.onChange.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 422\n          },\n          __self: this\n        }))), __jsx(UploadCSV, {\n          onSubmit: this.handleSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 431\n          },\n          __self: this\n        }))), __jsx(\"div\", {\n          className: \"col-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 434\n          },\n          __self: this\n        }, this.state.isImageReady ? __jsx(React.Fragment, null, __jsx(\"div\", {\n          className: \"text-right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 437\n          },\n          __self: this\n        }, __jsx(\"button\", {\n          id: \"save-button\",\n          className: \"btn btn-secondary btn-sm\",\n          onClick: this.handleUpload,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 438\n          },\n          __self: this\n        }, \" \", \"Save\", \" \"))) : __jsx(React.Fragment, null), __jsx(\"div\", {\n          id: \"image-display\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 451\n          },\n          __self: this\n        }), __jsx(\"img\", {\n          id: \"image-output\",\n          src: this.state.imgSrc,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 452\n          },\n          __self: this\n        }))));\n      } else if (this.path == \"tree\") {\n        return __jsx(React.Fragment, null, __jsx(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 460\n          },\n          __self: this\n        }, post.title), __jsx(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 461\n          },\n          __self: this\n        }), __jsx(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 462\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: \"col-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 463\n          },\n          __self: this\n        }, __jsx(\"form\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 464\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: \"form-group row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 465\n          },\n          __self: this\n        }, __jsx(\"label\", {\n          className: \"col-sm-2 col-form-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 466\n          },\n          __self: this\n        }, \" \", \"Depth limit:\", \" \"), __jsx(\"div\", {\n          className: \"col-sm-10\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 470\n          },\n          __self: this\n        }, __jsx(\"input\", {\n          className: \"form-control\",\n          placeholder: \"3\",\n          type: \"text\",\n          name: \"depthlimit\",\n          onChange: this.onChange.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 471\n          },\n          __self: this\n        })), __jsx(\"label\", {\n          className: \"col-sm-2 col-form-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 479\n          },\n          __self: this\n        }, \" \", \"Example Limit:\", \" \"), __jsx(\"div\", {\n          className: \"col-sm-10\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 483\n          },\n          __self: this\n        }, __jsx(\"input\", {\n          className: \"form-control\",\n          placeholder: \"3\",\n          type: \"text\",\n          name: \"exlimit\",\n          onChange: this.onChange.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 484\n          },\n          __self: this\n        }))), __jsx(UploadCSV, {\n          onSubmit: this.handleSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 493\n          },\n          __self: this\n        }))), __jsx(\"div\", {\n          className: \"col-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 496\n          },\n          __self: this\n        }, this.state.isImageReady ? __jsx(React.Fragment, null, __jsx(\"div\", {\n          className: \"text-right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 499\n          },\n          __self: this\n        }, __jsx(\"button\", {\n          id: \"save-button\",\n          className: \"btn btn-secondary btn-sm\",\n          onClick: this.handleUpload,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 500\n          },\n          __self: this\n        }, \" \", \"Save\", \" \"))) : __jsx(React.Fragment, null), __jsx(\"div\", {\n          id: \"image-display\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 513\n          },\n          __self: this\n        }), __jsx(\"img\", {\n          id: \"image-output\",\n          src: this.state.imgSrc,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 514\n          },\n          __self: this\n        }))));\n      }\n\n      return __jsx(React.Fragment, null, __jsx(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 522\n        },\n        __self: this\n      }, post.title), __jsx(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 523\n        },\n        __self: this\n      }), __jsx(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 524\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"col-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 525\n        },\n        __self: this\n      }, __jsx(UploadCSV, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 526\n        },\n        __self: this\n      })), __jsx(\"div\", {\n        className: \"col-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 528\n        },\n        __self: this\n      }, this.state.isImageReady ? __jsx(React.Fragment, null, __jsx(\"div\", {\n        className: \"text-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 531\n        },\n        __self: this\n      }, __jsx(\"button\", {\n        id: \"save-button\",\n        className: \"btn btn-secondary btn-sm\",\n        onClick: this.handleUpload,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 532\n        },\n        __self: this\n      }, \" \", \"Save\", \" \"))) : __jsx(React.Fragment, null), __jsx(\"div\", {\n        id: \"image-display\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 545\n        },\n        __self: this\n      }), __jsx(\"img\", {\n        id: \"image-output\",\n        src: this.state.imgSrc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 546\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return _default;\n}(React.Component);\n\nexport { _default as default };","map":{"version":3,"sources":["/Users/seohyun/dataPex/front-end/pages/mlalgo.js"],"names":["React","axios","UploadCSV","firebase","posts","path","title","Layout","backend_url","query","res","post","find","console","log","props","imgSrc","state","message","substring","storage","ref","user","auth","currentUser","uid","tempDate","Date","date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","imgName","uploadTastk","child","putString","contentType","then","response","saveButton","document","getElementById","innerText","failedReason","handleSubmit","bind","url","isImageReady","sos","lambda","maxit","depthlimit","exlimit","k","event","target","name","param","setState","value","filename","formData","FormData","append","div","innerHTML","headers","e","imageOupput","data","err","handleUpload","onChange","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport UploadCSV from \"../components/Modal\";\nimport firebase from \"../common/firebase\";\n\nconst posts = [\n  { path: \"nba\", title: \"Naive Bayes algorithm\" },\n  { path: \"lra\", title: \"Logistic Regression algorithm\" },\n  { path: \"svm\", title: \"Support Vector Machine algorithm\" },\n  { path: \"bag\", title: \"Bagging algorithm\" },\n  { path: \"clus\", title: \"Clustering algorithm\" },\n  { path: \"tree\", title: \"Decision tree algorithm\" }\n];\nimport Layout from \"../components/layout\";\n\nvar backend_url = \"\";\n\nexport default class extends React.Component {\n  static async getInitialProps({ query, res }) {\n    const post = posts.find(post => post.path == query.path);\n    console.log(post);\n    return { post };\n  }\n\n  constructor(props) {\n    super(props);\n\n    // alert(\"ctor : \" + this.props.location);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.state = {\n      imgSrc: \"\",\n      url: \"\",\n      isImageReady: false,\n      sos: \"\",\n      lambda: \"\",\n      maxit: \"\",\n      depthlimit: \"\",\n      exlimit: \"\",\n      k: \"\"\n    };\n    this.path = \"\";\n  }\n\n  onChange(event) {\n    console.log(event.target.name);\n    var param = event.target.name;\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  handleSubmit(filename) {\n    console.log(\"handling submit\");\n    var formData = new FormData();\n    // console.log(this.fileInput.current.files[0]);\n    formData.append(\"file\", filename);\n    var div = document.getElementById(\"image-display\");\n    div.innerHTML =\n      \"<Spinner animation='border' role='status'> <span className='sr-only'>Loading...</span></Spinner>\";\n    if (this.path == \"nba\") {\n      backend_url = \"http://localhost:8000/dataMining/NaiveBayes/\";\n    } else if (this.path == \"lra\") {\n      backend_url = \"http://localhost:8000/dataMining/LogisticRegression/\";\n      backend_url =\n        backend_url +\n        this.state.sos +\n        \"/\" +\n        this.state.lambda +\n        \"/\" +\n        this.state.maxit;\n      console.log(backend_url);\n    } else if (this.path == \"svm\") {\n      backend_url = \"http://localhost:8000/dataMining/SVM/\";\n      backend_url =\n        backend_url +\n        this.state.sos +\n        \"/\" +\n        this.state.lambda +\n        \"/\" +\n        this.state.maxit;\n      console.log(backend_url);\n    } else if (this.path == \"bag\") {\n      backend_url = \"http://localhost:8000/dataMining/Bagging/\";\n      backend_url =\n        backend_url + this.state.depthlimit + \"/\" + this.state.exlimit;\n      console.log(backend_url);\n    } else if (this.path == \"clus\") {\n      backend_url = \"http://localhost:8000/dataMining/Clustering/\";\n      backend_url = backend_url + this.state.k;\n      console.log(backend_url);\n    } else if (this.path == \"tree\") {\n      backend_url = \"http://localhost:8000/dataMining/DecisionTree/\";\n      backend_url =\n        backend_url + this.state.depthlimit + \"/\" + this.state.exlimit;\n      console.log(backend_url);\n    }\n    axios\n      .post(backend_url, formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      })\n      .then(e => {\n        // console.log(e);\n\n        var div = document.getElementById(\"image-display\");\n        div.innerText = \"\";\n        var imageOupput = \"data:image/png;base64,\" + e.data;\n        this.setState({\n          imgSrc: imageOupput,\n          isImageReady: true\n        });\n      })\n      .catch(err => {\n        console.log(err);\n\n        var div = document.getElementById(\"image-display\");\n        div.innerText = \"Please check your input and parameters\";\n      });\n  }\n\n  handleUpload = () => {\n    const { imgSrc } = this.state;\n    \n    let message = this.state.imgSrc.substring(22);\n    const storage = firebase.storage().ref();\n    const user = firebase.auth().currentUser.uid;\n    var tempDate = new Date();\n    var date =\n      tempDate.getFullYear() +\n      \"-\" +\n      (tempDate.getMonth() + 1) +\n      \"-\" +\n      tempDate.getDate() +\n      \" \" +\n      tempDate.getHours() +\n      \":\" +\n      tempDate.getMinutes() +\n      \":\" +\n      tempDate.getSeconds();\n\n    var imgName = user + \"/\" + date + \"_ML_image.png\";\n    const uploadTastk = firebase\n      .storage()\n      .ref()\n      .child(imgName)\n      .putString(message, \"base64\", { contentType: \"image/png\" });\n    uploadTastk.then(\n      response => {\n        console.log(\"image upload success\");\n        var saveButton = document.getElementById(\"save-button\");\n        saveButton.innerText = \"ALL SAVED!\";\n      },\n      failedReason => {\n        console.log(\"image upload failed\");\n      }\n    );\n  };\n\n  render() {\n    // console.log(this.props.path);\n    // this.path = this.props.url.asPath.substring(8);\n    // const post = posts.find(p => p.path == this.path);\n    const { post } = this.props;\n    // console.log(post)\n    this.path = post.path;\n    if (this.path == \"nba\") {\n      return (\n        <>\n          <h1>{post.title}</h1>\n          <hr></hr>\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <UploadCSV onSubmit={this.handleSubmit}></UploadCSV>\n            </div>\n            <div className=\"col-6\">\n              {this.state.isImageReady ? (\n                <>\n                  <div className=\"text-right\">\n                    <button\n                      id=\"save-button\"\n                      className=\"btn btn-secondary btn-sm\"\n                      onClick={this.handleUpload}\n                    >\n                      {\" \"}\n                      Save{\" \"}\n                    </button>\n                  </div>\n                </>\n              ) : (\n                <></>\n              )}\n              <div id=\"image-display\"></div>\n              <img id=\"image-output\" src={this.state.imgSrc}></img>\n            </div>\n          </div>\n        </>\n      );\n    } else if (this.path == \"lra\") {\n      return (\n        <>\n          <h1>{post.title}</h1>\n          <hr></hr>\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <form>\n                <div className=\"form-group row\">\n                  <label className=\"col-sm-2 col-form-label\">\n                    {\" \"}\n                    Size of Step:{\" \"}\n                  </label>\n                  <div className=\"col-sm-10\">\n                    <input\n                      className=\"form-control\"\n                      placeholder=\"1,2,3\"\n                      type=\"text\"\n                      name=\"sos\"\n                      onChange={this.onChange.bind(this)}\n                    />\n                  </div>\n                  <label className=\"col-sm-2 col-form-label\"> Lambda: </label>\n                  <div className=\"col-sm-10\">\n                    <input\n                      className=\"form-control\"\n                      placeholder=\"1,2,3\"\n                      type=\"text\"\n                      name=\"lambda\"\n                      onChange={this.onChange.bind(this)}\n                    />\n                  </div>\n                  <br />\n                  <br />\n                  <label className=\"col-sm-2 col-form-label\">\n                    {\" \"}\n                    Number of Max iteration:{\" \"}\n                  </label>\n                  <div className=\"col-sm-10\">\n                    <input\n                      className=\"form-control\"\n                      placeholder=\"1,2,3\"\n                      type=\"text\"\n                      name=\"maxit\"\n                      onChange={this.onChange.bind(this)}\n                    />\n                  </div>\n                </div>\n                <UploadCSV onSubmit={this.handleSubmit}></UploadCSV>\n              </form>\n            </div>\n            <div className=\"col-6\">\n              {this.state.isImageReady ? (\n                <>\n                  <div className=\"text-right\">\n                    <button\n                      id=\"save-button\"\n                      className=\"btn btn-secondary btn-sm\"\n                      onClick={this.handleUpload}\n                    >\n                      {\" \"}\n                      Save{\" \"}\n                    </button>\n                  </div>\n                </>\n              ) : (\n                <></>\n              )}\n              <div id=\"image-display\"></div>\n              <img id=\"image-output\" src={this.state.imgSrc}></img>\n            </div>\n          </div>\n        </>\n      );\n    } else if (this.path == \"svm\") {\n      return (\n        <>\n          <h1>{post.title}</h1>\n          <hr></hr>\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <form>\n                <div className=\"form-group row\">\n                  <label className=\"col-sm-2 col-form-label\">\n                    {\" \"}\n                    Size of Step:{\" \"}\n                  </label>\n                  <div className=\"col-sm-10\">\n                    <input\n                      className=\"form-control\"\n                      placeholder=\"1,2,3\"\n                      type=\"text\"\n                      name=\"sos\"\n                      onChange={this.onChange.bind(this)}\n                    />\n                  </div>\n                  <label className=\"col-sm-2 col-form-label\"> Lambda: </label>\n                  <div className=\"col-sm-10\">\n                    <input\n                      className=\"form-control\"\n                      placeholder=\"1,2,3\"\n                      type=\"text\"\n                      name=\"lambda\"\n                      onChange={this.onChange.bind(this)}\n                    />\n                  </div>\n                  <br />\n                  <br />\n                  <label className=\"col-sm-2 col-form-label\">\n                    {\" \"}\n                    Number of Max iteration:{\" \"}\n                  </label>\n                  <div className=\"col-sm-10\">\n                    <input\n                      className=\"form-control\"\n                      placeholder=\"1,2,3\"\n                      type=\"text\"\n                      name=\"maxit\"\n                      onChange={this.onChange.bind(this)}\n                    />\n                  </div>\n                </div>\n                <UploadCSV onSubmit={this.handleSubmit}></UploadCSV>\n              </form>\n            </div>\n            <div className=\"col-6\">\n              {this.state.isImageReady ? (\n                <>\n                  <div className=\"text-right\">\n                    <button\n                      id=\"save-button\"\n                      className=\"btn btn-secondary btn-sm\"\n                      onClick={this.handleUpload}\n                    >\n                      {\" \"}\n                      Save{\" \"}\n                    </button>\n                  </div>\n                </>\n              ) : (\n                <></>\n              )}\n              <div id=\"image-display\"></div>\n              <img id=\"image-output\" src={this.state.imgSrc}></img>\n            </div>\n          </div>\n        </>\n      );\n      // List the params of each on of them\n    } else if (this.path == \"bag\") {\n      return (\n        <>\n          <h1>{post.title}</h1>\n          <hr></hr>\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <form>\n                <div className=\"form-group row\">\n                  <label className=\"col-sm-2 col-form-label\">\n                    {\" \"}\n                    Depth limit:{\" \"}\n                  </label>\n                  <div className=\"col-sm-10\">\n                    <input\n                      className=\"form-control\"\n                      placeholder=\"3\"\n                      type=\"text\"\n                      name=\"depthlimit\"\n                      onChange={this.onChange.bind(this)}\n                    />\n                  </div>\n                  <label className=\"col-sm-2 col-form-label\">\n                    {\" \"}\n                    Example Limit:{\" \"}\n                  </label>\n                  <div className=\"col-sm-10\">\n                    <input\n                      className=\"form-control\"\n                      placeholder=\"3\"\n                      type=\"text\"\n                      name=\"exlimit\"\n                      onChange={this.onChange.bind(this)}\n                    />\n                  </div>\n                </div>\n                <UploadCSV onSubmit={this.handleSubmit}></UploadCSV>\n              </form>\n            </div>\n            <div className=\"col-6\">\n              {this.state.isImageReady ? (\n                <>\n                  <div className=\"text-right\">\n                    <button\n                      id=\"save-button\"\n                      className=\"btn btn-secondary btn-sm\"\n                      onClick={this.handleUpload}\n                    >\n                      {\" \"}\n                      Save{\" \"}\n                    </button>\n                  </div>\n                </>\n              ) : (\n                <></>\n              )}\n              <div id=\"image-display\"></div>\n              <img id=\"image-output\" src={this.state.imgSrc}></img>\n            </div>\n          </div>\n        </>\n      );\n    } else if (this.path == \"clus\") {\n      return (\n        <>\n          <h1>{post.title}</h1>\n          <hr></hr>\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <form>\n                <div className=\"form-group row\">\n                  <label className=\"col-sm-2 col-form-label\">\n                    {\" \"}\n                    Number of Cluster:{\" \"}\n                  </label>\n                  <div className=\"col-sm-10\">\n                    <input\n                      className=\"form-control\"\n                      placeholder=\"3\"\n                      type=\"text\"\n                      name=\"k\"\n                      onChange={this.onChange.bind(this)}\n                    />\n                  </div>\n                </div>\n                <UploadCSV onSubmit={this.handleSubmit}></UploadCSV>\n              </form>\n            </div>\n            <div className=\"col-6\">\n              {this.state.isImageReady ? (\n                <>\n                  <div className=\"text-right\">\n                    <button\n                      id=\"save-button\"\n                      className=\"btn btn-secondary btn-sm\"\n                      onClick={this.handleUpload}\n                    >\n                      {\" \"}\n                      Save{\" \"}\n                    </button>\n                  </div>\n                </>\n              ) : (\n                <></>\n              )}\n              <div id=\"image-display\"></div>\n              <img id=\"image-output\" src={this.state.imgSrc}></img>\n            </div>\n          </div>\n        </>\n      );\n    } else if (this.path == \"tree\") {\n      return (\n        <>\n          <h1>{post.title}</h1>\n          <hr></hr>\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <form>\n                <div className=\"form-group row\">\n                  <label className=\"col-sm-2 col-form-label\">\n                    {\" \"}\n                    Depth limit:{\" \"}\n                  </label>\n                  <div className=\"col-sm-10\">\n                    <input\n                      className=\"form-control\"\n                      placeholder=\"3\"\n                      type=\"text\"\n                      name=\"depthlimit\"\n                      onChange={this.onChange.bind(this)}\n                    />\n                  </div>\n                  <label className=\"col-sm-2 col-form-label\">\n                    {\" \"}\n                    Example Limit:{\" \"}\n                  </label>\n                  <div className=\"col-sm-10\">\n                    <input\n                      className=\"form-control\"\n                      placeholder=\"3\"\n                      type=\"text\"\n                      name=\"exlimit\"\n                      onChange={this.onChange.bind(this)}\n                    />\n                  </div>\n                </div>\n                <UploadCSV onSubmit={this.handleSubmit}></UploadCSV>\n              </form>\n            </div>\n            <div className=\"col-6\">\n              {this.state.isImageReady ? (\n                <>\n                  <div className=\"text-right\">\n                    <button\n                      id=\"save-button\"\n                      className=\"btn btn-secondary btn-sm\"\n                      onClick={this.handleUpload}\n                    >\n                      {\" \"}\n                      Save{\" \"}\n                    </button>\n                  </div>\n                </>\n              ) : (\n                <></>\n              )}\n              <div id=\"image-display\"></div>\n              <img id=\"image-output\" src={this.state.imgSrc}></img>\n            </div>\n          </div>\n        </>\n      );\n    }\n    return (\n      <>\n        <h1>{post.title}</h1>\n        <hr></hr>\n        <div className=\"row\">\n          <div className=\"col-6\">\n            <UploadCSV onSubmit={this.handleSubmit}></UploadCSV>\n          </div>\n          <div className=\"col-6\">\n            {this.state.isImageReady ? (\n              <>\n                <div className=\"text-right\">\n                  <button\n                    id=\"save-button\"\n                    className=\"btn btn-secondary btn-sm\"\n                    onClick={this.handleUpload}\n                  >\n                    {\" \"}\n                    Save{\" \"}\n                  </button>\n                </div>\n              </>\n            ) : (\n              <></>\n            )}\n            <div id=\"image-display\"></div>\n            <img id=\"image-output\" src={this.state.imgSrc}></img>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}