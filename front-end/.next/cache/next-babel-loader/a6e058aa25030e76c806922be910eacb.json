{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/seohyun/dataPex/front-end/pages/mlalgo.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport axios from \"axios\";\nimport UploadCSV from \"../components/Modal\";\nimport firebase from \"../common/firebase\";\nconst posts = [{\n  path: \"nba\",\n  title: \"Naive Bayes algorithm\"\n}, {\n  path: \"lra\",\n  title: \"Logistic Regression algorithm\"\n}, {\n  path: \"svm\",\n  title: \"Support Vector Machine algorithm\"\n}, {\n  path: \"bag\",\n  title: \"Bagging algorithm\"\n}, {\n  path: \"clus\",\n  title: \"Clustering algorithm\"\n}, {\n  path: \"tree\",\n  title: \"Decision tree algorithm\"\n}];\nimport Layout from \"../components/layout\";\nvar backend_url = \"\";\nexport default class extends React.Component {\n  static async getInitialProps({\n    query,\n    res\n  }) {\n    const post = posts.find(post => post.path == query.path);\n    console.log(post);\n    return {\n      post\n    };\n  }\n\n  constructor(props) {\n    super(props); // alert(\"ctor : \" + this.props.location);\n\n    _defineProperty(this, \"handleUpload\", () => {\n      const {\n        imgSrc\n      } = this.state;\n      let message = this.state.imgSrc.substring(22); // console.log(this.state.imgSrc);\n      // console.log(message);\n\n      const storage = firebase.storage().ref();\n      const user = firebase.auth().currentUser.uid;\n      var tempDate = new Date();\n      var date = tempDate.getFullYear() + \" \" + (tempDate.getMonth() + 1) + \" \" + tempDate.getDate() + \" \" + tempDate.getHours() + \":\" + tempDate.getMinutes() + \":\" + tempDate.getSeconds();\n      var imgName = user + \"/\" + date + \"_ML_image.png\";\n      const uploadTastk = firebase.storage().ref().child(imgName).putString(message, \"base64\", {\n        contentType: \"image/png\"\n      });\n      uploadTastk.then(response => {\n        console.log(\"image upload success\");\n        var saveButton = document.getElementsByClassName('btn btn-secondary btn-sm');\n        saveButton.innerText = 'SAVED!';\n      }, failedReason => {\n        console.log(\"image upload failed\");\n      });\n    });\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.state = {\n      imgSrc: \"\",\n      url: \"\",\n      isImageReady: false,\n      sos: \"\",\n      lambda: \"\",\n      maxit: \"\",\n      depthlimit: \"\",\n      exlimit: \"\",\n      k: \"\"\n    };\n    this.path = \"\";\n  }\n\n  onChange(event) {\n    console.log(event.target.name);\n    var param = event.target.name;\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleSubmit(filename) {\n    console.log(\"handling submit\");\n    var formData = new FormData(); // console.log(this.fileInput.current.files[0]);\n\n    formData.append(\"file\", filename);\n    var div = document.getElementById(\"image-display\");\n    div.innerHTML = \"<Spinner animation='border' role='status'> <span className='sr-only'>Loading...</span></Spinner>\";\n\n    if (this.path == \"nba\") {\n      backend_url = \"http://localhost:8000/dataMining/NaiveBayes/\";\n    } else if (this.path == \"lra\") {\n      backend_url = \"http://localhost:8000/dataMining/LogisticRegression/\";\n      backend_url = backend_url + this.state.sos + \"/\" + this.state.lambda + \"/\" + this.state.maxit;\n      console.log(backend_url);\n    } else if (this.path == \"svm\") {\n      backend_url = \"http://localhost:8000/dataMining/SVM/\";\n      backend_url = backend_url + this.state.sos + \"/\" + this.state.lambda + \"/\" + this.state.maxit;\n      console.log(backend_url);\n    } else if (this.path == \"bag\") {\n      backend_url = \"http://localhost:8000/dataMining/Bagging/\";\n      backend_url = backend_url + this.state.depthlimit + \"/\" + this.state.exlimit;\n      console.log(backend_url);\n    } else if (this.path == \"clus\") {\n      backend_url = \"http://localhost:8000/dataMining/Clustering/\";\n      backend_url = backend_url + this.state.k;\n      console.log(backend_url);\n    } else if (this.path == \"tree\") {\n      backend_url = \"http://localhost:8000/dataMining/DecisionTree/\";\n      backend_url = backend_url + this.state.depthlimit + \"/\" + this.state.exlimit;\n      console.log(backend_url);\n    }\n\n    axios.post(backend_url, formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    }).then(e => {\n      // console.log(e);\n      var div = document.getElementById(\"image-display\");\n      div.innerText = \"\";\n      var imageOupput = \"data:image/png;base64,\" + e.data;\n      this.setState({\n        imgSrc: imageOupput,\n        isImageReady: true\n      });\n    }).catch(err => {\n      console.log(err);\n      var div = document.getElementById(\"image-display\");\n      div.innerText = \"Please check your input and parameters\";\n    });\n  }\n\n  render() {\n    // console.log(this.props.path);\n    // this.path = this.props.url.asPath.substring(8);\n    // const post = posts.find(p => p.path == this.path);\n    const {\n      post\n    } = this.props; // console.log(post)\n\n    this.path = post.path;\n\n    if (this.path == \"nba\") {\n      return __jsx(React.Fragment, null, __jsx(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, post.title), __jsx(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }), __jsx(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"col-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, __jsx(UploadCSV, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      })), __jsx(\"div\", {\n        className: \"col-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, this.state.isImageReady ? __jsx(React.Fragment, null, __jsx(\"div\", {\n        className: \"text-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, __jsx(\"button\", {\n        className: \"btn btn-secondary btn-sm\",\n        onClick: this.handleUpload,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \" \", \"Save\", \" \"))) : __jsx(React.Fragment, null), __jsx(\"div\", {\n        id: \"image-display\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }), __jsx(\"img\", {\n        id: \"image-output\",\n        src: this.state.imgSrc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }))));\n    } else if (this.path == \"lra\") {\n      return __jsx(React.Fragment, null, __jsx(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, post.title), __jsx(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }), __jsx(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"col-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, __jsx(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"form-group row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        className: \"col-sm-2 col-form-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, \" \", \"Size of Step:\", \" \"), __jsx(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, __jsx(\"input\", {\n        className: \"form-control\",\n        placeholder: \"1,2,3\",\n        type: \"text\",\n        name: \"sos\",\n        onChange: this.onChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      })), __jsx(\"label\", {\n        className: \"col-sm-2 col-form-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, \" Lambda: \"), __jsx(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, __jsx(\"input\", {\n        className: \"form-control\",\n        placeholder: \"1,2,3\",\n        type: \"text\",\n        name: \"lambda\",\n        onChange: this.onChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      })), __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }), __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }), __jsx(\"label\", {\n        className: \"col-sm-2 col-form-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, \" \", \"Number of Max iteration:\", \" \"), __jsx(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, __jsx(\"input\", {\n        className: \"form-control\",\n        placeholder: \"1,2,3\",\n        type: \"text\",\n        name: \"maxit\",\n        onChange: this.onChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }))), __jsx(UploadCSV, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }))), __jsx(\"div\", {\n        className: \"col-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, this.state.isImageReady ? __jsx(React.Fragment, null, __jsx(\"div\", {\n        className: \"text-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, __jsx(\"button\", {\n        className: \"btn btn-secondary btn-sm\",\n        onClick: this.handleUpload,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, \" \", \"Save\", \" \"))) : __jsx(React.Fragment, null), __jsx(\"div\", {\n        id: \"image-display\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }), __jsx(\"img\", {\n        id: \"image-output\",\n        src: this.state.imgSrc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }))));\n    } else if (this.path == \"svm\") {\n      return __jsx(React.Fragment, null, __jsx(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, post.title), __jsx(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }), __jsx(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"col-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, __jsx(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"form-group row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        className: \"col-sm-2 col-form-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, \" \", \"Size of Step:\", \" \"), __jsx(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, __jsx(\"input\", {\n        className: \"form-control\",\n        placeholder: \"1,2,3\",\n        type: \"text\",\n        name: \"sos\",\n        onChange: this.onChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      })), __jsx(\"label\", {\n        className: \"col-sm-2 col-form-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, \" Lambda: \"), __jsx(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, __jsx(\"input\", {\n        className: \"form-control\",\n        placeholder: \"1,2,3\",\n        type: \"text\",\n        name: \"lambda\",\n        onChange: this.onChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      })), __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }), __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }), __jsx(\"label\", {\n        className: \"col-sm-2 col-form-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }, \" \", \"Number of Max iteration:\", \" \"), __jsx(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }, __jsx(\"input\", {\n        className: \"form-control\",\n        placeholder: \"1,2,3\",\n        type: \"text\",\n        name: \"maxit\",\n        onChange: this.onChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }))), __jsx(UploadCSV, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      }))), __jsx(\"div\", {\n        className: \"col-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }, this.state.isImageReady ? __jsx(React.Fragment, null, __jsx(\"div\", {\n        className: \"text-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, __jsx(\"button\", {\n        className: \"btn btn-secondary btn-sm\",\n        onClick: this.handleUpload,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, \" \", \"Save\", \" \"))) : __jsx(React.Fragment, null), __jsx(\"div\", {\n        id: \"image-display\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }), __jsx(\"img\", {\n        id: \"image-output\",\n        src: this.state.imgSrc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      })))); // List the params of each on of them\n    } else if (this.path == \"bag\") {\n      return __jsx(React.Fragment, null, __jsx(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351\n        },\n        __self: this\n      }, post.title), __jsx(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352\n        },\n        __self: this\n      }), __jsx(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"col-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354\n        },\n        __self: this\n      }, __jsx(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"form-group row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        className: \"col-sm-2 col-form-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357\n        },\n        __self: this\n      }, \" \", \"Depth limit:\", \" \"), __jsx(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361\n        },\n        __self: this\n      }, __jsx(\"input\", {\n        className: \"form-control\",\n        placeholder: \"3\",\n        type: \"text\",\n        name: \"depthlimit\",\n        onChange: this.onChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362\n        },\n        __self: this\n      })), __jsx(\"label\", {\n        className: \"col-sm-2 col-form-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370\n        },\n        __self: this\n      }, \" \", \"Example Limit:\", \" \"), __jsx(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374\n        },\n        __self: this\n      }, __jsx(\"input\", {\n        className: \"form-control\",\n        placeholder: \"3\",\n        type: \"text\",\n        name: \"exlimit\",\n        onChange: this.onChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375\n        },\n        __self: this\n      }))), __jsx(UploadCSV, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384\n        },\n        __self: this\n      }))), __jsx(\"div\", {\n        className: \"col-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387\n        },\n        __self: this\n      }, this.state.isImageReady ? __jsx(React.Fragment, null, __jsx(\"div\", {\n        className: \"text-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390\n        },\n        __self: this\n      }, __jsx(\"button\", {\n        className: \"btn btn-secondary btn-sm\",\n        onClick: this.handleUpload,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391\n        },\n        __self: this\n      }, \" \", \"Save\", \" \"))) : __jsx(React.Fragment, null), __jsx(\"div\", {\n        id: \"image-display\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403\n        },\n        __self: this\n      }), __jsx(\"img\", {\n        id: \"image-output\",\n        src: this.state.imgSrc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404\n        },\n        __self: this\n      }))));\n    } else if (this.path == \"clus\") {\n      return __jsx(React.Fragment, null, __jsx(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412\n        },\n        __self: this\n      }, post.title), __jsx(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413\n        },\n        __self: this\n      }), __jsx(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"col-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415\n        },\n        __self: this\n      }, __jsx(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"form-group row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        className: \"col-sm-2 col-form-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418\n        },\n        __self: this\n      }, \" \", \"Number of Cluster:\", \" \"), __jsx(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422\n        },\n        __self: this\n      }, __jsx(\"input\", {\n        className: \"form-control\",\n        placeholder: \"3\",\n        type: \"text\",\n        name: \"k\",\n        onChange: this.onChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423\n        },\n        __self: this\n      }))), __jsx(UploadCSV, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432\n        },\n        __self: this\n      }))), __jsx(\"div\", {\n        className: \"col-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435\n        },\n        __self: this\n      }, this.state.isImageReady ? __jsx(React.Fragment, null, __jsx(\"div\", {\n        className: \"text-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438\n        },\n        __self: this\n      }, __jsx(\"button\", {\n        className: \"btn btn-secondary btn-sm\",\n        onClick: this.handleUpload,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439\n        },\n        __self: this\n      }, \" \", \"Save\", \" \"))) : __jsx(React.Fragment, null), __jsx(\"div\", {\n        id: \"image-display\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451\n        },\n        __self: this\n      }), __jsx(\"img\", {\n        id: \"image-output\",\n        src: this.state.imgSrc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452\n        },\n        __self: this\n      }))));\n    } else if (this.path == \"tree\") {\n      return __jsx(React.Fragment, null, __jsx(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460\n        },\n        __self: this\n      }, post.title), __jsx(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 461\n        },\n        __self: this\n      }), __jsx(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"col-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463\n        },\n        __self: this\n      }, __jsx(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"form-group row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        className: \"col-sm-2 col-form-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 466\n        },\n        __self: this\n      }, \" \", \"Depth limit:\", \" \"), __jsx(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470\n        },\n        __self: this\n      }, __jsx(\"input\", {\n        className: \"form-control\",\n        placeholder: \"3\",\n        type: \"text\",\n        name: \"depthlimit\",\n        onChange: this.onChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471\n        },\n        __self: this\n      })), __jsx(\"label\", {\n        className: \"col-sm-2 col-form-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479\n        },\n        __self: this\n      }, \" \", \"Example Limit:\", \" \"), __jsx(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483\n        },\n        __self: this\n      }, __jsx(\"input\", {\n        className: \"form-control\",\n        placeholder: \"3\",\n        type: \"text\",\n        name: \"exlimit\",\n        onChange: this.onChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484\n        },\n        __self: this\n      }))), __jsx(UploadCSV, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 493\n        },\n        __self: this\n      }))), __jsx(\"div\", {\n        className: \"col-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496\n        },\n        __self: this\n      }, this.state.isImageReady ? __jsx(React.Fragment, null, __jsx(\"div\", {\n        className: \"text-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 499\n        },\n        __self: this\n      }, __jsx(\"button\", {\n        className: \"btn btn-secondary btn-sm\",\n        onClick: this.handleUpload,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500\n        },\n        __self: this\n      }, \" \", \"Save\", \" \"))) : __jsx(React.Fragment, null), __jsx(\"div\", {\n        id: \"image-display\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 512\n        },\n        __self: this\n      }), __jsx(\"img\", {\n        id: \"image-output\",\n        src: this.state.imgSrc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 513\n        },\n        __self: this\n      }))));\n    }\n\n    return __jsx(React.Fragment, null, __jsx(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521\n      },\n      __self: this\n    }, post.title), __jsx(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 523\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"col-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 524\n      },\n      __self: this\n    }, __jsx(UploadCSV, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 525\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"col-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 527\n      },\n      __self: this\n    }, this.state.isImageReady ? __jsx(React.Fragment, null, __jsx(\"div\", {\n      className: \"text-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 530\n      },\n      __self: this\n    }, __jsx(\"button\", {\n      className: \"btn btn-secondary btn-sm\",\n      onClick: this.handleUpload,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 531\n      },\n      __self: this\n    }, \" \", \"Save\", \" \"))) : __jsx(React.Fragment, null), __jsx(\"div\", {\n      id: \"image-display\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 543\n      },\n      __self: this\n    }), __jsx(\"img\", {\n      id: \"image-output\",\n      src: this.state.imgSrc,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 544\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/seohyun/dataPex/front-end/pages/mlalgo.js"],"names":["React","axios","UploadCSV","firebase","posts","path","title","Layout","backend_url","Component","getInitialProps","query","res","post","find","console","log","constructor","props","imgSrc","state","message","substring","storage","ref","user","auth","currentUser","uid","tempDate","Date","date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","imgName","uploadTastk","child","putString","contentType","then","response","saveButton","document","getElementsByClassName","innerText","failedReason","handleSubmit","bind","url","isImageReady","sos","lambda","maxit","depthlimit","exlimit","k","onChange","event","target","name","param","setState","value","filename","formData","FormData","append","div","getElementById","innerHTML","headers","e","imageOupput","data","catch","err","render","handleUpload"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport UploadCSV from \"../components/Modal\";\nimport firebase from \"../common/firebase\";\n\nconst posts = [\n  { path: \"nba\", title: \"Naive Bayes algorithm\" },\n  { path: \"lra\", title: \"Logistic Regression algorithm\" },\n  { path: \"svm\", title: \"Support Vector Machine algorithm\" },\n  { path: \"bag\", title: \"Bagging algorithm\" },\n  { path: \"clus\", title: \"Clustering algorithm\" },\n  { path: \"tree\", title: \"Decision tree algorithm\" }\n];\nimport Layout from \"../components/layout\";\n\nvar backend_url = \"\";\n\nexport default class extends React.Component {\n  static async getInitialProps({ query, res }) {\n    const post = posts.find(post => post.path == query.path);\n    console.log(post);\n    return { post };\n  }\n\n  constructor(props) {\n    super(props);\n\n    // alert(\"ctor : \" + this.props.location);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.state = {\n      imgSrc: \"\",\n      url: \"\",\n      isImageReady: false,\n      sos: \"\",\n      lambda: \"\",\n      maxit: \"\",\n      depthlimit: \"\",\n      exlimit: \"\",\n      k: \"\"\n    };\n    this.path = \"\";\n  }\n\n  onChange(event) {\n    console.log(event.target.name);\n    var param = event.target.name;\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  handleSubmit(filename) {\n    console.log(\"handling submit\");\n    var formData = new FormData();\n    // console.log(this.fileInput.current.files[0]);\n    formData.append(\"file\", filename);\n    var div = document.getElementById(\"image-display\");\n    div.innerHTML =\n      \"<Spinner animation='border' role='status'> <span className='sr-only'>Loading...</span></Spinner>\";\n    if (this.path == \"nba\") {\n      backend_url = \"http://localhost:8000/dataMining/NaiveBayes/\";\n    } else if (this.path == \"lra\") {\n      backend_url = \"http://localhost:8000/dataMining/LogisticRegression/\";\n      backend_url =\n        backend_url +\n        this.state.sos +\n        \"/\" +\n        this.state.lambda +\n        \"/\" +\n        this.state.maxit;\n      console.log(backend_url);\n    } else if (this.path == \"svm\") {\n      backend_url = \"http://localhost:8000/dataMining/SVM/\";\n      backend_url =\n        backend_url +\n        this.state.sos +\n        \"/\" +\n        this.state.lambda +\n        \"/\" +\n        this.state.maxit;\n      console.log(backend_url);\n    } else if (this.path == \"bag\") {\n      backend_url = \"http://localhost:8000/dataMining/Bagging/\";\n      backend_url =\n        backend_url + this.state.depthlimit + \"/\" + this.state.exlimit;\n      console.log(backend_url);\n    } else if (this.path == \"clus\") {\n      backend_url = \"http://localhost:8000/dataMining/Clustering/\";\n      backend_url = backend_url + this.state.k;\n      console.log(backend_url);\n    } else if (this.path == \"tree\") {\n      backend_url = \"http://localhost:8000/dataMining/DecisionTree/\";\n      backend_url =\n        backend_url + this.state.depthlimit + \"/\" + this.state.exlimit;\n      console.log(backend_url);\n    }\n    axios\n      .post(backend_url, formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      })\n      .then(e => {\n        // console.log(e);\n\n        var div = document.getElementById(\"image-display\");\n        div.innerText = \"\";\n        var imageOupput = \"data:image/png;base64,\" + e.data;\n        this.setState({\n          imgSrc: imageOupput,\n          isImageReady: true\n        });\n      })\n      .catch(err => {\n        console.log(err);\n\n        var div = document.getElementById(\"image-display\");\n        div.innerText = \"Please check your input and parameters\";\n      });\n  }\n\n  handleUpload = () => {\n    const { imgSrc } = this.state;\n    let message = this.state.imgSrc.substring(22);\n\n    // console.log(this.state.imgSrc);\n    // console.log(message);\n\n    const storage = firebase.storage().ref();\n    const user = firebase.auth().currentUser.uid;\n    var tempDate = new Date();\n    var date =\n      tempDate.getFullYear() +\n      \" \" +\n      (tempDate.getMonth() + 1) +\n      \" \" +\n      tempDate.getDate() +\n      \" \" +\n      tempDate.getHours() +\n      \":\" +\n      tempDate.getMinutes() +\n      \":\" +\n      tempDate.getSeconds();\n\n    var imgName = user + \"/\" + date + \"_ML_image.png\";\n    const uploadTastk = firebase\n      .storage()\n      .ref()\n      .child(imgName)\n      .putString(message, \"base64\", { contentType: \"image/png\" });\n    uploadTastk.then(\n      response => {\n        console.log(\"image upload success\");\n        var saveButton = document.getElementsByClassName('btn btn-secondary btn-sm');\n        saveButton.innerText = 'SAVED!';\n\n      },\n      failedReason => {\n        console.log(\"image upload failed\");\n      }\n    );\n  };\n\n  render() {\n    // console.log(this.props.path);\n    // this.path = this.props.url.asPath.substring(8);\n    // const post = posts.find(p => p.path == this.path);\n    const { post } = this.props;\n    // console.log(post)\n    this.path = post.path;\n    if (this.path == \"nba\") {\n      return (\n        <>\n          <h1>{post.title}</h1>\n          <hr></hr>\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <UploadCSV onSubmit={this.handleSubmit}></UploadCSV>\n            </div>\n            <div className=\"col-6\">\n              {this.state.isImageReady ? (\n                <>\n                  <div className=\"text-right\">\n                    <button\n                      className=\"btn btn-secondary btn-sm\"\n                      onClick={this.handleUpload}\n                    >\n                      {\" \"}\n                      Save{\" \"}\n                    </button>\n                  </div>\n                </>\n              ) : (\n                <></>\n              )}\n              <div id=\"image-display\"></div>\n              <img id=\"image-output\" src={this.state.imgSrc}></img>\n            </div>\n          </div>\n        </>\n      );\n    } else if (this.path == \"lra\") {\n      return (\n        <>\n          <h1>{post.title}</h1>\n          <hr></hr>\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <form>\n                <div className=\"form-group row\">\n                  <label className=\"col-sm-2 col-form-label\">\n                    {\" \"}\n                    Size of Step:{\" \"}\n                  </label>\n                  <div className=\"col-sm-10\">\n                    <input\n                      className=\"form-control\"\n                      placeholder=\"1,2,3\"\n                      type=\"text\"\n                      name=\"sos\"\n                      onChange={this.onChange.bind(this)}\n                    />\n                  </div>\n                  <label className=\"col-sm-2 col-form-label\"> Lambda: </label>\n                  <div className=\"col-sm-10\">\n                    <input\n                      className=\"form-control\"\n                      placeholder=\"1,2,3\"\n                      type=\"text\"\n                      name=\"lambda\"\n                      onChange={this.onChange.bind(this)}\n                    />\n                  </div>\n                  <br />\n                  <br />\n                  <label className=\"col-sm-2 col-form-label\">\n                    {\" \"}\n                    Number of Max iteration:{\" \"}\n                  </label>\n                  <div className=\"col-sm-10\">\n                    <input\n                      className=\"form-control\"\n                      placeholder=\"1,2,3\"\n                      type=\"text\"\n                      name=\"maxit\"\n                      onChange={this.onChange.bind(this)}\n                    />\n                  </div>\n                </div>\n                <UploadCSV onSubmit={this.handleSubmit}></UploadCSV>\n              </form>\n            </div>\n            <div className=\"col-6\">\n              {this.state.isImageReady ? (\n                <>\n                  <div className=\"text-right\">\n                    <button\n\n                      className=\"btn btn-secondary btn-sm\"\n                      onClick={this.handleUpload}\n                    >\n                      {\" \"}\n                      Save{\" \"}\n                    </button>\n                  </div>\n                </>\n              ) : (\n                <></>\n              )}\n              <div id=\"image-display\"></div>\n              <img id=\"image-output\" src={this.state.imgSrc}></img>\n            </div>\n          </div>\n        </>\n      );\n    } else if (this.path == \"svm\") {\n      return (\n        <>\n          <h1>{post.title}</h1>\n          <hr></hr>\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <form>\n                <div className=\"form-group row\">\n                  <label className=\"col-sm-2 col-form-label\">\n                    {\" \"}\n                    Size of Step:{\" \"}\n                  </label>\n                  <div className=\"col-sm-10\">\n                    <input\n                      className=\"form-control\"\n                      placeholder=\"1,2,3\"\n                      type=\"text\"\n                      name=\"sos\"\n                      onChange={this.onChange.bind(this)}\n                    />\n                  </div>\n                  <label className=\"col-sm-2 col-form-label\"> Lambda: </label>\n                  <div className=\"col-sm-10\">\n                    <input\n                      className=\"form-control\"\n                      placeholder=\"1,2,3\"\n                      type=\"text\"\n                      name=\"lambda\"\n                      onChange={this.onChange.bind(this)}\n                    />\n                  </div>\n                  <br />\n                  <br />\n                  <label className=\"col-sm-2 col-form-label\">\n                    {\" \"}\n                    Number of Max iteration:{\" \"}\n                  </label>\n                  <div className=\"col-sm-10\">\n                    <input\n                      className=\"form-control\"\n                      placeholder=\"1,2,3\"\n                      type=\"text\"\n                      name=\"maxit\"\n                      onChange={this.onChange.bind(this)}\n                    />\n                  </div>\n                </div>\n                <UploadCSV onSubmit={this.handleSubmit}></UploadCSV>\n              </form>\n            </div>\n            <div className=\"col-6\">\n              {this.state.isImageReady ? (\n                <>\n                  <div className=\"text-right\">\n                    <button\n                      className=\"btn btn-secondary btn-sm\"\n                      onClick={this.handleUpload}\n                    >\n                      {\" \"}\n                      Save{\" \"}\n                    </button>\n                  </div>\n                </>\n              ) : (\n                <></>\n              )}\n              <div id=\"image-display\"></div>\n              <img id=\"image-output\" src={this.state.imgSrc}></img>\n            </div>\n          </div>\n        </>\n      );\n      // List the params of each on of them\n    } else if (this.path == \"bag\") {\n      return (\n        <>\n          <h1>{post.title}</h1>\n          <hr></hr>\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <form>\n                <div className=\"form-group row\">\n                  <label className=\"col-sm-2 col-form-label\">\n                    {\" \"}\n                    Depth limit:{\" \"}\n                  </label>\n                  <div className=\"col-sm-10\">\n                    <input\n                      className=\"form-control\"\n                      placeholder=\"3\"\n                      type=\"text\"\n                      name=\"depthlimit\"\n                      onChange={this.onChange.bind(this)}\n                    />\n                  </div>\n                  <label className=\"col-sm-2 col-form-label\">\n                    {\" \"}\n                    Example Limit:{\" \"}\n                  </label>\n                  <div className=\"col-sm-10\">\n                    <input\n                      className=\"form-control\"\n                      placeholder=\"3\"\n                      type=\"text\"\n                      name=\"exlimit\"\n                      onChange={this.onChange.bind(this)}\n                    />\n                  </div>\n                </div>\n                <UploadCSV onSubmit={this.handleSubmit}></UploadCSV>\n              </form>\n            </div>\n            <div className=\"col-6\">\n              {this.state.isImageReady ? (\n                <>\n                  <div className=\"text-right\">\n                    <button\n                      className=\"btn btn-secondary btn-sm\"\n                      onClick={this.handleUpload}\n                    >\n                      {\" \"}\n                      Save{\" \"}\n                    </button>\n                  </div>\n                </>\n              ) : (\n                <></>\n              )}\n              <div id=\"image-display\"></div>\n              <img id=\"image-output\" src={this.state.imgSrc}></img>\n            </div>\n          </div>\n        </>\n      );\n    } else if (this.path == \"clus\") {\n      return (\n        <>\n          <h1>{post.title}</h1>\n          <hr></hr>\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <form>\n                <div className=\"form-group row\">\n                  <label className=\"col-sm-2 col-form-label\">\n                    {\" \"}\n                    Number of Cluster:{\" \"}\n                  </label>\n                  <div className=\"col-sm-10\">\n                    <input\n                      className=\"form-control\"\n                      placeholder=\"3\"\n                      type=\"text\"\n                      name=\"k\"\n                      onChange={this.onChange.bind(this)}\n                    />\n                  </div>\n                </div>\n                <UploadCSV onSubmit={this.handleSubmit}></UploadCSV>\n              </form>\n            </div>\n            <div className=\"col-6\">\n              {this.state.isImageReady ? (\n                <>\n                  <div className=\"text-right\">\n                    <button\n                      className=\"btn btn-secondary btn-sm\"\n                      onClick={this.handleUpload}\n                    >\n                      {\" \"}\n                      Save{\" \"}\n                    </button>\n                  </div>\n                </>\n              ) : (\n                <></>\n              )}\n              <div id=\"image-display\"></div>\n              <img id=\"image-output\" src={this.state.imgSrc}></img>\n            </div>\n          </div>\n        </>\n      );\n    } else if (this.path == \"tree\") {\n      return (\n        <>\n          <h1>{post.title}</h1>\n          <hr></hr>\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <form>\n                <div className=\"form-group row\">\n                  <label className=\"col-sm-2 col-form-label\">\n                    {\" \"}\n                    Depth limit:{\" \"}\n                  </label>\n                  <div className=\"col-sm-10\">\n                    <input\n                      className=\"form-control\"\n                      placeholder=\"3\"\n                      type=\"text\"\n                      name=\"depthlimit\"\n                      onChange={this.onChange.bind(this)}\n                    />\n                  </div>\n                  <label className=\"col-sm-2 col-form-label\">\n                    {\" \"}\n                    Example Limit:{\" \"}\n                  </label>\n                  <div className=\"col-sm-10\">\n                    <input\n                      className=\"form-control\"\n                      placeholder=\"3\"\n                      type=\"text\"\n                      name=\"exlimit\"\n                      onChange={this.onChange.bind(this)}\n                    />\n                  </div>\n                </div>\n                <UploadCSV onSubmit={this.handleSubmit}></UploadCSV>\n              </form>\n            </div>\n            <div className=\"col-6\">\n              {this.state.isImageReady ? (\n                <>\n                  <div className=\"text-right\">\n                    <button\n                      className=\"btn btn-secondary btn-sm\"\n                      onClick={this.handleUpload}\n                    >\n                      {\" \"}\n                      Save{\" \"}\n                    </button>\n                  </div>\n                </>\n              ) : (\n                <></>\n              )}\n              <div id=\"image-display\"></div>\n              <img id=\"image-output\" src={this.state.imgSrc}></img>\n            </div>\n          </div>\n        </>\n      );\n    }\n    return (\n      <>\n        <h1>{post.title}</h1>\n        <hr></hr>\n        <div className=\"row\">\n          <div className=\"col-6\">\n            <UploadCSV onSubmit={this.handleSubmit}></UploadCSV>\n          </div>\n          <div className=\"col-6\">\n            {this.state.isImageReady ? (\n              <>\n                <div className=\"text-right\">\n                  <button\n                    className=\"btn btn-secondary btn-sm\"\n                    onClick={this.handleUpload}\n                  >\n                    {\" \"}\n                    Save{\" \"}\n                  </button>\n                </div>\n              </>\n            ) : (\n              <></>\n            )}\n            <div id=\"image-display\"></div>\n            <img id=\"image-output\" src={this.state.imgSrc}></img>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}